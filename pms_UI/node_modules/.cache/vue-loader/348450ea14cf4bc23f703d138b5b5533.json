{"remainingRequest":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\pms_UI\\src\\views\\components\\projectPop\\index.vue?vue&type=template&id=1115082a&scoped=true&","dependencies":[{"path":"F:\\pms_UI\\src\\views\\components\\projectPop\\index.vue","mtime":1693362205201},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1693362179283},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}