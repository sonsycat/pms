{"remainingRequest":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\pms_oracle\\pms_UI\\src\\views\\apportionment\\database\\addEdit.vue?vue&type=style&index=0&id=f5c255ec&lang=scss&scoped=true&","dependencies":[{"path":"D:\\work\\pms_oracle\\pms_UI\\src\\views\\apportionment\\database\\addEdit.vue","mtime":1693362204000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC5lbC1kaWFsb2cgewogIG1pbi1oZWlnaHQ6IDIwJTsKICBvdmVyZmxvdzogaGlkZGVuOwogIC5lbC1kaWFsb2dfX2JvZHkgewogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMDBweCk7CiAgICBvdmVyZmxvdzogYXV0bzsKICAgIC5lbC1mb3JtLWl0ZW1fX2xhYmVsewogICAgICB3aWR0aDogODBweCAhaW1wb3J0YW50OwogICAgfQogICAgLmVsLWZvcm0taXRlbV9fY29udGVudHsKICAgICAgbWFyZ2luLWxlZnQ6IDgwcHggIWltcG9ydGFudAogICAgfQogIH0KfQo="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/apportionment/database","sourcesContent":["<template>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"50%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row :gutter=\"36\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"编码\" prop=\"code\">\n              <el-input v-model=\"form.code\" placeholder=\"系统自动生成\"  maxlength=\"50\" show-word-limit disabled />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n          <el-form-item label=\"名称\" prop=\"name\">\n            <el-input v-model=\"form.name\" placeholder=\"请输入名称\"  maxlength=\"100\" show-word-limit  />\n          </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"类型\" prop=\"type\">\n              <el-select v-model=\"form.type\" placeholder=\"请选择类型\" class=\"w100\">\n                <el-option\n                  v-for=\"dict in typeOptions\"\n                  :key=\"dict.dictValue\"\n                  :label=\"dict.dictLabel\"\n                  :value=\"dict.dictValue\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"url\" prop=\"url\">\n              <el-input v-model=\"form.url\" type=\"textarea\" placeholder=\"请输入url\" rows=\"3\" maxlength=\"225\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"用户名\" prop=\"userName\">\n              <el-input v-model=\"form.userName\" placeholder=\"请输入用户名\"  maxlength=\"225\" show-word-limit  />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"密码\" prop=\"passWord\">\n              <el-input v-model=\"form.passWord\" placeholder=\"请输入密码\"  maxlength=\"225\" show-word-limit  />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" rows=\"3\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saveLoading\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { validEmail } from'@/utils/validate'\nimport { listDatabase, getDatabase, delDatabase, addDatabase, updateDatabase, exportDatabase } from \"@/api/apportionment/database\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset();\n        if (val) {\n          this.id = val;\n          this.title = \"多源数据库设置-编辑\";\n          this.getDetailInfo();\n        } else {\n          this.id = \"\";\n          this.title = \"多源数据库设置-新增\";\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    open: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n  },\n  data() {\n    return {\n      title: \"多源数据库设置-新增\",\n      openDialog: this.open,\n      saveLoading: false,\n      // 表单参数\n      form: {},\n      typeOptions: [],\n\t  \t// 表单校验\n      rules: {\n        name: [\n          { required: true, message: \"名称不能为空\", trigger: \"change\" }\n        ],\n        type: [\n          { required: true, message: \"类型不能为空\", trigger: \"change\" }\n        ],\n        url: [\n          { required: true, message: \"url不能为空\", trigger: \"change\" }\n        ],\n        userName: [\n          { required: true, message: \"用户名不能为空\", trigger: \"change\" }\n        ],\n        passWord: [\n          { required: true, message: \"密码不能为空\", trigger: \"change\" }\n        ],\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"cost_data_source_type\").then(response => {\n      this.typeOptions = response.data;\n    });\n  },\n  methods: {\n  \tgetDetailInfo() {\n      getDatabase(this.id).then(response => {\n        console.log(response);\n        this.form = response.data;\n      });\n    },\n    /** 查询多源数据库设置列表 */\n    getList() {\n      this.loading = true;\n      listDatabase(this.queryParams).then(response => {\n        this.databaseList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 类型字典翻译\n    typeFormat(row, column) {\n      return this.selectDictLabel(this.typeOptions, row.type);\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"cancel\", false);\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        code: null,\n        name: null,\n        type: null,\n        url: null,\n        userName: null,\n        passWord: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n        this.saveLoading = true;\n          if (this.form.id != null) {\n            updateDatabase(this.form).then(response => {\n              this.msgSuccess(\"修改成功\");\n              this.$emit(\"success\", false);\n              this.saveLoading = false;\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          } else {\n            addDatabase(this.form).then(response => {\n              this.msgSuccess(\"新增成功\");\n              this.$emit(\"success\", false);\n              this.saveLoading = false;\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          }\n        }\n      });\n    },\n}};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 20%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n      .el-form-item__label{\n        width: 80px !important;\n      }\n      .el-form-item__content{\n        margin-left: 80px !important\n      }\n    }\n  }\n</style>\n"]}]}