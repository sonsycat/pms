{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\backlog\\intransit\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\backlog\\intransit\\index.vue","mtime":1682043107832},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RJbnRyYW5zaXQgfSBmcm9tICJAL2FwaS9wcm9jZXNzL21vZGVsIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYmFja2xvZyIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYmxlSGVpZ2h0OiAiYXV0byIsCiAgICAgIHNyYzogIiIsCiAgICAgIGhlaWdodDogIjUwMHB4OyIsCiAgICAgIGNvbXBvbmVudFVybDogbnVsbCwKICAgICAgLy8g6YGu572p5bGCCiAgICAgIGxvYWRpbmc6IHRydWUsCiAgICAgIC8vIOWvvOWHuumBrue9qeWxggogICAgICBleHBvcnRMb2FkaW5nOiBmYWxzZSwKICAgICAgLy8g6YCJ5Lit5pWw57uECiAgICAgIHByb2NJbnNJZHM6IFtdLAogICAgICAvLyDpnZ7ljZXkuKrnpoHnlKgKICAgICAgc2luZ2xlOiB0cnVlLAogICAgICAvLyDmtYHovazljoblj7Llr7nor53moYYKICAgICAgcHJvY2Vzc09wZW46IGZhbHNlLAogICAgICAvLyDpnZ7lpJrkuKrnpoHnlKgKICAgICAgbXVsdGlwbGU6IHRydWUsCiAgICAgIC8vIOaYvuekuuaQnOe0ouadoeS7tgogICAgICBzaG93U2VhcmNoOiB0cnVlLAogICAgICAvLyDmgLvmnaHmlbAKICAgICAgdG90YWw6IDAsCiAgICAgIC8vIOWQiOWQjOS/ruaUueiusOW9leihqOagvOaVsOaNrgogICAgICByZWNvcmRMaXN0OiBbXSwKICAgICAgLy8g5rWB56iL57yW5Y+35pWw57uECiAgICAgIHByb2NsbnNJZHNzOiBbXSwKICAgICAgLy8g5by55Ye65bGC5qCH6aKYCiAgICAgIHRpdGxlOiAiIiwKICAgICAgLy8g5piv5ZCm5pi+56S65by55Ye65bGCCiAgICAgIG9wZW46IGZhbHNlLAogICAgICAvLyDmn6Xor6Llj4LmlbAKICAgICAgcXVlcnlQYXJhbXM6IHsKICAgICAgICBwYWdlTm86IDEsCiAgICAgICAgcGFnZVNpemU6IDMwLAogICAgICAgIGNvbXBDb2RlOiBudWxsLAogICAgICAgIGRlcHRDb2RlOiBudWxsLAogICAgICAgIHN5c3RlbUlkOiAiUE1TIiwKICAgICAgICB1c2VySWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8udXNlcklkCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleWPguaVsAogICAgICBmb3JtOiB7fSwKICAgICAgLy8g6KGo5Y2V5qCh6aqMCiAgICAgIHJ1bGVzOiB7fSwKICAgICAgY29tcG9uZW50SWQ6ICIiLAogICAgICBzZWxlY3Rpb25Sb3c6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLnJlc2l6ZUhhbmRsZXIoKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMucmVzaXplSGFuZGxlcik7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsaXN0RGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmFwcC5zaWRlYmFyLm9wZW5lZDsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBsaXN0RGF0YSh2YWwpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgIHRoYXQucmVzaXplSGFuZGxlcigpOwogICAgICB9LCAzMDApOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU29ydENoYW5nZShjb2x1bW4sIHByb3AsIG9yZGVyKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbXMub3JkZXJCeUNvbHVtbiA9IGNvbHVtbi5wcm9wOwogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLmlzQXNjID0gY29sdW1uLm9yZGVyOwogICAgICB0aGlzLmdldExpc3QoKTsKICAgIH0sCiAgICByZXNpemVIYW5kbGVyKCkgewogICAgICBsZXQgYSA9IHRoaXMuJHJlZnMuc2VhcmNoLm9mZnNldEhlaWdodDsKICAgICAgbGV0IGIgPSB0aGlzLiRyZWZzLmJ0bnMub2Zmc2V0SGVpZ2h0OwogICAgICBsZXQgaCA9IGEgKyBiICsgdGhpcy4kc3RvcmUuc3RhdGUuc2V0dGluZ3MudGFibGVIZWlnaHQ7CiAgICAgIGggPSBoICsgInB4IjsKICAgICAgdGhpcy50YWJsZUhlaWdodCA9IGBjYWxjKDEwMHZoIC0gJHtofSlgOwogICAgfSwKICAgIC8qKiDmn6Xor6LlkIjlkIzkv67mlLnorrDlvZXliJfooaggKi8KICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGxpc3RJbnRyYW5zaXQodGhpcy5xdWVyeVBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgPT0gbnVsbCB8fCByZXNwb25zZS5kYXRhID09ICIiKSB7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnJlY29yZExpc3QgPSByZXNwb25zZS5kYXRhLmxpc3Q7CiAgICAgICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLmNvdW50OwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLm1zZ0Vycm9yKHJlc3BvbnNlLm1zZyk7CiAgICAgICAgfQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvKiog5pCc57Si5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVRdWVyeSgpIHsKICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYWdlTnVtID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLyoqIOmHjee9ruaMiemSruaTjeS9nCAqLwogICAgcmVzZXRRdWVyeSgpIHsKICAgICAgdGhpcy5yZXNldEZvcm0oInF1ZXJ5Rm9ybSIpOwogICAgICB0aGlzLmhhbmRsZVF1ZXJ5KCk7CiAgICB9LAogICAgLy8g54K55Ye76KGMCiAgICBoYW5kbGVSb3dDbGljayhyb3cpIHsKICAgICAgbGV0IHJlY29yZExpc3RUYWJsZSA9IHRoaXMuJHJlZnMucmVjb3JkTGlzdFRhYmxlOwogICAgICBsZXQgZmluZFJvdyA9IHRoaXMuc2VsZWN0aW9uUm93LmZpbmQoCiAgICAgICAgYyA9PiBjLnByb2NJbnNJZCA9PSByb3cucHJvY19pbnN0X2lkXwogICAgICApOwogICAgICBpZiAoZmluZFJvdykgewogICAgICAgIHJlY29yZExpc3RUYWJsZS50b2dnbGVSb3dTZWxlY3Rpb24ocm93LCBmYWxzZSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHJlY29yZExpc3RUYWJsZS5jbGVhclNlbGVjdGlvbigpOyAvL+a4heepuuWIl+ihqOeahOmAieS4rQogICAgICByZWNvcmRMaXN0VGFibGUudG9nZ2xlUm93U2VsZWN0aW9uKHJvdywgdHJ1ZSk7CiAgICB9LAogICAgLy8g5aSa6YCJ5qGG6YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7CiAgICAgIGxldCByZWNvcmRMaXN0VGFibGUgPSB0aGlzLiRyZWZzLnJlY29yZExpc3RUYWJsZTsKICAgICAgaWYgKHNlbGVjdGlvbi5sZW5ndGggPiAxKSB7CiAgICAgICAgcmVjb3JkTGlzdFRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7IC8v5riF56m65YiX6KGo55qE6YCJ5LitCiAgICAgICAgcmVjb3JkTGlzdFRhYmxlLnRvZ2dsZVJvd1NlbGVjdGlvbigKICAgICAgICAgIHNlbGVjdGlvbltzZWxlY3Rpb24ubGVuZ3RoIC0gMV0sCiAgICAgICAgICB0cnVlCiAgICAgICAgKTsgLy/lj6rmmL7npLrpgInkuK3mnIDlkI7kuIDkuKog6L+Z5pe2c2VsZWN0aW9u6L+Y5piv5aSa6YCJ55qE5YiX6KGoKOWwseaYr+S9oOmAieS4reeahOWHoOS4quaVsOaNrikKICAgICAgICBzZWxlY3Rpb24gPSBBcnJheShzZWxlY3Rpb25bc2VsZWN0aW9uLmxlbmd0aCAtIDFdKTsKICAgICAgfSBlbHNlIGlmIChzZWxlY3Rpb24ubGVuZ3RoID09PSAxKSB7CiAgICAgICAgc2VsZWN0aW9uID0gQXJyYXkoc2VsZWN0aW9uW3NlbGVjdGlvbi5sZW5ndGggLSAxXSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VsZWN0aW9uID0gW107CiAgICAgIH0KICAgICAgLy8g5pa55L6/54K55Ye76KGM5Y+W5raI6YCJ5LitCiAgICAgIHRoaXMuc2VsZWN0aW9uUm93ID0gc2VsZWN0aW9uOwogICAgICAvLyDorr7nva7ooYzpq5jkuq4KICAgICAgcmVjb3JkTGlzdFRhYmxlLnNldEN1cnJlbnRSb3coc2VsZWN0aW9uWzBdKTsKCiAgICAgIHRoaXMuc2luZ2xlID0gc2VsZWN0aW9uLmxlbmd0aCAhPT0gMTsKICAgICAgdGhpcy5tdWx0aXBsZSA9ICFzZWxlY3Rpb24ubGVuZ3RoOwogICAgICB0aGlzLnByb2NsbnNJZHNzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0ucHJvY19pbnN0X2lkXyk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBjYW5jZWwoZmxhZykgewogICAgICB0aGlzLm9wZW4gPSBmbGFnOwogICAgfSwKICAgIHN1Ym1pdFN1Y2Nlc3MoZmxhZykgewogICAgICB0aGlzLm9wZW4gPSBmbGFnOwogICAgICB0aGlzLmdldExpc3QoKTsKICAgIH0sCiAgICAvKiog5rWB6L2s5Y6G5Y+y5Yid5aeL5YyWICovCiAgICBwcm9jZXNzRXhhbWluZUZvcm0oKSB7CiAgICAgIHRoaXMuc3JjID0KICAgICAgICBgJHt0aGlzLnByb2Nlc3NVcmx9L2FwaS93Zi9wcm9jZXNzSGlzdG9yaWM/cHJvY0luc0lkPSR7dGhpcy5wcm9jbG5zSWRzc1swXX1gOwogICAgfSwKICAgIC8qKiDmtYHovazljoblj7LmjInpkq7mk43kvZwgKi8KICAgIHByb2Nlc3NFeGFtaW5lKCkgewogICAgICBjb25zb2xlLmxvZyh0aGlzLnByb2NsbnNJZHNzWzBdKTsKICAgICAgaWYgKHRoaXMucHJvY2xuc0lkc3NbMF0gPT0gbnVsbCB8fCAhdGhpcy5wcm9jbG5zSWRzc1swXSkgewogICAgICAgIHRoaXMubXNnRXJyb3IoIuayoeaciea1gei9rOWOhuWPsuaVsOaNru+8gSIpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucHJvY2Vzc0V4YW1pbmVGb3JtKCk7CiAgICAgICAgdGhpcy5wcm9jZXNzT3BlbiA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/views/backlog/intransit","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div ref=\"btns\" ></div>\n    <div ref=\"search\" >\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" :disabled=\"single\" @click=\"processExamine\">流转历史</el-button>\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">刷新</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-table  :height=\"tableHeight\" ref=\"recordListTable\" stripe v-loading=\"loading\" :data=\"recordList\" @selection-change=\"handleSelectionChange\" highlight-current-row @row-click=\"handleRowClick\"  @sort-change=\"handleSortChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n      <el-table-column label=\"标题\" align=\"left\" prop=\"title\" />\n      <el-table-column label=\"任务名称\" align=\"left\" prop=\"activityName\"/>\n      <el-table-column label=\"流程名称\" align=\"left\" prop=\"processDefinitionName\" />\n      <el-table-column label=\"办理时间\" align=\"center\" prop=\"endTime\"  width=\"250\"/>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNo\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <component v-if=\"open\" :is=\"componentUrl\" :id=\"componentId\" :proclnsIds=\"proclnsIds\" :open=\"open\" @cancel=\"cancel\" @success=\"submitSuccess\"></component>\n\n    <!-- 流转历史对话框 -->\n    <el-dialog title=\"流转历史\" :visible.sync=\"processOpen\" width=\"1200px\" append-to-body :close-on-click-modal=\"false\" custom-class=\"el-button--primary\">\n      <div v-loading=\"loading\" :style=\"'height:'+ height\">\n        <iframe :src=\"src\" frameborder=\"no\" style=\"width: 100%;height: 100%\" scrolling=\"auto\" />\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listIntransit } from \"@/api/process/model\";\n\nexport default {\n  name: \"backlog\",\n  data() {\n    return {\n      tableHeight: \"auto\",\n      src: \"\",\n      height: \"500px;\",\n      componentUrl: null,\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      procInsIds: [],\n      // 非单个禁用\n      single: true,\n      // 流转历史对话框\n      processOpen: false,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 合同修改记录表格数据\n      recordList: [],\n      // 流程编号数组\n      proclnsIdss: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNo: 1,\n        pageSize: 30,\n        compCode: null,\n        deptCode: null,\n        systemId: \"PMS\",\n        userId: this.$store.state.user.userInfo.userId\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {},\n      componentId: \"\",\n      selectionRow: []\n    };\n  },\n  created() {\n    this.getList();\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    }\n  },\n  methods: {\n    handleSortChange(column, prop, order) {\n      this.queryParams.orderByColumn = column.prop;\n      this.queryParams.isAsc = column.order;\n      this.getList();\n    },\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + this.$store.state.settings.tableHeight;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n    /** 查询合同修改记录列表 */\n    getList() {\n      this.loading = true;\n      listIntransit(this.queryParams).then(response => {\n        console.log(response);\n        if (response.code == 200) {\n          if (response.data == null || response.data == \"\") {\n          } else {\n            this.recordList = response.data.list;\n            this.total = response.data.count;\n          }\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 点击行\n    handleRowClick(row) {\n      let recordListTable = this.$refs.recordListTable;\n      let findRow = this.selectionRow.find(\n        c => c.procInsId == row.proc_inst_id_\n      );\n      if (findRow) {\n        recordListTable.toggleRowSelection(row, false);\n        return;\n      }\n      recordListTable.clearSelection(); //清空列表的选中\n      recordListTable.toggleRowSelection(row, true);\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      let recordListTable = this.$refs.recordListTable;\n      if (selection.length > 1) {\n        recordListTable.clearSelection(); //清空列表的选中\n        recordListTable.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      // 设置行高亮\n      recordListTable.setCurrentRow(selection[0]);\n\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n      this.proclnsIdss = selection.map(item => item.proc_inst_id_);\n    },\n    // 取消按钮\n    cancel(flag) {\n      this.open = flag;\n    },\n    submitSuccess(flag) {\n      this.open = flag;\n      this.getList();\n    },\n    /** 流转历史初始化 */\n    processExamineForm() {\n      this.src =\n        `${this.processUrl}/api/wf/processHistoric?procInsId=${this.proclnsIdss[0]}`;\n    },\n    /** 流转历史按钮操作 */\n    processExamine() {\n      console.log(this.proclnsIdss[0]);\n      if (this.proclnsIdss[0] == null || !this.proclnsIdss[0]) {\n        this.msgError(\"没有流转历史数据！\");\n      } else {\n        this.processExamineForm();\n        this.processOpen = true;\n      }\n    }\n  }\n};\n</script>\n"]}]}