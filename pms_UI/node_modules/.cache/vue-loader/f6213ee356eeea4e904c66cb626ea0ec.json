{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\drgs\\drgs_low_risk_mortality_index.vue?vue&type=style&index=0&id=59c37d57&lang=scss&scoped=true&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\drgs\\drgs_low_risk_mortality_index.vue","mtime":1682043105849},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC5lbC10YWJzIHsKICAuZWwtdGFic19fbmF2LXNjcm9sbCB7CiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["drgs_low_risk_mortality_index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;AACA","file":"drgs_low_risk_mortality_index.vue","sourceRoot":"src/views/drgs","sourcesContent":["<template>\n  <div class=\"app-container\" style=\"padding: 0\">\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n      <el-tab-pane label=\"科室组低风险死亡率\" name=\"tabPane1\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-table ref=\"multipleTable1\" v-loading=\"preLoading\" :data=\"dataList1\" :row-class-name=\"rowClassName\" :row-style=\"rowStyle\" border stripe>\n              <el-table-column align=\"left\" label=\"科室组\" prop=\"dept\"/>\n              <el-table-column align=\"center\" label=\"本期\" prop=\"currentPeriod\"/>\n              <el-table-column align=\"center\" label=\"同期\" prop=\"correspondPeriod\"/>\n              <el-table-column align=\"center\" label=\"增长/下降\">\n                <template v-slot=\"scope\">\n                  <div style=\"width: 75px;margin-left: calc((100% - 75px)/2)\">\n                <span v-if=\"scope.row.currentPeriod - scope.row.correspondPeriod >= 0\" style=\"float: left\">\n                  <el-tag type=\"success\"><i class=\"el-icon-top\" style=\"font-weight: bold;\"/></el-tag>\n                </span>\n                    <span v-else style=\"float: left\">\n                  <el-tag type=\"danger\"><i class=\"el-icon-bottom\" style=\"font-weight: bold;\"/></el-tag>\n                </span>\n                    <span style=\"float: right\">{{calPercent(scope.row.currentPeriod,scope.row.correspondPeriod)}}%</span>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-col>\n          <el-col :span=\"12\">\n            <div ref=\"chartContainer1\" style=\"height:600px;width: calc(44vw)\"></div>\n          </el-col>\n        </el-row>\n      </el-tab-pane>\n      <el-tab-pane label=\"全院\" name=\"tabPane2\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-table ref=\"multipleTable2\" v-loading=\"afterLoading\" :data=\"dataList2\" :row-class-name=\"rowClassName\" :row-style=\"rowStyle\" border stripe>\n              <el-table-column align=\"left\" label=\"指标\" prop=\"target\"/>\n              <el-table-column align=\"center\" label=\"本期\" prop=\"currentPeriod\"/>\n              <el-table-column align=\"center\" label=\"同期\" prop=\"correspondPeriod\"/>\n              <el-table-column align=\"center\" label=\"增长/下降\">\n                <template v-slot=\"scope\">\n                  <div style=\"width: 70px;margin-left: calc((100% - 70px)/2)\">\n                  <span v-if=\"scope.row.currentPeriod - scope.row.correspondPeriod >= 0\" style=\"float: left\">\n                    <el-tag type=\"success\"><i class=\"el-icon-top\" style=\"font-weight: bold;\"/></el-tag>\n                  </span>\n                    <span v-else style=\"float: left\">\n                    <el-tag type=\"danger\"><i class=\"el-icon-bottom\" style=\"font-weight: bold;\"/></el-tag>\n                  </span>\n                    <span style=\"float: right\">{{calPercent(scope.row.currentPeriod,scope.row.correspondPeriod)}}%</span>\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-col>\n          <el-col :span=\"12\">\n            <div ref=\"chartContainer2\" style=\"height:500px;width: calc(44vw);\"></div>\n          </el-col>\n        </el-row>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"report\",\n  components: {},\n  data() {\n    return {\n      activeName: 'tabPane1',\n      preLoading: false,\n      afterLoading: false,\n      single: true,\n      selectionRow: [],\n      dataList1: [\n        {\n          \"dept\": \"血液内科\",\n          \"currentPeriod\": 0.13,\n          \"correspondPeriod\": 0.15,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"神经内科\",\n          \"currentPeriod\": 0.22,\n          \"correspondPeriod\": 0.21,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"骨科\",\n          \"currentPeriod\": 0.11,\n          \"correspondPeriod\": 0.08,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"（显微）手外科\",\n          \"currentPeriod\": 0.17,\n          \"correspondPeriod\": 0.11,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"介入血管外科\",\n          \"currentPeriod\": 0.10,\n          \"correspondPeriod\": 0.06,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"神经外科\",\n          \"currentPeriod\": 0.04,\n          \"correspondPeriod\": 0.03,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"康复医学科\",\n          \"currentPeriod\": 0.02,\n          \"correspondPeriod\": 0.00,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"急诊科\",\n          \"currentPeriod\": 0.53,\n          \"correspondPeriod\": 0.53,\n          \"change\": \"100%\"\n        },\n        {\n          \"dept\": \"儿科\",\n          \"currentPeriod\": 0.02,\n          \"correspondPeriod\": 0.01,\n          \"change\": \"100%\"\n        }\n      ],\n      dataList2: [\n        {\n          \"target\": \"低风险死亡率\",\n          \"currentPeriod\": 0.26,\n          \"correspondPeriod\": 0.22,\n          \"change\": \"100%\"\n        },\n        {\n          \"target\": \"中低风险死亡率\",\n          \"currentPeriod\": 0.31,\n          \"correspondPeriod\": 0.35,\n          \"change\": \"100%\"\n        }\n      ]\n    };\n  },\n  created() {\n    this.$nextTick(() => {\n      this.initChart(this.dataList1, 'chartContainer1', '科室组低风险死亡率', ['dept', 'currentPeriod', 'correspondPeriod'])\n      this.initChart(this.dataList2, 'chartContainer2', '全院', ['target', 'currentPeriod', 'correspondPeriod'])\n    })\n  },\n  computed: {},\n  mounted() {\n  },\n  methods: {\n    handleClick(tab, event) {\n\n    },\n    calPercent(val1, val2){\n      if(val1 - val2 > 0){\n        return ((val1 - val2)/val1*100).toFixed(2)\n      }else{\n        return ((val2 - val1)/val2*100).toFixed(2)\n      }\n    },\n    initChart(data, chartRef, chartTitle, axisArr) {\n      let myChart = this.$echarts.init(this.$refs[chartRef], null, {\n        renderer: 'canvas',\n        useDirtyRect: false\n      });\n      // 绘制图表\n      myChart.setOption({\n        title: {\n          text: chartTitle\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {},\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01]\n        },\n        yAxis: {\n          type: 'category',\n          data: data.map(obj => {return obj[axisArr[0]]}).reverse()\n        },\n        color: ['#66b3ff', '#91cc75'],\n        series: [\n          {\n            name: '2023',\n            type: 'bar',\n            data: data.map(obj => {return obj[axisArr[1]]}).reverse()\n          },\n          {\n            name: '2022',\n            type: 'bar',\n            data: data.map(obj => {return obj[axisArr[2]]}).reverse()\n          }\n        ]\n      });\n    },\n    rowStyle({row, rowIndex}) {\n      Object.defineProperty(row, 'rowIndex', {\n        value: rowIndex,\n        writable: true,\n        enumerable: false,\n      })\n    },\n    rowClassName({row, rowIndex}) {\n      let rowName = \"\",\n        findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex);\n      if (findRow) {\n        rowName = \"current-row \";\n      }\n      return rowName;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-tabs {\n  .el-tabs__nav-scroll {\n    padding-left: 20px;\n  }\n}\n</style>\n\n"]}]}