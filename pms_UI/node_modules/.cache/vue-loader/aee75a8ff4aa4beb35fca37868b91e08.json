{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\components\\TopNav\\index.vue?vue&type=style&index=0&id=35f3a2c1&lang=scss&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\components\\TopNav\\index.vue","mtime":1693362203455},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1tZW51LS1ob3Jpem9udGFsID4gLmVsLW1lbnUtaXRlbSB7CiAgZmxvYXQ6IGxlZnQ7CiAgaGVpZ2h0OiA1MHB4OwogIGxpbmUtaGVpZ2h0OiA1MHB4OwogIG1hcmdpbjogMDsKICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgY29sb3I6ICM5OTkwOTM7CiAgcGFkZGluZzogMCA1cHg7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KCi5lbC1tZW51LS1ob3Jpem9udGFsID4gLmVsLW1lbnUtaXRlbS5pcy1hY3RpdmUgewogIGJhY2tncm91bmQtY29sb3I6ICN7InZhcigtLWFjdGl2ZUJnQykifSAhaW1wb3J0YW50OwogIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjeyJ2YXIoLS10aGVtZSkifTsKICBjb2xvcjogIzMwMzEzMzsKfQoKLyogc3VibWVudSBpdGVtICovCi5lbC1tZW51LS1ob3Jpem9udGFsID4gLmVsLXN1Ym1lbnUgLmVsLXN1Ym1lbnVfX3RpdGxlIHsKICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDsKICBsaW5lLWhlaWdodDogNTBweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/TopNav","sourcesContent":["<template>\n  <el-menu\n    :default-active=\"activeMenu\"\n    mode=\"horizontal\"\n    @select=\"handleSelect\"\n    :background-color= \"getColor()\" \n    :style=\"{'--activeBgC': activeBgC}\" \n    :text-color=\"getColor2()\"\n    :active-text-color=\"getColor2()\"\n  >\n    <template v-for=\"(item, index) in topMenus\">\n      <el-menu-item :style=\"{'--theme': theme}\" :index=\"item.path\" :key=\"index\" v-if=\"index < visibleNumber\"\n        ><svg-icon :icon-class=\"item.meta.icon\" />\n        {{ item.meta.title }}</el-menu-item\n      >\n    </template>\n\n    <!-- 顶部菜单超出数量折叠 -->\n    <el-submenu index=\"more\" v-if=\"topMenus.length > visibleNumber\">\n      <template slot=\"title\">更多菜单</template>\n      <template v-for=\"(item, index) in topMenus\">\n        <el-menu-item\n          :index=\"item.path\"\n          :key=\"index\"\n          v-if=\"index >= visibleNumber\"\n          ><svg-icon :icon-class=\"item.meta.icon\" />\n          {{ item.meta.title }}</el-menu-item\n        >\n      </template>\n    </el-submenu>\n  </el-menu>\n</template>\n\n<script>\nimport { constantRoutes } from \"@/router\";\nimport { mapGetters, mapState } from \"vuex\";\nimport variables from \"@/assets/styles/variables.scss\";\n\nexport default {\n  data() {\n    return {\n      // 顶部栏初始数\n      visibleNumber: 5,\n      // 是否为首次加载\n      isFrist: false,\n      // 当前激活菜单的 index\n      currentIndex: undefined,\n      activeBgC: \"\"\n    };\n  },\n  watch: {\n    theme: {\n      handler(val) {\n        this.activeBgC = this.mixColor(this.theme, 0.2);\n\n        console.log(\n          this.mixColor(this.theme, 0.2),\n          \"mixColor(this.theme, 0.2)\"\n        );\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  computed: {\n    ...mapState([\"settings\"]),\n    variables() {\n      return variables;\n    },\n    theme(val) {\n      return this.$store.state.settings.theme;\n    },\n    // 顶部显示菜单\n    topMenus() {\n      let topMenus = [];\n      this.routers.map(menu => {\n        if (menu.hidden !== true) {\n          // 兼容顶部栏一级菜单内部跳转\n          if (menu.path === \"/\") {\n            topMenus.push(menu.children[0]);\n          } else {\n            topMenus.push(menu);\n          }\n        }\n      });\n      return topMenus;\n    },\n    // 所有的路由信息\n    routers() {\n      return this.$store.state.permission.topbarRouters;\n    },\n    // 设置子路由\n    childrenMenus() {\n      var childrenMenus = [];\n      this.routers.map(router => {\n        for (var item in router.children) {\n          if (router.children[item].parentPath === undefined) {\n            if (router.path === \"/\") {\n              router.children[item].path =\n                \"/redirect/\" + router.children[item].path;\n            } else {\n              if (!this.ishttp(router.children[item].path)) {\n                router.children[item].path =\n                  router.path + \"/\" + router.children[item].path;\n              }\n            }\n            router.children[item].parentPath = router.path;\n          }\n          childrenMenus.push(router.children[item]);\n        }\n      });\n      return constantRoutes.concat(childrenMenus);\n    },\n    // 默认激活的菜单\n    activeMenu() {\n      const path = this.$route.path;\n      let activePath = this.routers[0].path;\n      if (path.lastIndexOf(\"/\") > 0) {\n        const tmpPath = path.substring(1, path.length);\n        activePath = \"/\" + tmpPath.substring(0, tmpPath.indexOf(\"/\"));\n      } else if (\"/index\" == path || \"\" == path) {\n        if (!this.isFrist) {\n          this.isFrist = true;\n        } else {\n          activePath = \"index\";\n        }\n      }\n      var routes = this.activeRoutes(activePath);\n      if (routes.length === 0) {\n        activePath = this.currentIndex || this.routers[0].path;\n        this.activeRoutes(activePath);\n      }\n      return activePath;\n    }\n  },\n  beforeMount() {\n    window.addEventListener(\"resize\", this.setVisibleNumber);\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.setVisibleNumber);\n  },\n  mounted() {\n    this.setVisibleNumber();\n  },\n  methods: {\n    getColorChannels(color) {\n      color = color.replace(\"#\", \"\");\n      if (/^[0-9a-fA-F]{3}$/.test(color)) {\n        color = color.split(\"\");\n        for (var i = 2; i >= 0; i--) {\n          color.splice(i, 0, color[i]);\n        }\n        color = color.join(\"\");\n      }\n      if (/^[0-9a-fA-F]{6}$/.test(color)) {\n        return {\n          red: parseInt(color.slice(0, 2), 16),\n          green: parseInt(color.slice(2, 4), 16),\n          blue: parseInt(color.slice(4, 6), 16)\n        };\n      } else {\n        return {\n          red: 255,\n          green: 255,\n          blue: 255\n        };\n      }\n    },\n    mixColor(color, percent) {\n      var _getColorChannels = this.getColorChannels(color),\n        red = _getColorChannels.red,\n        green = _getColorChannels.green,\n        blue = _getColorChannels.blue;\n\n      if (percent > 0) {\n        // shade given color\n        red *= 1 - percent;\n        green *= 1 - percent;\n        blue *= 1 - percent;\n      } else {\n        // tint given color\n        red += (255 - red) * percent;\n        green += (255 - green) * percent;\n        blue += (255 - blue) * percent;\n      }\n      return (\n        \"rgb(\" +\n        Math.round(red) +\n        \", \" +\n        Math.round(green) +\n        \", \" +\n        Math.round(blue) +\n        \")\"\n      );\n    },\n    getColor() {\n      if (\n        this.$store.state.settings.sideTheme === \"theme-dark\" ||\n        this.$store.state.settings.sideTheme === \"theme-blue3\"\n      ) {\n        return variables.menuLightBg;\n      } else if (this.$store.state.settings.sideTheme === \"theme-light\") {\n        return variables.menuLightBg;\n      } else if (\n        (this.$store.state.settings.sideTheme === \"theme-blue\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue2\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue4\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue5\") &&\n        this.$store.state.settings.theme === \"#1890FF\"\n      ) {\n        return variables.menuBlue;\n      } else if (\n        (this.$store.state.settings.sideTheme === \"theme-blue\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue2\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue4\" ||\n          this.$store.state.settings.sideTheme === \"theme-blue5\") &&\n        this.$store.state.settings.theme != \"#1890FF\"\n      ) {\n        return this.$store.state.settings.theme;\n      }\n    },\n    getColor2() {\n      if (\n        this.$store.state.settings.sideTheme === \"theme-dark\" ||\n        this.$store.state.settings.sideTheme === \"theme-blue3\"\n      ) {\n        return \"rgba(0,0,0,.65)\";\n      } else if (this.$store.state.settings.sideTheme === \"theme-light\") {\n        return \"rgba(0,0,0,.65)\";\n      } else if (\n        this.$store.state.settings.sideTheme === \"theme-blue\" ||\n        this.$store.state.settings.sideTheme === \"theme-blue2\" ||\n        this.$store.state.settings.sideTheme === \"theme-blue4\" ||\n        this.$store.state.settings.sideTheme === \"theme-blue5\"\n      ) {\n        return \"#fff\";\n      }\n    },\n    // 根据宽度计算设置显示栏数\n    setVisibleNumber() {\n      const width = document.body.getBoundingClientRect().width / 3;\n      this.visibleNumber = parseInt(width / 85);\n    },\n    // 菜单选择事件\n    handleSelect(key, keyPath) {\n      this.currentIndex = key;\n      if (this.ishttp(key)) {\n        // http(s):// 路径新窗口打开\n        window.open(key, \"_blank\");\n      } else if (key.indexOf(\"/redirect\") !== -1) {\n        // /redirect 路径内部打开\n        this.$router.push({ path: key.replace(\"/redirect\", \"\") });\n      } else {\n        // 显示左侧联动菜单\n        this.activeRoutes(key);\n      }\n    },\n    // 当前激活的路由\n    activeRoutes(key) {\n      var routes = [];\n      if (this.childrenMenus && this.childrenMenus.length > 0) {\n        this.childrenMenus.map(item => {\n          if (key == item.parentPath || (key == \"index\" && \"\" == item.path)) {\n            routes.push(item);\n          }\n        });\n      }\n      if (routes.length > 0) {\n        this.$store.commit(\"SET_SIDEBAR_ROUTERS\", routes);\n      }\n      return routes;\n    },\n    ishttp(url) {\n      return url.indexOf(\"http://\") !== -1 || url.indexOf(\"https://\") !== -1;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.el-menu--horizontal > .el-menu-item {\n  float: left;\n  height: 50px;\n  line-height: 50px;\n  margin: 0;\n  border-bottom: 3px solid transparent;\n  color: #999093;\n  padding: 0 5px;\n  margin: 0 10px;\n}\n\n.el-menu--horizontal > .el-menu-item.is-active {\n  background-color: #{\"var(--activeBgC)\"} !important;\n  border-bottom: 3px solid #{\"var(--theme)\"};\n  color: #303133;\n}\n\n/* submenu item */\n.el-menu--horizontal > .el-submenu .el-submenu__title {\n  height: 50px !important;\n  line-height: 50px !important;\n}\n</style>\n"]}]}