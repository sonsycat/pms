{"remainingRequest":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\pms_UI\\src\\views\\skill\\technology\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\pms_UI\\src\\views\\skill\\technology\\index.vue","mtime":1693362206185},{"path":"F:\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909992},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RUZWNobm9sb2d5LCBnZXRUZWNobm9sb2d5LCBkZWxUZWNobm9sb2d5LCBhZGRUZWNobm9sb2d5LCB1cGRhdGVUZWNobm9sb2d5LCBleHBvcnRUZWNobm9sb2d5IH0gZnJvbSAiQC9hcGkvc2tpbGwvdGVjaG5vbG9neSI7CmltcG9ydCBhZGRFZGl0IGZyb20gIi4vYWRkRWRpdCI7CmltcG9ydCBhZGRFZGl0MSBmcm9tICIuL2FkZEVkaXQxIjsKaW1wb3J0IHsgdHJlZVJvb20sIGdldEVtcExpc3QgfSBmcm9tICJAL2FwaS91bnRpbCI7CmltcG9ydCB7IGxpc3RQZXJzb24sIGdldFBlcnNvbiwgZGVsUGVyc29uLCBhZGRQZXJzb24sIHVwZGF0ZVBlcnNvbiwgZXhwb3J0UGVyc29uIH0gZnJvbSAiQC9hcGkvc2tpbGwvcGVyc29uIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGVjaG5vbG9neSIsCiAgY29tcG9uZW50czogewphZGRFZGl0LGFkZEVkaXQxCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGVjaG5vQ29kZTogbnVsbCwKICAgICAgcG9zdEZvcm06IHt9LAogICAgICB0aXRsZTE6ICLmlrDkuJrliqHmlrDmioDmnK8gLyDlj4LliqDkurrlkZgiLAogICAgICAvL+aJk+WNsOWPguaVsAogICAgICBzcmM6ICIiLAogICAgICBoZWlnaHQ6ICI1MDBweDsiLAogICAgICBwcm9jZXNzT3BlbjogZmFsc2UsCiAgICAgIHRhYmxlSGVpZ2h0OiAiYXV0byIsCiAgICAgIC8vIOmBrue9qeWxggogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICAvLyDlr7zlh7rpga7nvanlsYIKICAgICAgZXhwb3J0TG9hZGluZzogZmFsc2UsCiAgICAgIC8vIOmAieS4reaVsOe7hAogICAgICBpZHM6IFtdLAogICAgICBwcm9jbG5zSWRzOiBbXSwKICAgICAgdGVjaG5vQ29kZXM6IFtdLAogICAgICAvLyDpnZ7ljZXkuKrnpoHnlKgKICAgICAgc2luZ2xlOiB0cnVlLAogICAgICBzcHp0OiB0cnVlLAogICAgICAvLyDpnZ7lpJrkuKrnpoHnlKgKICAgICAgbXVsdGlwbGU6IHRydWUsCiAgICAgIC8vIOaYvuekuuaQnOe0ouadoeS7tgogICAgICBzaG93U2VhcmNoOiB0cnVlLAogICAgICAvLyDmgLvmnaHmlbAKICAgICAgdG90YWw6IDAsCiAgICAgIC8vIOaWsOS4muWKoeaWsOaKgOacr+ihqOagvOaVsOaNrgogICAgICB0ZWNobm9sb2d5TGlzdDogW10sCiAgICAgIHNlbGVjdGlvblJvdzogW10sCiAgICAgIC8vIOW8ueWHuuWxguagh+mimAogICAgICB0aXRsZTogIiIsCiAgICAgIC8vIOaYr+WQpuaYvuekuuW8ueWHuuWxggogICAgICBvcGVuOiBmYWxzZSwKICAgICAgb3BlbjE6IGZhbHNlLAogICAgICBvcGVuMjogZmFsc2UsCiAgICAgIC8vIOawtOW5s+Wtl+WFuAogICAgICB0ZWNobm9UeXBlT3B0aW9uczogW10sCiAgICAgIC8vIOi0n+i0o+S6uuWtpuWOhuWtl+WFuAogICAgICBlZHVjYXRpb25PcHRpb25zOiBbXSwKICAgICAgLy8g6LSf6LSj5Lq65LiT5Lia5a2X5YW4CiAgICAgIHNwZWNpYWxPcHRpb25zOiBbXSwKICAgICAgLy8g6IGM56ew5a2X5YW4CiAgICAgIHRpdGxlQ29kZU9wdGlvbnM6IFtdLAogICAgICAvLyDmlYjmnpzlrZflhbgKICAgICAgZWZmZWN0T3B0aW9uczogW10sCiAgICAgIC8vIOaWsOS4muWKoeaWsOaKgOacr+Wtl+WFuAogICAgICB0ZWNobm9PcHRpb25zOiBbXSwKICAgICAgZGVwdExpc3Q6IFtdLAogICAgICAvL+aXtumXtOiMg+WbtAogICAgICBkYXRlcmFuZ2VUaW1lOiBbXSwKICAgICAgLy8g54q25oCB5a2X5YW4CiAgICAgIHN0YXRlT3B0aW9uczogW10sCiAgICAgIC8vIOafpeivouWPguaVsAogICAgICBxdWVyeVBhcmFtczogewogICAgICAgIHBhZ2VOdW06IDEsCiAgICAgICAgcGFnZVNpemU6IDMwLAogICAgICAgIGNvbXBDb2RlOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnVzZXJJbmZvLmRlcHRJZCwKICAgICAgICBhY2NvdW50Q29kZTogbnVsbCwKICAgICAgICB0ZWNobm9Db2RlOiBudWxsLAogICAgICAgIHRlY2hub05hbWU6IG51bGwsCiAgICAgICAgZGV2ZWxvcFRpbWU6IG51bGwsCiAgICAgICAgdGVjaG5vVHlwZTogbnVsbCwKICAgICAgICBkZXB0Q29kZTogbnVsbCwKICAgICAgICBjb21wbGV0ZU51bTogbnVsbCwKICAgICAgICBwZXJzb25Db2RlOiBudWxsLAogICAgICAgIGVkdWNhdGlvbjogbnVsbCwKICAgICAgICBzcGVjaWFsOiBudWxsLAogICAgICAgIHRpdGxlQ29kZTogbnVsbCwKICAgICAgICBlZmZlY3Q6IG51bGwsCiAgICAgICAgdGVjaG5vOiBudWxsLAogICAgICAgIHByb2dyZXNzOiBudWxsLAogICAgICAgIGFubmV4OiBudWxsLAogICAgICAgIGF1ZGl0U3RhdGU6IG51bGwsCiAgICAgICAgcHJvY2VkdXJlSWQ6IG51bGwsCiAgICAgIH0sCiAgICAgIC8vIOafpeivouWPguaVsAogICAgICBxdWVyeVBhcmFtczE6IHsKICAgICAgICBjb21wQ29kZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlci51c2VySW5mby5kZXB0SWQsCiAgICAgICAgdGVjaG5vQ29kZTogbnVsbCwKICAgICAgICB0ZWNobm9UeXBlOiAiNSIsCiAgICAgICAgcGVyc29uTGlzdDogW10KICAgICAgfSwKICAgICAgLy8g5oqA5pyv5Y+C5LiO5Lq66KGo5qC85pWw5o2uCiAgICAgIHBlcnNvbkxpc3Q6IFtdLAogICAgICAvLyDooajljZXlj4LmlbAKICAgICAgZm9ybToge30sCiAgICAgIC8vIOihqOWNleagoemqjAogICAgICBydWxlczogewogICAgICAgIHRlY2hub0NvZGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLnvJbnoIHkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgdGVjaG5vTmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuWQjeensOS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgICB0ZWNobm9UeXBlOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5rC05bmz5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImNoYW5nZSIgfQogICAgICAgIF0sCiAgICAgICAgZGVwdENvZGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLnp5HlrqTnvJbnoIHkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgY29tcGxldGVOdW06IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLlrozmiJDkvovmlbDkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgcGVyc29uQ29kZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIui0n+i0o+S6uuS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgICBlZHVjYXRpb246IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLotJ/otKPkurrlrabljobkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9CiAgICAgICAgXSwKICAgICAgICBzcGVjaWFsOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6LSf6LSj5Lq65LiT5Lia5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImNoYW5nZSIgfQogICAgICAgIF0sCiAgICAgICAgdGl0bGVDb2RlOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6IGM56ew5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImNoYW5nZSIgfQogICAgICAgIF0sCiAgICAgICAgZWZmZWN0OiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5pWI5p6c5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImNoYW5nZSIgfQogICAgICAgIF0sCiAgICAgICAgdGVjaG5vOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5paw5Lia5Yqh5paw5oqA5pyv5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImNoYW5nZSIgfQogICAgICAgIF0sCiAgICAgICAgcHJvZ3Jlc3M6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLov5vlsZXmg4XlhrXkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgICB0aGlzLmdldERpY3RzKCJTS0lMTF9URUNITk9fVFlQRSIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLnRlY2hub1R5cGVPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygiREUwMi4wMS4wNDEuMDAiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5lZHVjYXRpb25PcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygiREUwMi4wMS4wMzcuMDAiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5zcGVjaWFsT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICAgIHRoaXMuZ2V0RGljdHMoIkRFMDIuMDEuMDUwLjAwIikudGhlbihyZXNwb25zZSA9PiB7CiAgICAgIHRoaXMudGl0bGVDb2RlT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICAgIHRoaXMuZ2V0RGljdHMoIlNLSUxMX0VGRkVDVCIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLmVmZmVjdE9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmdldERpY3RzKCJTS0lMTF9URUNITk8iKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy50ZWNobm9PcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygiYXNzZXRfYWR1aXRfc3RhdGUiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5zdGF0ZU9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICB3YXRjaDp7CiAgICAiZm9ybS5jb21wQ29kZSI6IHsKICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICB0aGlzLmdldFRyZWVEZXB0KHZhbCk7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfSwKICAgIGxpc3REYXRhKHZhbCkgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgdGhhdC5yZXNpemVIYW5kbGVyKCk7CiAgICAgIH0sIDMwMCk7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLnJlc2l6ZUhhbmRsZXIoKTsKICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInJlc2l6ZSIsIHRoaXMucmVzaXplSGFuZGxlcik7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNsaWNrVGFibGVDb2RlKGRhdGEpIHsKICAgICAgLy8g6YCJ5Lit5b2T5YmN6KGMCiAgICAgIHRoaXMucm93Q2xpY2soZGF0YSwgZmFsc2UpOwogICAgICB0aGlzLmhhbmRsZVVwZGF0ZShkYXRhKTsKICAgIH0sCiAgICAvKiog5paw5aKe5re75Yqg6KGMICovCiAgICBoYW5kbGVBZGRUYWJsZSgpIHsKICAgICAgbGV0IHBhcmFtcz17CiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuYWNjb3VudEluZm8uZGVwdElkLAogICAgICAgIG5vd0RhdGU6dGhpcy5mb3JtLm5vd0RhdGUKICAgICAgfQogICAgICBsZXQgdGFibENvbD17CiAgICAgICAgLy8gZGVwdENvZGU6dGhpcy5mb3JtLmRlcHRDb2RlLAogICAgICAgIC8vIG5vd0RhdGU6dGhpcy5mb3JtLm5vd0RhdGUsCiAgICAgICAgLy8gcHJvamVjdENvZGU6bnVsbAogICAgICB9CiAgICAgIHRoaXMucGVyc29uTGlzdC5wdXNoKHRhYmxDb2wpOwogICAgICB0aGlzLnRhYmxlU2Nyb2xsTGVmdCgiY29zdE51bUxpc3RUYWJsZSIpCiAgICB9LAogICAgaGFuZGxlQWRkRGVsZXRlKGlkeCkgewogICAgICB0aGlzLnBlcnNvbkxpc3Quc3BsaWNlKGlkeCwgMSk7CiAgICB9LAogICAgLy/ojrflj5bnp5HlrqTliJfooagKICAgIGdldFRyZWVEZXB0KGRlcHRJZCkgewogICAgICBsZXQgZGF0YSA9IHsKICAgICAgICBkZXB0SWQ6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8uZGVwdElkCiAgICAgIH07CiAgICAgIHRoaXMuZm9ybURlcHRMaXN0ID0gW107CiAgICAgIHRyZWVSb29tKGRhdGEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgdGhpcy5kZXB0TGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMubXNnRXJyb3IocmVzcG9uc2UubXNnKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHJlc2l6ZUhhbmRsZXIoKSB7CiAgICAgIGxldCBhID0gdGhpcy4kcmVmcy5zZWFyY2gub2Zmc2V0SGVpZ2h0OwogICAgICBsZXQgYiA9IHRoaXMuJHJlZnMuYnRucy5vZmZzZXRIZWlnaHQ7CiAgICAgIGxldCBoID0gYSArIGIgKyAxOCArIDQ1ICsgODQgKyA0MCArIDIwOwogICAgICBoID0gaCArICJweCI7CiAgICAgIHRoaXMudGFibGVIZWlnaHQgPSBgY2FsYygxMDB2aCAtICR7aH0pYDsKICAgIH0sCiAgICAvKiog5p+l6K+i5paw5Lia5Yqh5paw5oqA5pyv5YiX6KGoICovCiAgICBnZXRMaXN0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnBhcmFtcyA9IHt9OwogICAgICBpZiAobnVsbCAhPSB0aGlzLmRhdGVyYW5nZVRpbWUgJiYgJycgIT0gdGhpcy5kYXRlcmFuZ2VUaW1lKSB7CiAgICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYXJhbXNbImJlZ2luVGltZSJdID0gdGhpcy5kYXRlcmFuZ2VUaW1lWzBdOwogICAgICAgIHRoaXMucXVlcnlQYXJhbXMucGFyYW1zWyJlbmRUaW1lIl0gPSB0aGlzLmRhdGVyYW5nZVRpbWVbMV07CiAgICAgIH0KICAgICAgbGlzdFRlY2hub2xvZ3kodGhpcy5xdWVyeVBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy50ZWNobm9sb2d5TGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmsLTlubPlrZflhbjnv7vor5EKICAgIHRlY2hub1R5cGVGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMudGVjaG5vVHlwZU9wdGlvbnMsIHJvdy50ZWNobm9UeXBlKTsKICAgIH0sCiAgICAvLyDotJ/otKPkurrlrabljoblrZflhbjnv7vor5EKICAgIGVkdWNhdGlvbkZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy5lZHVjYXRpb25PcHRpb25zLCByb3cuZWR1Y2F0aW9uKTsKICAgIH0sCiAgICAvLyDotJ/otKPkurrkuJPkuJrlrZflhbjnv7vor5EKICAgIHNwZWNpYWxGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMuc3BlY2lhbE9wdGlvbnMsIHJvdy5zcGVjaWFsKTsKICAgIH0sCiAgICAvLyDogYznp7DlrZflhbjnv7vor5EKICAgIHRpdGxlQ29kZUZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy50aXRsZUNvZGVPcHRpb25zLCByb3cudGl0bGVDb2RlKTsKICAgIH0sCiAgICAvLyDmlYjmnpzlrZflhbjnv7vor5EKICAgIGVmZmVjdEZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy5lZmZlY3RPcHRpb25zLCByb3cuZWZmZWN0KTsKICAgIH0sCiAgICAvLyDmlrDkuJrliqHmlrDmioDmnK/lrZflhbjnv7vor5EKICAgIHRlY2hub0Zvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy50ZWNobm9PcHRpb25zLCByb3cudGVjaG5vKTsKICAgIH0sCiAgICBzdGF0ZUZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy5zdGF0ZU9wdGlvbnMsIHJvdy5hdWRpdFN0YXRlKTsKICAgIH0sCglzdWNjZXNzU3VibWl0KGZsYWcpIHsKICAgICAgdGhpcy5vcGVuID0gZmxhZzsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBjYW5jZWwoKSB7CiAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgY2FuY2VsMSgpIHsKICAgICAgdGhpcy5vcGVuMSA9IGZhbHNlOwogICAgfSwKICAgIGNhbmNlbDIoKSB7CiAgICAgIHRoaXMub3BlbjIgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDooajljZXph43nva4KICAgIHJlc2V0KCkgewogICAgICB0aGlzLmZvcm0gPSB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8uZGVwdElkLAogICAgICAgIGFjY291bnRDb2RlOiBudWxsLAogICAgICAgIHRlY2hub0NvZGU6IG51bGwsCiAgICAgICAgdGVjaG5vTmFtZTogbnVsbCwKICAgICAgICBkZXZlbG9wVGltZTogbnVsbCwKICAgICAgICB0ZWNobm9UeXBlOiBudWxsLAogICAgICAgIGRlcHRDb2RlOiBudWxsLAogICAgICAgIGNvbXBsZXRlTnVtOiBudWxsLAogICAgICAgIHBlcnNvbkNvZGU6IG51bGwsCiAgICAgICAgZWR1Y2F0aW9uOiBudWxsLAogICAgICAgIHNwZWNpYWw6IG51bGwsCiAgICAgICAgdGl0bGVDb2RlOiBudWxsLAogICAgICAgIGVmZmVjdDogbnVsbCwKICAgICAgICB0ZWNobm86IG51bGwsCiAgICAgICAgcHJvZ3Jlc3M6IG51bGwsCiAgICAgICAgYW5uZXg6IG51bGwsCiAgICAgICAgYXVkaXRTdGF0ZTogbnVsbCwKICAgICAgICBwcm9jZWR1cmVJZDogbnVsbCwKICAgICAgICBkZWxGbGFnOiBudWxsLAogICAgICAgIGNyZWF0ZUJ5OiBudWxsLAogICAgICAgIGNyZWF0ZVRpbWU6IG51bGwsCiAgICAgICAgdXBkYXRlQnk6IG51bGwsCiAgICAgICAgdXBkYXRlVGltZTogbnVsbCwKICAgICAgICByZW1hcms6IG51bGwKICAgICAgfTsKICAgICAgdGhpcy5yZXNldEZvcm0oImZvcm0iKTsKICAgIH0sCiAgICAvKiog5pCc57Si5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVRdWVyeSgpIHsKICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYWdlTnVtID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLyoqIOmHjee9ruaMiemSruaTjeS9nCAqLwogICAgcmVzZXRRdWVyeSgpIHsKICAgICAgdGhpcy5kYXRlcmFuZ2VUaW1lID0gW107CiAgICAgIHRoaXMucmVzZXRGb3JtKCJxdWVyeUZvcm0iKTsKICAgICAgdGhpcy5oYW5kbGVRdWVyeSgpOwogICAgfSwKICAgIC8vIOWkmumAieahhumAieS4reaVsOaNrgogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKHNlbGVjdGlvbikgewogICAgICB0aGlzLmlkcyA9IHNlbGVjdGlvbi5tYXAoaXRlbSA9PiBpdGVtLmlkKQogICAgICB0aGlzLnRlY2hub0NvZGVzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0udGVjaG5vQ29kZSkKICAgICAgdGhpcy5wcm9jbG5zSWRzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0ucHJvY2VkdXJlSWQpCiAgICAgIHRoaXMuc2luZ2xlID0gc2VsZWN0aW9uLmxlbmd0aCE9PTEKICAgICAgdGhpcy5zcHp0ID0gdHJ1ZTsKICAgICAgaWYgKHNlbGVjdGlvbi5sZW5ndGgpIHsKICAgICAgICBsZXQgcmV2aWV3U3RhdGUgPSBzZWxlY3Rpb25bMF0uYXVkaXRTdGF0ZTsKICAgICAgICBjb25zb2xlLmxvZyhyZXZpZXdTdGF0ZSkKICAgICAgICBpZihyZXZpZXdTdGF0ZT09JzAnKXsKICAgICAgICAgIHRoaXMuc3B6dCA9IGZhbHNlOwogICAgICAgIH1lbHNlewogICAgICAgICAgdGhpcy5zcHp0ID0gdHJ1ZTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5tdWx0aXBsZSA9ICFzZWxlY3Rpb24ubGVuZ3RoCiAgICAgIHRoaXMuc2VsZWN0aW9uUm93PXNlbGVjdGlvbgogICAgfSwKICAgIHJvd0NsaWNrKHJvdywgY29sdW1uLCBldmVudCkgewogICAgICBsZXQgcmVmc0VsVGFibGUgPSB0aGlzLiRyZWZzLm11bHRpcGxlVGFibGU7CiAgICAgIGxldCBmaW5kUm93ID0gdGhpcy5zZWxlY3Rpb25Sb3cuZmluZChjID0+IGMucm93SW5kZXggPT0gcm93LnJvd0luZGV4KTsKICAgICAgLy8gaWYgKGZpbmRSb3cgJiYgdGhpcy5zZWxlY3Rpb25Sb3cubGVuZ3RoID09IDEpIHsKICAgICAgLy8gICByZWZzRWxUYWJsZS50b2dnbGVSb3dTZWxlY3Rpb24ocm93LCBmYWxzZSk7CiAgICAgIC8vICAgcmV0dXJuOwogICAgICAvLyB9CiAgICAgIHJlZnNFbFRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHJlZnNFbFRhYmxlLnRvZ2dsZVJvd1NlbGVjdGlvbihyb3cpOwogICAgfSwKICAgIHJvd1N0eWxlKHsKICAgICAgcm93LAogICAgICByb3dJbmRleAogICAgfSkgewogICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocm93LCAncm93SW5kZXgnLCB7CiAgICAgICAgdmFsdWU6IHJvd0luZGV4LAogICAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICAgIGVudW1lcmFibGU6IGZhbHNlCiAgICAgIH0pCiAgICB9LAogICAgcm93Q2xhc3NOYW1lKHsKICAgICAgcm93LAogICAgICByb3dJbmRleAogICAgfSkgewogICAgICBsZXQgcm93TmFtZSA9ICIiLAogICAgICAgIGZpbmRSb3cgPSB0aGlzLnNlbGVjdGlvblJvdy5maW5kKGMgPT4gYy5yb3dJbmRleCA9PT0gcm93LnJvd0luZGV4KTsKICAgICAgaWYgKGZpbmRSb3cpIHsKICAgICAgICByb3dOYW1lID0gImN1cnJlbnQtcm93ICI7CiAgICAgIH0KICAgICAgcmV0dXJuIHJvd05hbWU7CiAgICB9LAogICAgLyoqIOaWsOWinuaMiemSruaTjeS9nAogICAgaGFuZGxlQWRkKCkgewogICAgICB0aGlzLnJlc2V0KCk7CiAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgIHRoaXMudGl0bGUgPSAi5re75Yqg5paw5Lia5Yqh5paw5oqA5pyvIjsKICAgIH0sCiAgICAgKi8KICAgIC8qKiDmlrDlop7mjInpkq7mk43kvZwgKi8KICAgIGhhbmRsZUFkZCgpIHsKICAgICAgdGhpcy4kcmVmcy5tdWx0aXBsZVRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgIHRoaXMuYWRkRWRpdElkID0gIjAiOwogICAgfSwKICAgIGhhbmRsZVVwZGF0ZShyb3cpIHsKICAgICAgdGhpcy5yZXNldCgpOwogICAgICBjb25zdCBpZCA9IHJvdy5pZCB8fCB0aGlzLmlkc1swXTsKICAgICAgdGhpcy5vcGVuID0gdHJ1ZTsKICAgICAgdGhpcy5hZGRFZGl0SWQgPSBpZDsgLy8gaWTotYvlgLwKICAgICAgY29uc29sZS5sb2coImFkZEVkaXRJZC0tLSIgKyBhZGRFZGl0KTsKICAgIH0sCiAgICBoYW5kbGVBdXRob3Iocm93KSB7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgY29uc3QgaWQgPSByb3cuaWQgfHwgdGhpcy5pZHNbMF07CiAgICAgIGNvbnN0IHRlY2hub0NvZGUgPSByb3cudGVjaG5vQ29kZSB8fCB0aGlzLnRlY2hub0NvZGVzWzBdOwogICAgICB0aGlzLm9wZW4xID0gdHJ1ZTsKICAgICAgdGhpcy5xdWVyeVBhcmFtczEudGVjaG5vQ29kZSA9IHRlY2hub0NvZGU7IC8vIGlk6LWL5YC8CiAgICAgIHRoaXMucXVlcnlQYXJhbXMxLnBlcnNvbkxpc3QgPSBbXTsKICAgICAgY29uc29sZS5sb2coInRlY2hub0NvZGUtLS0iICsgdGVjaG5vQ29kZSk7CiAgICAgIGxpc3RQZXJzb24odGhpcy5xdWVyeVBhcmFtczEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMucGVyc29uTGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvKiog5o+Q5Lqk5oyJ6ZKuICovCiAgICBzdWJtaXRGb3JtKCkgewogICAgICB0aGlzLiRyZWZzWyJmb3JtIl0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMuZm9ybS5pZCAhPSBudWxsKSB7CiAgICAgICAgICAgIHVwZGF0ZVRlY2hub2xvZ3kodGhpcy5mb3JtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIuS/ruaUueaIkOWKnyIpOwogICAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFkZFRlY2hub2xvZ3kodGhpcy5mb3JtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIuaWsOWinuaIkOWKnyIpOwogICAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHN1Ym1pdEZvcm0xKCkgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zMS5wZXJzb25MaXN0ID0gdGhpcy5wZXJzb25MaXN0OwogICAgICBjb25zb2xlLmxvZygicGVyc29uTGlzdCIsdGhpcy5wZXJzb25MaXN0KQogICAgICBsZXQgc2F2ZUxvYWRpbmcgPSB0aGlzLnNhdmVMb2FkaW5nKCk7CiAgICAgIHVwZGF0ZVBlcnNvbih0aGlzLnF1ZXJ5UGFyYW1zMSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5tc2dTdWNjZXNzKCLnvJbovpHkvZzogIXmiJDlip8iKTsKICAgICAgICB0aGlzLm9wZW4xID0gZmFsc2U7CiAgICAgICAgc2F2ZUxvYWRpbmcuY2xvc2UoKTsKICAgICAgICB0aGlzLmdldExpc3QoKTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlT3Bpbmlvbihyb3cpIHsKICAgICAgdGhpcy5yZXNldCgpOwogICAgICBjb25zdCB0ZWNobm9Db2RlID0gcm93LnRlY2hub0NvZGUgfHwgdGhpcy50ZWNobm9Db2Rlc1swXTsKICAgICAgY29uc3QgaWQgPSByb3cuaWQgfHwgdGhpcy5pZHNbMF07CiAgICAgIHRoaXMuYWRkRWRpdElkID0gaWQ7IC8vIGlk6LWL5YC8CiAgICAgIHRoaXMub3BlbjIgPSB0cnVlOwogICAgICB0aGlzLnRlY2hub0NvZGUgPSB0ZWNobm9Db2RlOyAvLyBpZOi1i+WAvAogICAgICBjb25zb2xlLmxvZygidGVjaG5vQ29kZS0tLSIgKyB0ZWNobm9Db2RlKTsKICAgIH0sCiAgICAvKiog5Yig6Zmk5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVEZWxldGUocm93KSB7CiAgICAgIGNvbnN0IGlkcyA9IHJvdy5pZCB8fCB0aGlzLmlkczsKICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm56Gu6K6k5Yig6Zmk5paw5Lia5Yqh5paw5oqA5pyv57yW5Y+35Li6IicgKyBpZHMgKyAnIueahOaVsOaNrumhuT8nLCAi6K2m5ZGKIiwgewogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa7lrpoiLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKCkgewogICAgICAgICAgcmV0dXJuIGRlbFRlY2hub2xvZ3koaWRzKTsKICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgdGhpcy5tc2dTdWNjZXNzKCLliKDpmaTmiJDlip8iKTsKICAgICAgICB9KS5jYXRjaCgoKSA9PiB7fSk7CiAgICB9LAogICAgLyoqIOa1gei9rOWOhuWPsuWIneWni+WMliAqLwogICAgcHJvY2Vzc0V4YW1pbmVGb3JtMigpIHsKICAgICAgdGhpcy5zcmMgPQogICAgICAgIGAke3RoaXMucHJvY2Vzc1VybH0vYXBpL3dmL3Byb2Nlc3NIaXN0b3JpYz9wcm9jSW5zSWQ9JHt0aGlzLnByb2NsbnNJZHNbMF19YDsKICAgIH0sCiAgICAvKiog5rWB6L2s5Y6G5Y+y5oyJ6ZKu5pON5L2cICovCiAgICBwcm9jZXNzRXhhbWluZSgpIHsKICAgICAgaWYgKHRoaXMucHJvY2xuc0lkc1swXSA9PSBudWxsIHx8ICF0aGlzLnByb2NsbnNJZHNbMF0pIHsKICAgICAgICB0aGlzLm1zZ0Vycm9yKCLmsqHmnInmtYHovazljoblj7LmlbDmja7vvIEiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByb2Nlc3NFeGFtaW5lRm9ybTIoKTsKICAgICAgICB0aGlzLnByb2Nlc3NPcGVuID0gdHJ1ZTsKICAgICAgfQogICAgfQogIH0KfTsK"},null]}