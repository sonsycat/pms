{"remainingRequest":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\pms_oracle\\pms_UI\\src\\views\\commission\\sort\\index.vue?vue&type=style&index=0&id=bba24eca&lang=scss&scoped=true&","dependencies":[{"path":"D:\\work\\pms_oracle\\pms_UI\\src\\views\\commission\\sort\\index.vue","mtime":1693362204000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgaGVpZ2h0OiA4MCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKCiAgLmVsLWRpYWxvZ19fYm9keSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBvdmVyZmxvdzogYXV0bzsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+SA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/commission/sort","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"40%\" custom-class=\"el-button--primary\" append-to-body\n             :close-on-click-modal=\"false\" @close=\"handleDialogClose\"\n  >\n    <el-row :gutter=\" 10\n  \" class=\"mb8\"\n    >\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['commission:sort:add']\"\n        >新增\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['commission:sort:edit']\"\n        >修改\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['commission:sort:remove']\"\n        >删除\n        </el-button>\n      </el-col>\n\n<!--      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>-->\n    </el-row>\n\n    <el-table border stripe v-loading=\"loading\" :data=\"sortList\" @selection-change=\"handleSelectionChange\" height=\"calc(100vh - 350px)\"\n              ref=\"multipleTable\" @row-click=\"rowClick\" :row-style=\"rowStyle\" :row-class-name=\"rowClassName\"\n    >\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n      <el-table-column sortable label=\"类别编码\" align=\"center\" prop=\"sortCode\"/>\n      <el-table-column sortable label=\"类别名称\" align=\"left\" prop=\"sortName\"/>\n<!--      <el-table-column label=\"操作\" align=\"center\" fixed=\"right\">-->\n<!--        <template slot-scope=\"scope\">-->\n<!--          <el-button-->\n<!--            size=\"mini\"-->\n<!--            type=\"text\"-->\n<!--            icon=\"el-icon-edit\"-->\n<!--            @click=\"handleUpdate(scope.row)\"-->\n<!--            v-hasPermi=\"['commission:sort:edit']\" title=\"修改\"-->\n<!--          ></el-button>-->\n<!--          <el-button-->\n<!--            size=\"mini\"-->\n<!--            type=\"text\"-->\n<!--            icon=\"el-icon-delete\"-->\n<!--            @click=\"handleDelete(scope.row)\"-->\n<!--            v-hasPermi=\"['commission:sort:remove']\" title=\"删除\"-->\n<!--          ></el-button>-->\n<!--        </template>-->\n<!--      </el-table-column>-->\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <addEdit v-if=\"open2\" :open2=\"open2\" :id=\"addEditId\" @cancel=\"cancel2\" @success=\"successSubmit\"></addEdit>\n  </el-dialog>\n</template>\n\n<script>\nimport { addSort, delSort, exportSort, listSort, updateSort } from '@/api/commission/sort'\nimport addEdit from './addEdit'\n\nexport default {\n  name: 'Sort',\n  components: {\n    addEdit\n  },\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      openDialog: this.open,\n      // 遮罩层\n      loading: true,\n      //二级弹出康\n      open2: false,\n      addEditId: '',\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 独立核算提成比类别表格数据\n      sortList: [],\n      selectionRow: [],\n      // 弹出层标题\n      title: '类别设置',\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 30,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {}\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit('cancel', false)\n    },\n    /** 查询独立核算提成比类别列表 */\n    getList() {\n      this.loading = true\n      listSort(this.queryParams).then(response => {\n        this.sortList = response.rows\n        this.total = response.total\n        this.loading = false\n      })\n    },\n    successSubmit(flag) {\n      this.open2 = flag\n      this.getList()\n    },\n    // 取消按钮\n    cancel2() {\n      this.open2 = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n      this.selectionRow = selection\n    },\n    rowClick(row, column, event) {\n      let refsElTable = this.$refs.multipleTable\n      let findRow = this.selectionRow.find(c => c.rowIndex == row.rowIndex)\n      if (findRow && this.selectionRow.length == 1) {\n        refsElTable.toggleRowSelection(row, false)\n        return\n      }\n      refsElTable.clearSelection()\n      refsElTable.toggleRowSelection(row)\n    },\n    rowStyle({\n      row,\n      rowIndex\n    }) {\n      Object.defineProperty(row, 'rowIndex', {\n        value: rowIndex,\n        writable: true,\n        enumerable: false\n      })\n    },\n    rowClassName({\n      row,\n      rowIndex\n    }) {\n      let rowName = '',\n        findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex)\n      if (findRow) {\n        rowName = 'current-row '\n      }\n      return rowName\n    },\n    /** 新增按钮操作\n     handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加独立核算提成比类别\";\n    },\n     */\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.open2 = true // 弹框点开\n      this.addEditId = '' // addEditId 是新增  去子组件方便区分新增编辑\n    },\n    handleUpdate(row) {\n      this.reset()\n      const id = row.id || this.ids[0]\n      this.open2 = true\n      this.addEditId = id // id赋值\n      console.log('addEditId---' + addEdit)\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateSort(this.form).then(response => {\n              this.msgSuccess('修改成功')\n              this.open = false\n              this.getList()\n            })\n          } else {\n            addSort(this.form).then(response => {\n              this.msgSuccess('新增成功')\n              this.open = false\n              this.getList()\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids\n      this.$confirm('是否确认删除独立核算提成比类别编号为\"' + ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delSort(ids)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(() => {\n      })\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有独立核算提成比类别数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.exportLoading = true\n        return exportSort(queryParams)\n      }).then(response => {\n        this.download(response.msg)\n        this.exportLoading = false\n      }).catch(() => {\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog {\n  height: 80%;\n  overflow: hidden;\n\n  .el-dialog__body {\n    height: 100%;\n    overflow: auto;\n  }\n}\n</style>\n"]}]}