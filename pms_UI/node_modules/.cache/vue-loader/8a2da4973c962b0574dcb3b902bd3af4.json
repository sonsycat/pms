{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\bonus\\index\\index.vue?vue&type=style&index=0&id=713eb63b&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\bonus\\index\\index.vue","mtime":1693362204733},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCAudG9wLXJpZ2h0LWJ0biBidXR0b246Zmlyc3QtY2hpbGR7ZGlzcGxheTogbm9uZX0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2PA","file":"index.vue","sourceRoot":"src/views/bonus/index","sourcesContent":["<template>\n  <div class=\"app-container\" style=\"padding-top: 5px;\">\n\t<div ref=\"btns\">\n    <el-row :gutter=\"10\" class=\"mb8\" style=\"margin-top: 5px;\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['bonus:index:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['bonus:index:edit']\"\n        >修改</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\t</div>\n\n    <el-table border stripe v-loading=\"loading\" :data=\"indexList\" :height=\"tableHeight\" @selection-change=\"handleSelectionChange\" ref=\"multipleTable\" @row-click=\"rowClick\" :row-style=\"rowStyle\" :row-class-name=\"rowClassName\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column sortable label=\"指标名称\" align=\"left\" prop=\"indexName\" />\n      <el-table-column sortable label=\"指标值\" align=\"center\" prop=\"indexValue\" />\n      <el-table-column sortable label=\"说明\" align=\"left\" prop=\"remark\" />\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n\t<addEdit v-if=\"open\" :open=\"open\" :id=\"addEditId\" @cancel=\"cancel\" @success=\"successSubmit\"></addEdit>\n\n  </div>\n</template>\n\n<script>\nimport { listIndex, getIndex, delIndex, addIndex, updateIndex, exportIndex } from \"@/api/bonus/index\";\nimport addEdit from \"./addEdit\";\n\nexport default {\n  name: \"Index\",\n  components: {addEdit},\n  mounted(){\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  watch: {\n    listData(val) {\n      let that = this;\n      setTimeout(function () {\n        that.resizeHandler();\n      }, 300);\n    }\n  },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: false,\n      // 总条数\n      total: 0,\n      // 指标配置维护表格数据\n      indexList: [],\n      selectionRow: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      tableHeight: \"auto\",\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 30,\n        indexName: null,\n        indexValue: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询指标配置维护列表 */\n    getList() {\n      this.loading = true;\n      listIndex(this.queryParams).then(response => {\n        this.indexList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n\tsuccessSubmit(flag) {\n      this.open = flag;\n      this.getList();\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        indexName: null,\n        indexValue: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      let tableRef = this.$refs.multipleTable;\n      if (selection.length > 1) {\n        tableRef.clearSelection(); //清空列表的选中\n        tableRef.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      // 设置行高亮\n      tableRef.setCurrentRow(selection[0]);\n      this.ids = selection.map(item => item.id);\n      this.deptRoomCodes = selection.map(item => item.deptRoomCode)\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    rowClick(row, column, event) {\n      let refsElTable = this.$refs.multipleTable;\n      let findRow = this.selectionRow.find(c => c.rowIndex == row.rowIndex);\n      if (findRow && this.selectionRow.length == 1) {\n        refsElTable.toggleRowSelection(row, false);\n        return;\n      }\n      refsElTable.clearSelection();\n      refsElTable.toggleRowSelection(row);\n    },\n    rowStyle({row, rowIndex}) {\n      Object.defineProperty(row, 'rowIndex', {\n        value: rowIndex,\n        writable: true,\n        enumerable: false\n      })\n    },\n    rowClassName({row, rowIndex}) {\n      let rowName = \"\",\n        findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex);\n      if (findRow) {\n        rowName = \"current-row \";\n      }\n      return rowName;\n    },\n    /** 新增按钮操作\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加指标配置维护\";\n    },\n     */\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.open = true; // 弹框点开\n      this.addEditId = \"\"; // addEditId 是新增  去子组件方便区分新增编辑\n    },\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids[0];\n      this.open = true;\n      this.addEditId = id; // id赋值\n      console.log(\"addEditId---\" + addEdit);\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateIndex(this.form).then(response => {\n              this.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addIndex(this.form).then(response => {\n              this.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    resizeHandler() {\n      let b = this.$refs.btns.offsetHeight;\n      let h = b + 18 + 45 + 84 + 40;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .top-right-btn button:first-child{display: none}\n</style>\n"]}]}