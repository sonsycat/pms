{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\skill\\achieve\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\skill\\achieve\\index.vue","mtime":1682043108555},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RBY2hpZXZlLCBnZXRBY2hpZXZlLCBkZWxBY2hpZXZlLCBhZGRBY2hpZXZlLCB1cGRhdGVBY2hpZXZlLCBleHBvcnRBY2hpZXZlIH0gZnJvbSAiQC9hcGkvc2tpbGwvYWNoaWV2ZSI7CmltcG9ydCBhZGRFZGl0IGZyb20gIi4vYWRkRWRpdCI7CmltcG9ydCBhZGRFZGl0MSBmcm9tICIuL2FkZEVkaXQxIjsKaW1wb3J0IHsgdHJlZVJvb20sIGdldEVtcExpc3QgfSBmcm9tICJAL2FwaS91bnRpbCI7CmltcG9ydCB7IGxpc3RQZXJzb24sIGdldFBlcnNvbiwgZGVsUGVyc29uLCBhZGRQZXJzb24sIHVwZGF0ZVBlcnNvbiwgZXhwb3J0UGVyc29uIH0gZnJvbSAiQC9hcGkvc2tpbGwvcGVyc29uIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQWNoaWV2ZSIsCiAgY29tcG9uZW50czogewphZGRFZGl0LGFkZEVkaXQxCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWNoaWV2ZUNvZGU6IG51bGwsCiAgICAgIHBvc3RGb3JtOiB7fSwKICAgICAgLy/miZPljbDlj4LmlbAKICAgICAgc3JjOiAiIiwKICAgICAgaGVpZ2h0OiAiNTAwcHg7IiwKICAgICAgcHJvY2Vzc09wZW46IGZhbHNlLAogICAgICB0YWJsZUhlaWdodDogImF1dG8iLAogICAgICAvLyDpga7nvanlsYIKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgLy8g5a+85Ye66YGu572p5bGCCiAgICAgIGV4cG9ydExvYWRpbmc6IGZhbHNlLAogICAgICAvLyDpgInkuK3mlbDnu4QKICAgICAgaWRzOiBbXSwKICAgICAgcHJvY2xuc0lkczogW10sCiAgICAgIGFjaGlldmVDb2RlczogW10sCiAgICAgIC8vIOmdnuWNleS4quemgeeUqAogICAgICBzaW5nbGU6IHRydWUsCiAgICAgIHNwenQ6IHRydWUsCiAgICAgIC8vIOmdnuWkmuS4quemgeeUqAogICAgICBtdWx0aXBsZTogdHJ1ZSwKICAgICAgLy8g5pi+56S65pCc57Si5p2h5Lu2CiAgICAgIHNob3dTZWFyY2g6IHRydWUsCiAgICAgIC8vIOaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g5oiQ5p6c6KGo5qC85pWw5o2uCiAgICAgIGFjaGlldmVMaXN0OiBbXSwKICAgICAgc2VsZWN0aW9uUm93OiBbXSwKICAgICAgLy8g5oqA5pyv5Y+C5LiO5Lq66KGo5qC85pWw5o2uCiAgICAgIHBlcnNvbkxpc3Q6IFtdLAogICAgICAvLyDlvLnlh7rlsYLmoIfpopgKICAgICAgdGl0bGU6ICIiLAogICAgICB0aXRsZTE6ICLmiJDmnpwgLyDnvJbovpHkvZzogIUiLAogICAgICAvLyDmmK/lkKbmmL7npLrlvLnlh7rlsYIKICAgICAgb3BlbjogZmFsc2UsCiAgICAgIG9wZW4xOiBmYWxzZSwKICAgICAgb3BlbjI6IGZhbHNlLAogICAgICAvLyDmmK/lkKbmjqjlub/lrZflhbgKICAgICAgaXNFeHRlbnNpb25PcHRpb25zOiBbXSwKICAgICAgLy8g5om55YeG5Y2V5L2N5a2X5YW4CiAgICAgIGFwcHJvdmVPcHRpb25zOiBbXSwKICAgICAgLy8g5Lu75Yqh5p2l5rqQ5a2X5YW4CiAgICAgIHRhc2tTb3VyY2VPcHRpb25zOiBbXSwKICAgICAgLy8g5o6o5bm/6IyD5Zu05a2X5YW4CiAgICAgIGV4dGVuc2lvblNjb3BlT3B0aW9uczogW10sCiAgICAgIC8vIOaIkOaenOaAp+i0qOWtl+WFuAogICAgICBhY2hpZXZlTmF0dXJlT3B0aW9uczogW10sCiAgICAgIC8vIOS4k+WIqeexu+WIq+Wtl+WFuAogICAgICBwYXRlbnRUeXBlT3B0aW9uczogW10sCiAgICAgIC8vIOeKtuaAgeWtl+WFuAogICAgICBzdGF0ZU9wdGlvbnM6IFtdLAogICAgICBkZXB0TGlzdDogW10sCiAgICAgIC8vIOaYr+WQpuesrOS4gOS9nOiAheWtl+WFuAogICAgICBpc09uZU9wdGlvbnM6IFtdLAogICAgICAvL+aXtumXtOiMg+WbtAogICAgICBkYXRlcmFuZ2VUaW1lOiBbXSwKICAgICAgLy8g5p+l6K+i5Y+C5pWwCiAgICAgIHF1ZXJ5UGFyYW1zOiB7CiAgICAgICAgcGFnZU51bTogMSwKICAgICAgICBwYWdlU2l6ZTogMzAsCiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8uZGVwdElkLAogICAgICAgIGFjY291bnRDb2RlOiBudWxsLAogICAgICAgIGFjaGlldmVDb2RlOiBudWxsLAogICAgICAgIGFjaGlldmVOYW1lOiBudWxsLAogICAgICAgIGRlcHRDb2RlOiBudWxsLAogICAgICAgIGNvbXBsZXRlVW5pdDogbnVsbCwKICAgICAgICBwZXJzb25Db2RlOiBudWxsLAogICAgICAgIGVkdWNhdGlvbjogbnVsbCwKICAgICAgICBzcGVjaWFsOiBudWxsLAogICAgICAgIHRpdGxlQ29kZTogbnVsbCwKICAgICAgICBhd2FyZENhdGVnb3J5OiBudWxsLAogICAgICAgIGF3YXJkTGV2ZWw6IG51bGwsCiAgICAgICAgaXNFeHRlbnNpb246IG51bGwsCiAgICAgICAgYXdhcmRUaW1lOiBudWxsLAogICAgICAgIGV4dGVuc2lvbkluY29tZTogbnVsbCwKICAgICAgICBhcHByb3ZlOiBudWxsLAogICAgICAgIHRhc2tTb3VyY2U6IG51bGwsCiAgICAgICAgZXh0ZW5zaW9uU2NvcGU6IG51bGwsCiAgICAgICAgYWNoaWV2ZU5hdHVyZTogbnVsbCwKICAgICAgICBkcnVnQXBwcm92YWw6IG51bGwsCiAgICAgICAgcGF0ZW50SW5jb21lOiBudWxsLAogICAgICAgIHBhdGVudE5vOiBudWxsLAogICAgICAgIHBhdGVudFR5cGU6IG51bGwsCiAgICAgICAgc3ViamVjdFdvcmRzOiBudWxsLAogICAgICAgIGFjaGlldmVBYnN0cmFjdDogbnVsbCwKICAgICAgICBhbm5leDogbnVsbCwKICAgICAgICBhdWRpdFN0YXRlOiBudWxsLAogICAgICAgIHByb2NlZHVyZUlkOiBudWxsLAogICAgICB9LAogICAgICAvLyDmn6Xor6Llj4LmlbAKICAgICAgcXVlcnlQYXJhbXMxOiB7CiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8uZGVwdElkLAogICAgICAgIHRlY2hub0NvZGU6IG51bGwsCiAgICAgICAgdGVjaG5vVHlwZTogIjIiLAogICAgICAgIHBlcnNvbkxpc3Q6IFtdCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleWPguaVsAogICAgICBmb3JtOiB7fSwKICAgICAgLy8g6KGo5Y2V5qCh6aqMCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgYWNoaWV2ZU5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLmiJDmnpzlkI3np7DkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgZGVwdENvZGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLnp5HlrqTnvJbnoIHkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgY29tcGxldGVVbml0OiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5Y2P5L2c5Y2V5L2N5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICAgIHBlcnNvbkNvZGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLlrozmiJDkurrkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgZWR1Y2F0aW9uOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5a6M5oiQ5Lq65a2m5Y6G5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICAgIHNwZWNpYWw6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLlrozmiJDkurrkuJPkuJrkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgdGl0bGVDb2RlOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6IGM56ew5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICAgIGF3YXJkQ2F0ZWdvcnk6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLojrflpZbnsbvliKvkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgYXdhcmRMZXZlbDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuiOt+Wllue6p+WIq+S4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgICBpc0V4dGVuc2lvbjogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuaYr+WQpuaOqOW5v+S4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJjaGFuZ2UiIH0KICAgICAgICBdLAogICAgICAgIGF3YXJkVGltZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuiOt+WlluaXtumXtOS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgICBleHRlbnNpb25JbmNvbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLojrflpZbmlLbnm4rkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgYXBwcm92ZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuaJueWHhuWNleS9jeS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJjaGFuZ2UiIH0KICAgICAgICBdLAogICAgICAgIHRhc2tTb3VyY2U6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLku7vliqHmnaXmupDkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9CiAgICAgICAgXSwKICAgICAgICBleHRlbnNpb25TY29wZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuaOqOW5v+iMg+WbtOS4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJjaGFuZ2UiIH0KICAgICAgICBdLAogICAgICAgIGFjaGlldmVOYXR1cmU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLmiJDmnpzmgKfotKjkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9CiAgICAgICAgXSwKICAgICAgICBkcnVnQXBwcm92YWw6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLoja/mibnlj7fkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgcGF0ZW50SW5jb21lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5LiT5Yip5pS255uK5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICAgIHBhdGVudE5vOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5LiT5Yip5Y+35LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICAgIHBhdGVudFR5cGU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLkuJPliKnnsbvliKvkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9CiAgICAgICAgXSwKICAgICAgICBzdWJqZWN0V29yZHM6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLkuLvpopjor43kuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgYWNoaWV2ZUFic3RyYWN0OiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5oiQ5p6c5pGY6KaB5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICBdLAogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6ewogICAgImZvcm0uY29tcENvZGUiOiB7CiAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgdGhpcy5nZXRUcmVlRGVwdCh2YWwpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICBsaXN0RGF0YSh2YWwpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgIHRoYXQucmVzaXplSGFuZGxlcigpOwogICAgICB9LCAzMDApOwogICAgfSwKICB9LAogIG1vdW50ZWQoKXsKICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgdGhpcy5yZXNpemVIYW5kbGVyKCk7CiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnJlc2l6ZUhhbmRsZXIpOwogICAgfSk7CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgICB0aGlzLmdldERpY3RzKCJocl9pc19jaGFuZ2UiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5pc0V4dGVuc2lvbk9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmdldERpY3RzKCJTS0lMTF9BUFBST1ZFIikudGhlbihyZXNwb25zZSA9PiB7CiAgICAgIHRoaXMuYXBwcm92ZU9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmdldERpY3RzKCJTS0lMTF9UQVNLX1NPVVJDRSIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLnRhc2tTb3VyY2VPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygiRVhURU5TSU9OX1NDT1BFIikudGhlbihyZXNwb25zZSA9PiB7CiAgICAgIHRoaXMuZXh0ZW5zaW9uU2NvcGVPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygiQUNISUVWRV9OQVRVUkUiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5hY2hpZXZlTmF0dXJlT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICAgIHRoaXMuZ2V0RGljdHMoIlNLSUxMX1BBVEVOVF9UWVBFIikudGhlbihyZXNwb25zZSA9PiB7CiAgICAgIHRoaXMucGF0ZW50VHlwZU9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmdldERpY3RzKCJocl9pc19jaGFuZ2UiKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5pc09uZU9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICB0aGlzLmdldERpY3RzKCJhc3NldF9hZHVpdF9zdGF0ZSIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICB0aGlzLnN0YXRlT3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNsaWNrVGFibGVDb2RlKGRhdGEpIHsKICAgICAgLy8g6YCJ5Lit5b2T5YmN6KGMCiAgICAgIHRoaXMucm93Q2xpY2soZGF0YSwgZmFsc2UpOwogICAgICB0aGlzLmhhbmRsZVVwZGF0ZShkYXRhKTsKICAgIH0sCiAgICAvKiog5paw5aKe5re75Yqg6KGMICovCiAgICBoYW5kbGVBZGRUYWJsZSgpIHsKICAgICAgbGV0IHBhcmFtcz17CiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuYWNjb3VudEluZm8uZGVwdElkLAogICAgICAgIG5vd0RhdGU6dGhpcy5mb3JtLm5vd0RhdGUKICAgICAgfQogICAgICBsZXQgdGFibENvbD17CiAgICAgICAgLy8gZGVwdENvZGU6dGhpcy5mb3JtLmRlcHRDb2RlLAogICAgICAgIC8vIG5vd0RhdGU6dGhpcy5mb3JtLm5vd0RhdGUsCiAgICAgICAgLy8gcHJvamVjdENvZGU6bnVsbAogICAgICB9CiAgICAgIHRoaXMucGVyc29uTGlzdC5wdXNoKHRhYmxDb2wpOwogICAgICB0aGlzLnRhYmxlU2Nyb2xsTGVmdCgiY29zdE51bUxpc3RUYWJsZSIpCiAgICB9LAogICAgaGFuZGxlQWRkRGVsZXRlKGlkeCkgewogICAgICB0aGlzLnBlcnNvbkxpc3Quc3BsaWNlKGlkeCwgMSk7CiAgICB9LAogICAgcmVzaXplSGFuZGxlcigpIHsKICAgICAgbGV0IGEgPSB0aGlzLiRyZWZzLnNlYXJjaC5vZmZzZXRIZWlnaHQ7CiAgICAgIGxldCBiID0gdGhpcy4kcmVmcy5idG5zLm9mZnNldEhlaWdodDsKICAgICAgbGV0IGggPSBhICsgYiArIDE4ICsgNDUgKyA4NCArIDQwICsgMjA7CiAgICAgIGggPSBoICsgInB4IjsKICAgICAgdGhpcy50YWJsZUhlaWdodCA9IGBjYWxjKDEwMHZoIC0gJHtofSlgOwogICAgfSwKICAgIC8v6I635Y+W56eR5a6k5YiX6KGoCiAgICBnZXRUcmVlRGVwdChkZXB0SWQpIHsKICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgZGVwdElkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnVzZXJJbmZvLmRlcHRJZAogICAgICB9OwogICAgICB0aGlzLmZvcm1EZXB0TGlzdCA9IFtdOwogICAgICB0cmVlUm9vbShkYXRhKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PSAyMDApIHsKICAgICAgICAgIHRoaXMuZGVwdExpc3QgPSByZXNwb25zZS5yb3dzOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLm1zZ0Vycm9yKHJlc3BvbnNlLm1zZyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvKiog5p+l6K+i5oiQ5p6c5YiX6KGoICovCiAgICBnZXRMaXN0KCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnBhcmFtcyA9IHt9OwogICAgICBpZiAobnVsbCAhPSB0aGlzLmRhdGVyYW5nZVRpbWUgJiYgJycgIT0gdGhpcy5kYXRlcmFuZ2VUaW1lKSB7CiAgICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYXJhbXNbImJlZ2luVGltZSJdID0gdGhpcy5kYXRlcmFuZ2VUaW1lWzBdOwogICAgICAgIHRoaXMucXVlcnlQYXJhbXMucGFyYW1zWyJlbmRUaW1lIl0gPSB0aGlzLmRhdGVyYW5nZVRpbWVbMV07CiAgICAgIH0KICAgICAgbGlzdEFjaGlldmUodGhpcy5xdWVyeVBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5hY2hpZXZlTGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmmK/lkKbnrKzkuIDkvZzogIXlrZflhbjnv7vor5EKICAgIGlzT25lRm9ybWF0KHJvdywgY29sdW1uKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdERpY3RMYWJlbCh0aGlzLmlzT25lT3B0aW9ucywgcm93LmlzT25lKTsKICAgIH0sCiAgICAvLyDmmK/lkKbmjqjlub/lrZflhbjnv7vor5EKICAgIGlzRXh0ZW5zaW9uRm9ybWF0KHJvdywgY29sdW1uKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdERpY3RMYWJlbCh0aGlzLmlzRXh0ZW5zaW9uT3B0aW9ucywgcm93LmlzRXh0ZW5zaW9uKTsKICAgIH0sCiAgICAvLyDmibnlh4bljZXkvY3lrZflhbjnv7vor5EKICAgIGFwcHJvdmVGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMuYXBwcm92ZU9wdGlvbnMsIHJvdy5hcHByb3ZlKTsKICAgIH0sCiAgICAvLyDku7vliqHmnaXmupDlrZflhbjnv7vor5EKICAgIHRhc2tTb3VyY2VGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMudGFza1NvdXJjZU9wdGlvbnMsIHJvdy50YXNrU291cmNlKTsKICAgIH0sCiAgICAvLyDmjqjlub/ojIPlm7TlrZflhbjnv7vor5EKICAgIGV4dGVuc2lvblNjb3BlRm9ybWF0KHJvdywgY29sdW1uKSB7CiAgICAgIHJldHVybiB0aGlzLnNlbGVjdERpY3RMYWJlbCh0aGlzLmV4dGVuc2lvblNjb3BlT3B0aW9ucywgcm93LmV4dGVuc2lvblNjb3BlKTsKICAgIH0sCiAgICAvLyDmiJDmnpzmgKfotKjlrZflhbjnv7vor5EKICAgIGFjaGlldmVOYXR1cmVGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMuYWNoaWV2ZU5hdHVyZU9wdGlvbnMsIHJvdy5hY2hpZXZlTmF0dXJlKTsKICAgIH0sCiAgICAvLyDkuJPliKnnsbvliKvlrZflhbjnv7vor5EKICAgIHBhdGVudFR5cGVGb3JtYXQocm93LCBjb2x1bW4pIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0RGljdExhYmVsKHRoaXMucGF0ZW50VHlwZU9wdGlvbnMsIHJvdy5wYXRlbnRUeXBlKTsKICAgIH0sCiAgICBzdGF0ZUZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy5zdGF0ZU9wdGlvbnMsIHJvdy5hdWRpdFN0YXRlKTsKICAgIH0sCglzdWNjZXNzU3VibWl0KGZsYWcpIHsKICAgICAgdGhpcy5vcGVuID0gZmxhZzsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBjYW5jZWwoKSB7CiAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgY2FuY2VsMSgpIHsKICAgICAgdGhpcy5vcGVuMSA9IGZhbHNlOwogICAgfSwKICAgIGNhbmNlbDIoKSB7CiAgICAgIHRoaXMub3BlbjIgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDooajljZXph43nva4KICAgIHJlc2V0KCkgewogICAgICB0aGlzLmZvcm0gPSB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIudXNlckluZm8uZGVwdElkLAogICAgICAgIGFjY291bnRDb2RlOiBudWxsLAogICAgICAgIGFjaGlldmVDb2RlOiBudWxsLAogICAgICAgIGFjaGlldmVOYW1lOiBudWxsLAogICAgICAgIGRlcHRDb2RlOiBudWxsLAogICAgICAgIGNvbXBsZXRlVW5pdDogbnVsbCwKICAgICAgICBwZXJzb25Db2RlOiBudWxsLAogICAgICAgIGVkdWNhdGlvbjogbnVsbCwKICAgICAgICBzcGVjaWFsOiBudWxsLAogICAgICAgIHRpdGxlQ29kZTogbnVsbCwKICAgICAgICBhd2FyZENhdGVnb3J5OiBudWxsLAogICAgICAgIGF3YXJkTGV2ZWw6IG51bGwsCiAgICAgICAgaXNFeHRlbnNpb246IG51bGwsCiAgICAgICAgYXdhcmRUaW1lOiBudWxsLAogICAgICAgIGV4dGVuc2lvbkluY29tZTogbnVsbCwKICAgICAgICBhcHByb3ZlOiBudWxsLAogICAgICAgIHRhc2tTb3VyY2U6IG51bGwsCiAgICAgICAgZXh0ZW5zaW9uU2NvcGU6IG51bGwsCiAgICAgICAgYWNoaWV2ZU5hdHVyZTogbnVsbCwKICAgICAgICBkcnVnQXBwcm92YWw6IG51bGwsCiAgICAgICAgcGF0ZW50SW5jb21lOiBudWxsLAogICAgICAgIHBhdGVudE5vOiBudWxsLAogICAgICAgIHBhdGVudFR5cGU6IG51bGwsCiAgICAgICAgc3ViamVjdFdvcmRzOiBudWxsLAogICAgICAgIGFjaGlldmVBYnN0cmFjdDogbnVsbCwKICAgICAgICBhbm5leDogbnVsbCwKICAgICAgICBhdWRpdFN0YXRlOiBudWxsLAogICAgICAgIHByb2NlZHVyZUlkOiBudWxsLAogICAgICAgIGRlbEZsYWc6IG51bGwsCiAgICAgICAgY3JlYXRlQnk6IG51bGwsCiAgICAgICAgY3JlYXRlVGltZTogbnVsbCwKICAgICAgICB1cGRhdGVCeTogbnVsbCwKICAgICAgICB1cGRhdGVUaW1lOiBudWxsLAogICAgICAgIHJlbWFyazogbnVsbAogICAgICB9OwogICAgICB0aGlzLnJlc2V0Rm9ybSgiZm9ybSIpOwogICAgfSwKICAgIC8qKiDmkJzntKLmjInpkq7mk43kvZwgKi8KICAgIGhhbmRsZVF1ZXJ5KCkgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnBhZ2VOdW0gPSAxOwogICAgICB0aGlzLmdldExpc3QoKTsKICAgIH0sCiAgICAvKiog6YeN572u5oyJ6ZKu5pON5L2cICovCiAgICByZXNldFF1ZXJ5KCkgewogICAgICB0aGlzLmRhdGVyYW5nZVRpbWUgPSBbXTsKICAgICAgdGhpcy5yZXNldEZvcm0oInF1ZXJ5Rm9ybSIpOwogICAgICB0aGlzLmhhbmRsZVF1ZXJ5KCk7CiAgICB9LAogICAgLy8g5aSa6YCJ5qGG6YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuaWRzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0uaWQpCiAgICAgIHRoaXMuYWNoaWV2ZUNvZGVzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0uYWNoaWV2ZUNvZGUpCiAgICAgIHRoaXMucHJvY2xuc0lkcyA9IHNlbGVjdGlvbi5tYXAoaXRlbSA9PiBpdGVtLnByb2NlZHVyZUlkKQogICAgICB0aGlzLnNpbmdsZSA9IHNlbGVjdGlvbi5sZW5ndGghPT0xCiAgICAgIHRoaXMuc3B6dCA9IHRydWU7CiAgICAgIGlmIChzZWxlY3Rpb24ubGVuZ3RoKSB7CiAgICAgICAgbGV0IHJldmlld1N0YXRlID0gc2VsZWN0aW9uWzBdLmF1ZGl0U3RhdGU7CiAgICAgICAgY29uc29sZS5sb2cocmV2aWV3U3RhdGUpCiAgICAgICAgaWYocmV2aWV3U3RhdGU9PScwJyl7CiAgICAgICAgICB0aGlzLnNwenQgPSBmYWxzZTsKICAgICAgICB9ZWxzZXsKICAgICAgICAgIHRoaXMuc3B6dCA9IHRydWU7CiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMubXVsdGlwbGUgPSAhc2VsZWN0aW9uLmxlbmd0aAogICAgICB0aGlzLnNlbGVjdGlvblJvdz1zZWxlY3Rpb24KICAgIH0sCiAgICByb3dDbGljayhyb3csIGNvbHVtbiwgZXZlbnQpIHsKICAgICAgbGV0IHJlZnNFbFRhYmxlID0gdGhpcy4kcmVmcy5tdWx0aXBsZVRhYmxlOwogICAgICBsZXQgZmluZFJvdyA9IHRoaXMuc2VsZWN0aW9uUm93LmZpbmQoYyA9PiBjLnJvd0luZGV4ID09IHJvdy5yb3dJbmRleCk7CiAgICAgIC8vIGlmIChmaW5kUm93ICYmIHRoaXMuc2VsZWN0aW9uUm93Lmxlbmd0aCA9PSAxKSB7CiAgICAgIC8vICAgcmVmc0VsVGFibGUudG9nZ2xlUm93U2VsZWN0aW9uKHJvdywgZmFsc2UpOwogICAgICAvLyAgIHJldHVybjsKICAgICAgLy8gfQogICAgICByZWZzRWxUYWJsZS5jbGVhclNlbGVjdGlvbigpOwogICAgICByZWZzRWxUYWJsZS50b2dnbGVSb3dTZWxlY3Rpb24ocm93KTsKICAgIH0sCiAgICByb3dTdHlsZSh7CiAgICAgIHJvdywKICAgICAgcm93SW5kZXgKICAgIH0pIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJvdywgJ3Jvd0luZGV4JywgewogICAgICAgIHZhbHVlOiByb3dJbmRleCwKICAgICAgICB3cml0YWJsZTogdHJ1ZSwKICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZQogICAgICB9KQogICAgfSwKICAgIHJvd0NsYXNzTmFtZSh7CiAgICAgIHJvdywKICAgICAgcm93SW5kZXgKICAgIH0pIHsKICAgICAgbGV0IHJvd05hbWUgPSAiIiwKICAgICAgICBmaW5kUm93ID0gdGhpcy5zZWxlY3Rpb25Sb3cuZmluZChjID0+IGMucm93SW5kZXggPT09IHJvdy5yb3dJbmRleCk7CiAgICAgIGlmIChmaW5kUm93KSB7CiAgICAgICAgcm93TmFtZSA9ICJjdXJyZW50LXJvdyAiOwogICAgICB9CiAgICAgIHJldHVybiByb3dOYW1lOwogICAgfSwKICAgIC8qKiDmlrDlop7mjInpkq7mk43kvZwgKi8KICAgIGhhbmRsZUFkZCgpIHsKICAgICAgdGhpcy4kcmVmcy5tdWx0aXBsZVRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgIHRoaXMuYWRkRWRpdElkID0gIjAiOwogICAgfSwKICAgIGhhbmRsZVVwZGF0ZShyb3cpIHsKICAgICAgdGhpcy5yZXNldCgpOwogICAgICBjb25zdCBpZCA9IHJvdy5pZCB8fCB0aGlzLmlkc1swXTsKICAgICAgdGhpcy5vcGVuID0gdHJ1ZTsKICAgICAgdGhpcy5hZGRFZGl0SWQgPSBpZDsgLy8gaWTotYvlgLwKICAgICAgY29uc29sZS5sb2coImFkZEVkaXRJZC0tLSIgKyBhZGRFZGl0KTsKICAgIH0sCiAgICBoYW5kbGVBdXRob3Iocm93KSB7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgY29uc3QgaWQgPSByb3cuaWQgfHwgdGhpcy5pZHNbMF07CiAgICAgIGNvbnN0IGFjaGlldmVDb2RlID0gcm93LmFjaGlldmVDb2RlIHx8IHRoaXMuYWNoaWV2ZUNvZGVzWzBdOwogICAgICB0aGlzLm9wZW4xID0gdHJ1ZTsKICAgICAgdGhpcy5xdWVyeVBhcmFtczEudGVjaG5vQ29kZSA9IGFjaGlldmVDb2RlOyAvLyBpZOi1i+WAvAogICAgICB0aGlzLnF1ZXJ5UGFyYW1zMS5wZXJzb25MaXN0ID0gW107CiAgICAgIGNvbnNvbGUubG9nKCJhY2hpZXZlQ29kZS0tLSIgKyBhY2hpZXZlQ29kZSk7CiAgICAgIGxpc3RQZXJzb24odGhpcy5xdWVyeVBhcmFtczEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMucGVyc29uTGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9KTsKICAgIH0sCiAgICAvKiog5o+Q5Lqk5oyJ6ZKuICovCiAgICBzdWJtaXRGb3JtKCkgewogICAgICB0aGlzLiRyZWZzWyJmb3JtIl0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgaWYgKHRoaXMuZm9ybS5pZCAhPSBudWxsKSB7CiAgICAgICAgICAgIHVwZGF0ZUFjaGlldmUodGhpcy5mb3JtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIuS/ruaUueaIkOWKnyIpOwogICAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGFkZEFjaGlldmUodGhpcy5mb3JtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIuaWsOWinuaIkOWKnyIpOwogICAgICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZU9waW5pb24ocm93KSB7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgY29uc3QgYWNoaWV2ZUNvZGUgPSByb3cuYWNoaWV2ZUNvZGUgfHwgdGhpcy5hY2hpZXZlQ29kZXNbMF07CiAgICAgIGNvbnN0IGlkID0gcm93LmlkIHx8IHRoaXMuaWRzWzBdOwogICAgICB0aGlzLmFkZEVkaXRJZCA9IGlkOyAvLyBpZOi1i+WAvAogICAgICB0aGlzLm9wZW4yID0gdHJ1ZTsKICAgICAgdGhpcy5hY2hpZXZlQ29kZSA9IGFjaGlldmVDb2RlOyAvLyBpZOi1i+WAvAogICAgICBjb25zb2xlLmxvZygiYWNoaWV2ZUNvZGUtLS0iICsgYWNoaWV2ZUNvZGUpOwogICAgfSwKICAgIHN1Ym1pdEZvcm0xKCkgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zMS5wZXJzb25MaXN0ID0gdGhpcy5wZXJzb25MaXN0OwogICAgICBjb25zb2xlLmxvZygicGVyc29uTGlzdCIsdGhpcy5wZXJzb25MaXN0KQogICAgICBsZXQgc2F2ZUxvYWRpbmcgPSB0aGlzLnNhdmVMb2FkaW5nKCk7CiAgICAgIGxldCBudW0gPSAwOwogICAgICBmb3IgKGxldCBpPTA7IGk8dGhpcy5wZXJzb25MaXN0Lmxlbmd0aDsgaSsrKXsKICAgICAgICBudW0gKz0gTnVtYmVyKHRoaXMucGVyc29uTGlzdFtpXS5pc09uZSk7CiAgICAgIH0KICAgICAgaWYgKG51bSAhPSB0aGlzLnBlcnNvbkxpc3QubGVuZ3RoIC0gMSkgewogICAgICAgIHNhdmVMb2FkaW5nLmNsb3NlKCk7CiAgICAgICAgdGhpcy5tc2dFcnJvcigi5Y+q6IO95pyJ5LiA5Liq56ys5LiA5L2c6ICFIik7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgICAgdXBkYXRlUGVyc29uKHRoaXMucXVlcnlQYXJhbXMxKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIue8lui+keS9nOiAheaIkOWKnyIpOwogICAgICAgIHRoaXMub3BlbjEgPSBmYWxzZTsKICAgICAgICBzYXZlTG9hZGluZy5jbG9zZSgpOwogICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICAvKiog5Yig6Zmk5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVEZWxldGUocm93KSB7CiAgICAgIGNvbnN0IGlkcyA9IHJvdy5pZCB8fCB0aGlzLmlkczsKICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm56Gu6K6k5Yig6Zmk5oiQ5p6c57yW5Y+35Li6IicgKyBpZHMgKyAnIueahOaVsOaNrumhuT8nLCAi6K2m5ZGKIiwgewogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa7lrpoiLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIuWPlua2iCIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uKCkgewogICAgICAgICAgcmV0dXJuIGRlbEFjaGlldmUoaWRzKTsKICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgICAgICAgdGhpcy5tc2dTdWNjZXNzKCLliKDpmaTmiJDlip8iKTsKICAgICAgICB9KS5jYXRjaCgoKSA9PiB7fSk7CiAgICB9LAogICAgLyoqIOa1gei9rOWOhuWPsuWIneWni+WMliAqLwogICAgcHJvY2Vzc0V4YW1pbmVGb3JtMigpIHsKICAgICAgdGhpcy5zcmMgPQogICAgICAgIGAke3RoaXMucHJvY2Vzc1VybH0vYXBpL3dmL3Byb2Nlc3NIaXN0b3JpYz9wcm9jSW5zSWQ9JHt0aGlzLnByb2NsbnNJZHNbMF19YDsKICAgIH0sCiAgICAvKiog5rWB6L2s5Y6G5Y+y5oyJ6ZKu5pON5L2cICovCiAgICBwcm9jZXNzRXhhbWluZSgpIHsKICAgICAgaWYgKHRoaXMucHJvY2xuc0lkc1swXSA9PSBudWxsIHx8ICF0aGlzLnByb2NsbnNJZHNbMF0pIHsKICAgICAgICB0aGlzLm1zZ0Vycm9yKCLmsqHmnInmtYHovazljoblj7LmlbDmja7vvIEiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByb2Nlc3NFeGFtaW5lRm9ybTIoKTsKICAgICAgICB0aGlzLnByb2Nlc3NPcGVuID0gdHJ1ZTsKICAgICAgfQogICAgfQogIH0KfTsK"},null]}