{"remainingRequest":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\components\\extractForm\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\components\\extractForm\\index.vue","mtime":1693362205000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3REYXRhYmFzZSB9IGZyb20gIkAvYXBpL2FwcG9ydGlvbm1lbnQvZGF0YWJhc2UiOwppbXBvcnQgeyBzZWFyY2hGb3JTUUwsIGV4dHJhY3RGb3JQcm9qZWN0LCBiZWZvcmVFeHRyYWN0UHJvamVjdH0gZnJvbSAiQC9hcGkvcHJvamVjdC9udW0iOwppbXBvcnQgeyBleHRyYWN0Rm9yUHJvamVjdEluQ29tZSxiZWZvcmVFeHRyYWN0fSBmcm9tICJAL2FwaS9yZXZlbnVlL3JldmVudWVudW0iOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ2V4dHJhY3RGb3JtJywKICAgIHByb3BzOiB7CiAgICAgICAgb3BlbjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgaWQ6IHsKICAgICAgICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgICAgICAgZGVmYXVsdDogIiIKICAgICAgICB9LAogICAgICAgIHF1ZXJ5Rm9ybTp7CiAgICAgICAgICAgIHR5cGU6IFtPYmplY3QsU3RyaW5nXSwKICAgICAgICAgICAgZGVmYXVsdDogIiIKICAgICAgICB9LAogICAgICAgIGlzSW5Db21lOnsKICAgICAgICAgICAgdHlwZTpCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OmZhbHNlCiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOnsKICAgICAgICBvcGVuOiB7CiAgICAgICAgICAgIGhhbmRsZXIodmFsKSB7CiAgICAgICAgICAgICAgICB0aGlzLm9wZW5FeHRyYWN0ID0gdmFsOwogICAgICAgICAgICB9LAogICAgICAgICAgICBkZWVwOiB0cnVlCiAgICAgICAgfSwKICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRpdGxlOiB0aGlzLmlzSW5Db21lPyfmiJDmnKzmj5Dlj5YnOifmlLblhaXmj5Dlj5YnLAogICAgICAgICAgICBvcGVuRXh0cmFjdDogdGhpcy5vcGVuLAogICAgICAgICAgICBzYXZlTG9hZGluZzpmYWxzZSwKICAgICAgICAgICAgaXNSZW1vdGU6dHJ1ZSwKICAgICAgICAgICAgY29vbmVjdE9wdGlvbnM6IFtdLC8v5pWw5o2u5rqQCiAgICAgICAgICAgIHN0YXR1c09wdGlvbnM6W10sLy9zcWzmlbDmja7nsbvlnosKICAgICAgICAgICAgZm9ybToge30sLy/ooajljZXlj4LmlbAKICAgICAgICAgICAgZGVwdFR5cGVPcHRpb25zOltdLAogICAgICAgICAgICByYXRpb1R5cGVPcHRpb25zOltdLAogICAgICAgICAgICBydWxlczp7CiAgICAgICAgICAgICAgICBjb29uZWN0Q29kZTogWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLmlbDmja7mupDkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiY2hhbmdlIiB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgIG5vd0RhdGU6IFsKICAgICAgICAgICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi5b2T5YmN5bm05pyI5LiN6IO95Li656m6IiwgdHJpZ2dlcjogImJsdXIiIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBzcWxUeXBlOiBbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+mAieaLqeaIkOacrOexu+WeiyIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgbnVtU3FsOiBbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeWIhuaRinNxbOWGheWuuSIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgIH0sCiAgICBjcmVhdGVkKCl7CiAgICAgICAgdGhpcy5nZXRCZWZvcmVMaXN0KCk7CiAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgdGhpcy5nZXREaWN0cygiY29zdF9zcWxfdHlwZSIpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICB0aGlzLnN0YXR1c09wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgICAgIH0pOwogICAgfSwKICAgIG1vdW50ZWQoKSB7CgogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0QmVmb3JlTGlzdCgpewogICAgICAgICAgICBsZXQgcXVlcnk9ewogICAgICAgICAgICAgICAgY29tZUNvZGU6dGhpcy4kc3RvcmUuc3RhdGUudXNlci5hY2NvdW50SW5mby5kZXB0SWQsCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYodGhpcy5pc0luQ29tZSl7CiAgICAgICAgICAgICAgIGJlZm9yZUV4dHJhY3RQcm9qZWN0KHF1ZXJ5KS50aGVuKHJlc3BvbnNlPT57CiAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5jb2RlPT09MjAwKXsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtLnNxbFR5cGU9cmVzcG9uc2Uucm93c1swXS5zcWxUeXBlCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5udW1TcWw9cmVzcG9uc2Uucm93c1swXS5udW1TcWwKICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgYmVmb3JlRXh0cmFjdChxdWVyeSkudGhlbihyZXNwb25zZT0+ewogICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLmNvZGU9PT0yMDApewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm0uc3FsVHlwZT1yZXNwb25zZS5yb3dzWzBdLnNxbFR5cGUKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5mb3JtLm51bVNxbD1yZXNwb25zZS5yb3dzWzBdLm51bVNxbAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKICAgICAgICBnZXRMaXN0KCkgewogICAgICAgICAgICAvL+aVsOaNrua6kOiOt+WPlgogICAgICAgICAgICBsaXN0RGF0YWJhc2UodGhpcy5xdWVyeVBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmNvb25lY3RPcHRpb25zID0gcmVzcG9uc2Uucm93czsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBjaGFuZ2VTcWxUeXBlKGUpewogICAgICAgICAgICB0aGlzLnJlc2V0KDEpCiAgICAgICAgICAgIHRoaXMuZm9ybS5zcWxUeXBlPWUKICAgICAgICB9LAogICAgICAgIGNoYW5nZU51bVNxbChlKXsKICAgICAgICAgICAgdGhpcy5yZXNldCgyKQogICAgICAgICAgICB0aGlzLmZvcm0ubnVtU3FsPWUKICAgICAgICB9LAogICAgICAgICBjYW5jZWwoKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoImNhbmNlbCIsIGZhbHNlKTsKICAgICAgICB9LAogICAgICAgICAvLyDlvLnmoYblhbPpl60KICAgICAgICBoYW5kbGVEaWFsb2dDbG9zZSgpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgiY2FuY2VsIiwgZmFsc2UpOwogICAgICAgICAgICB0aGlzLnJlc2V0Rm9ybSgnZm9ybScpCiAgICAgICAgfSwKICAgICAgICByZXNldCh0eXBlKXsKICAgICAgICAgICAgaWYodHlwZT09MSl7CiAgICAgICAgICAgICAgICB0aGlzLmZvcm09ewogICAgICAgICAgICAgICAgICAgIHNxbFR5cGU6ICIiLAogICAgICAgICAgICAgICAgICAgIG51bVNxbDp0aGlzLmZvcm0ubnVtU3FsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgdGhpcy5mb3JtPXsKICAgICAgICAgICAgICAgICAgICBzcWxUeXBlOnRoaXMuZm9ybS5zcWxUeXBlLAogICAgICAgICAgICAgICAgICAgIG51bVNxbDogIiIsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKICAgICAgICBzdWJtaXRGb3JtKCl7CiAgICAgICAgICAgICB0aGlzLiRyZWZzWyJmb3JtIl0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgICAgICAgICAgIGlmKHZhbGlkKXsKICAgICAgICAgICAgICAgICAgICAgbGV0IGNvc3RQcm9qZWN0TnVtU3FsPXsKICAgICAgICAgICAgICAgICAgICAgICAgY29tcENvZGU6dGhpcy4kc3RvcmUuc3RhdGUudXNlci51c2VySW5mby5kZXB0SWQsCiAgICAgICAgICAgICAgICAgICAgICAgIC4uLnRoaXMuZm9ybQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0luQ29tZSkgewogICAgICAgICAgICAgICAgICAgICAgICBleHRyYWN0Rm9yUHJvamVjdChjb3N0UHJvamVjdE51bVNxbCkudGhlbihyZXNwb25zZT0+ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UuY29kZT09PTIwMCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tc2dTdWNjZXNzKCfmiJDmnKzmj5Dlj5bmiJDlip8nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoImNhbmNlbCIsIGZhbHNlKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgZXh0cmFjdEZvclByb2plY3RJbkNvbWUoY29zdFByb2plY3ROdW1TcWwpLnRoZW4ocmVzcG9uc2U9PnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3BvbnNlLmNvZGU9PT0yMDApewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubXNnU3VjY2Vzcygn5pS25YWl5o+Q5Y+W5oiQ5YqfJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCJjYW5jZWwiLCBmYWxzZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"src/views/components/extractForm","sourcesContent":["<template>\n     <el-dialog :title=\"title\" :visible.sync=\"openExtract\" width=\"50%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n     <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n         <el-col :span=\"12\">\n          <el-form-item label=\"SQL类型:\" prop=\"sqlType\">\n            <el-select v-model=\"form.sqlType\" :remote=\"isRemote\" @change=\"changeSqlType\" @click=\"changeSqlType\" placeholder=\"请选择SQL类型\">\n              <el-option\n                v-for=\"dict in statusOptions\"\n                :key=\"dict.dictValue\"\n                :label=\"dict.dictLabel\"\n                :value=\"dict.dictValue\"\n              >\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"数据源:\"  prop=\"coonectCode\" >\n          <el-select v-model=\"form.coonectCode\" placeholder=\"请选择数据源\" >\n            <el-option\n                v-for=\"dict in coonectOptions\"\n                :key=\"dict.code\"\n                :label=\"dict.name\"\n                :value=\"dict.code\"\n              ></el-option>\n          </el-select>\n        </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"年月:\" prop=\"nowDate\">\n                <el-date-picker :clearable=\"false\"\n                    v-model=\"form.nowDate\"\n                    type=\"month\"\n                    value-format=\"yyyy-MM\"\n                    placeholder=\"选择年月\"\n                    >\n                </el-date-picker>\n            </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item label=\"分摊SQL:\" prop=\"numSql\">\n                <el-input :style=\"{width:'94%'}\" v-model=\"form.numSql\" @change=\"changeNumSql\" @input=\"changeNumSql\" type=\"textarea\" rows=\"10\" placeholder=\"请输入内容\" />\n            </el-form-item>\n        </el-col>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saveLoading\" >保存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { listDatabase } from \"@/api/apportionment/database\";\nimport { searchForSQL, extractForProject, beforeExtractProject} from \"@/api/project/num\";\nimport { extractForProjectInCome,beforeExtract} from \"@/api/revenue/revenuenum\";\n\nexport default {\n    name: 'extractForm',\n    props: {\n        open: {\n            type: Boolean,\n            default: false\n        },\n        id: {\n            type: [String, Number],\n            default: \"\"\n        },\n        queryForm:{\n            type: [Object,String],\n            default: \"\"\n        },\n        isInCome:{\n            type:Boolean,\n            default:false\n        }\n    },\n    watch:{\n        open: {\n            handler(val) {\n                this.openExtract = val;\n            },\n            deep: true\n        },\n    },\n    data() {\n        return {\n            title: this.isInCome?'成本提取':'收入提取',\n            openExtract: this.open,\n            saveLoading:false,\n            isRemote:true,\n            coonectOptions: [],//数据源\n            statusOptions:[],//sql数据类型\n            form: {},//表单参数\n            deptTypeOptions:[],\n            ratioTypeOptions:[],\n            rules:{\n                coonectCode: [\n                    { required: true, message: \"数据源不能为空\", trigger: \"change\" }\n                ],\n                 nowDate: [\n                    { required: true, message: \"当前年月不能为空\", trigger: \"blur\" }\n                ],\n                sqlType: [\n                    { required: true, message: \"请选择成本类型\", trigger: \"blur\" }\n                ],\n                numSql: [\n                    { required: true, message: \"请输入分摊sql内容\", trigger: \"blur\" }\n                ],\n            }\n        };\n    },\n    created(){\n        this.getBeforeList();\n        this.getList();\n        this.getDicts(\"cost_sql_type\").then(response => {\n            this.statusOptions = response.data;\n        });\n    },\n    mounted() {\n\n    },\n\n    methods: {\n        getBeforeList(){\n            let query={\n                comeCode:this.$store.state.user.accountInfo.deptId,\n            }\n            if(this.isInCome){\n               beforeExtractProject(query).then(response=>{\n                   if(response.code===200){\n                        this.form.sqlType=response.rows[0].sqlType\n                        this.form.numSql=response.rows[0].numSql\n                   }\n                })\n            }else{\n                beforeExtract(query).then(response=>{\n                    if(response.code===200){\n                        this.form.sqlType=response.rows[0].sqlType\n                        this.form.numSql=response.rows[0].numSql\n                    }\n                })\n            }\n\n        },\n        getList() {\n            //数据源获取\n            listDatabase(this.queryParams).then(response => {\n                this.coonectOptions = response.rows;\n            });\n        },\n        changeSqlType(e){\n            this.reset(1)\n            this.form.sqlType=e\n        },\n        changeNumSql(e){\n            this.reset(2)\n            this.form.numSql=e\n        },\n         cancel() {\n            this.$emit(\"cancel\", false);\n        },\n         // 弹框关闭\n        handleDialogClose() {\n            this.$emit(\"cancel\", false);\n            this.resetForm('form')\n        },\n        reset(type){\n            if(type==1){\n                this.form={\n                    sqlType: \"\",\n                    numSql:this.form.numSql\n                }\n            }else{\n                this.form={\n                    sqlType:this.form.sqlType,\n                    numSql: \"\",\n                }\n            }\n\n        },\n        submitForm(){\n             this.$refs[\"form\"].validate(valid => {\n                 if(valid){\n                     let costProjectNumSql={\n                        compCode:this.$store.state.user.userInfo.deptId,\n                        ...this.form\n                    }\n                    if (this.isInCome) {\n                        extractForProject(costProjectNumSql).then(response=>{\n                            if(response.code===200){\n                                this.msgSuccess('成本提取成功')\n                                this.$emit(\"cancel\", false);\n                            }\n                        })\n                    }else{\n                        extractForProjectInCome(costProjectNumSql).then(response=>{\n                            if(response.code===200){\n                                this.msgSuccess('收入提取成功')\n                                this.$emit(\"cancel\", false);\n                            }\n                        })\n                    }\n                 }\n             })\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 20%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n    .el-input--mini{\n        width:300px\n    }\n  }\n</style>\n"]}]}