{"remainingRequest":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\basic\\account\\index.vue?vue&type=style&index=0&id=95c056b6&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\basic\\account\\index.vue","mtime":1693362204000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXB7CiAgLmVsLWRhdGUtZWRpdG9yLmVsLWlucHV0LCAuZWwtZGF0ZS1lZGl0b3IuZWwtaW5wdXRfX2lubmVyewogICAgd2lkdGg6IDEwMCU7CiAgfQogIC5lbC1mb3JtLWl0ZW1fX2NvbnRlbnR7CiAgICB3aWR0aDoyMjBweCAhaW1wb3J0YW50OwogIH0KICAuZWwtZGlhbG9newogICAgLmVsLWRpYWxvZ19fYm9keXsKICAgICAgLmVsLWZvcm0taXRlbV9fY29udGVudHsKICAgICAgICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7CiAgICAgICAgLmVsLWZvcm0taXRlbV9fY29udGVudHsKICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQoK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/basic/account","sourcesContent":["<template>\n    <!-- 基础信息 - 账套管理 -->\n  <div class=\"app-container\">\n    <div ref=\"search\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n        <orgSearch label=\"单位\" :queryParams=\"queryParams\" compCode=\"deptId\" compName=\"deptName\"></orgSearch>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n    </el-form>\n    </div>\n    <div ref=\"btns\">\n        <el-row :gutter=\"10\" class=\"mb8\">\n          <el-col :span=\"1.5\">\n            <el-button\n              type=\"primary\"\n\n              icon=\"el-icon-plus\"\n              size=\"mini\"\n              @click=\"handleAdd\"\n              v-hasPermi=\"['basic:account:add']\"\n            >新增</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              type=\"success\"\n\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              :disabled=\"single\"\n              @click=\"handleUpdate\"\n              v-hasPermi=\"['basic:account:edit']\"\n            >修改</el-button>\n          </el-col>\n          <el-col :span=\"1.5\">\n            <el-button\n              type=\"danger\"\n\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n              :disabled=\"multiple\"\n              @click=\"handleDelete\"\n              v-hasPermi=\"['basic:account:remove']\"\n            >删除</el-button>\n          </el-col>\n          <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n        </el-row>\n    </div>\n    <el-table v-loading=\"loading\" ref=\"accountListRef\" :height=\"tableHeight\" :data=\"accountList\" @selection-change=\"handleSelectionChange\" stripe :default-sort=\"defaultSort\" @sort-change=\"handleSortChange\"  highlight-current-row @row-click=\"handleRowClick\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"单位名称\" align=\"left\" prop=\"deptName\" show-overflow-tooltip sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" />\n      <el-table-column label=\"账套编码\" align=\"center\" prop=\"accountCode\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" />\n      <el-table-column label=\"账套名称\" align=\"left\" prop=\"accountName\" show-overflow-tooltip sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\">\n        <template slot-scope=\"scope\">\n           <el-link type=\"primary\" :underline=\"false\" v-html=\"scope.row.accountName\" @click.stop=\"handleClickTableName(scope.row)\" class=\"displayBlock text-ellipsis \"></el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"账套开始年度\" width=\"140\" align=\"center\" prop=\"startYear\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" />\n      <el-table-column label=\"账套开始月份\"  width=\"140\" align=\"center\" prop=\"startMonth\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" />\n      <el-table-column label=\"结束日期\" width=\"120\" align=\"center\" prop=\"endDate\"  sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.endDate, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改账套管理对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"50%\" append-to-body :close-on-click-modal=\"false\"  custom-class=\"el-button--primary\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"110px\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"账套编码\" prop=\"accountCode\">\n              <el-input v-model=\"form.accountCode\" placeholder=\"系统自动生成\" disabled/>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"账套名称\" prop=\"accountName\">\n              <el-input v-model=\"form.accountName\" placeholder=\"请输入账套名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <orgSearch label=\"单位\" :queryParams=\"form\" compCode=\"deptId\" compName=\"deptName\"></orgSearch>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"账套开始年度\" prop=\"startYear\">\n              <el-date-picker\n                v-model=\"form.startYear\"\n                type=\"year\"\n                placeholder=\"选择账套开始年度\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"账套开始月份\" prop=\"startMonth\">\n              <el-date-picker\n                v-model=\"form.startMonth\"\n                type=\"month\"\n                placeholder=\"选择账套开始月份\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"结束日期\" prop=\"endDate\">\n              <el-date-picker clearable\n                v-model=\"form.endDate\"\n                type=\"date\"\n                value-format=\"yyyy-MM-dd\"\n                placeholder=\"选择结束日期\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  listAccount,\n  getAccount,\n  delAccount,\n  addAccount,\n  updateAccount,\n  exportAccount\n} from \"@/api/basic/account\";\nimport orgSearch from \"@/views/components/orgSearch\";\n\nexport default {\n  name: \"Account\",\n  components: {\n    orgSearch\n  },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 账套管理表格数据\n      accountList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        deptId: this.$store.state.user.userInfo.deptId,\n        deptName: this.$store.state.user.userInfo.deptName\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        deptName: [\n          { required: true, message: \"单位不能为空\", trigger: \"blur\" },\n          { required: true, message: \"单位不能为空\", trigger: \"change\" }\n        ],\n        accountName: [\n          { required: true, message: \"账套名称不能为空\", trigger: \"blur\" }\n        ]\n      },\n      defaultSort: { prop: \"createTime\", order: \"descending\" },\n      selectionRow: [],\n      tableHeight: \"auto\"\n    };\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    }\n  },\n  created() {\n    this.getList();\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  methods: {\n    handleClickTableName(data) {\n      // 选中当前行\n      this.handleRowClick(data, false);\n      this.handleUpdate(data);\n    },\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + 18 + 45 + 84 + 40 + 20;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n    /** 查询账套管理列表 */\n    getList() {\n      this.loading = true;\n      listAccount(this.queryParams).then(response => {\n        if (response.code == 200) {\n          this.accountList = response.rows;\n          this.total = response.total;\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        accountCode: null,\n        accountName: null,\n        deptId: null,\n        deptName: null,\n        startYear: null,\n        startMonth: null,\n        endDate: null,\n        status: \"0\",\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null,\n        delFlag: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    handleSortChange(column, prop, order) {\n      this.queryParams.orderByColumn = column.prop;\n      this.queryParams.isAsc = column.order;\n      this.getList();\n    },\n    handleRowClick(row, flag = true) {\n      let accountListRef = this.$refs.accountListRef;\n      if (flag) {\n        let findRow = this.selectionRow.find(c => c.id == row.id);\n        if (findRow) {\n          accountListRef.toggleRowSelection(row, false);\n          return;\n        }\n      }\n      accountListRef.clearSelection(); //清空列表的选中\n      accountListRef.toggleRowSelection(row, true);\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      let accountListRef = this.$refs.accountListRef;\n      if (selection.length > 1) {\n        accountListRef.clearSelection(); //清空列表的选中\n        accountListRef.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      // 设置行高亮\n      accountListRef.setCurrentRow(selection[0]);\n      this.ids = selection.map(item => item.id);\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.$refs.accountListRef.clearSelection();\n      this.reset();\n      this.open = true;\n      this.title = \"账套管理 / 新增\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids;\n      const loading = this.dataLoading()                   \n      getAccount(id).then(response => {\n        if (response.code == 200) {\n          this.form = response.data;\n          this.open = true;\n          this.title = \"账套管理 / 修改\";\n          loading.close()                          \n        } else {\n          loading.close()                 \n          this.msgError(response.msg);\n        }\n      });\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateAccount(this.form).then(response => {\n              if (response.code == 200) {\n                this.msgSuccess(\"修改成功\");\n                this.open = false;\n                this.getList();\n              } else {\n                this.msgError(response.msg);\n              }\n            });\n          } else {\n            addAccount(this.form).then(response => {\n              if (response.code == 200) {\n                this.msgSuccess(\"新增成功\");\n                this.open = false;\n                this.getList();\n              } else {\n                this.msgError(response.msg);\n              }\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$confirm(\n        '是否确认删除账套管理编号为\"' + ids + '\"的数据项?',\n        \"警告\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(function() {\n          return delAccount(ids);\n        })\n        .then(response => {\n          if (response.code == \"200\") {\n            this.getList();\n            this.msgSuccess(\"删除成功!\");\n          } else {\n            this.msgError(response.msg);\n          }\n        })\n        .catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm(\"是否确认导出所有账套管理数据项?\", \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.exportLoading = true;\n          return exportAccount(queryParams);\n        })\n        .then(response => {\n          if (response.code == 200) {\n            this.download(response.msg);\n            this.exportLoading = false;\n          } else {\n            this.msgError(response.msg);\n          }\n        })\n        .catch(() => {});\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep{\n  .el-date-editor.el-input, .el-date-editor.el-input__inner{\n    width: 100%;\n  }\n  .el-form-item__content{\n    width:220px !important;\n  }\n  .el-dialog{\n    .el-dialog__body{\n      .el-form-item__content{\n        width: 70% !important;\n        .el-form-item__content{\n           width: 100% !important;\n        }\n      }\n    }\n  }\n}\n\n</style>\n\n"]}]}