{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\project\\num\\addEdit.vue?vue&type=style&index=0&id=21b22abc&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\project\\num\\addEdit.vue","mtime":1693362205725},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCAuZWwtZGlhbG9nIHsKICBtaW4taGVpZ2h0OiAyMCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAuZWwtZm9ybS1pdGVtX19jb250ZW50ewogICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudAogIH0KICAuZWwtZGlhbG9nX19ib2R5IHsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTAwcHgpOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgICAuZWwtaW5wdXQtbnVtYmVyLS1taW5pewogICAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50OwogICAgfQogIH0KfQo="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/project/num","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"70%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n    <el-form ref=\"form\" :model=\"form\" :inline=\"true\" :rules=\"rules\">\n      <el-form-item label=\"科室分类\"  prop=\"deptName\" >\n        <el-select class=\"search_w220\" @change=\"getDeptQuery\" :disabled =\"idflag\" v-model=\"form.deptName\" placeholder=\"请选择科室分类\">\n          <el-option\n            v-for=\"dict in deptTypeOptions\"\n            :key=\"dict.dictValue\"\n            :label=\"dict.dictLabel\"\n            :value=\"dict.dictValue\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"科室\"  prop=\"deptCode\" >\n        <el-select class=\"search_w220\" :loading=\"searchCoptLoading\" v-model=\"form.deptCode\" :disabled =\"idflag\" :remote=\"true\" automatic-dropdown=\"\" @change=\"ResultListDatas\" :filterable=\"filterAble\" placeholder=\"请选择科室\">\n          <el-option\n            v-for=\"item in deptDatas\"\n            :key=\"item.dictValue\"\n            :label=\"item.dictLabel\"\n            :value=\"item.dictValue\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"年月\" prop=\"nowDate\">\n        <el-date-picker class=\"search_w220\" @change=\"ResultListDatas\" :clearable=\"false\" disabled\n                        v-model=\"form.nowDate\"\n                        type=\"month\"\n                        value-format=\"yyyy-MM\"\n                        placeholder=\"选择年月\"\n        >\n        </el-date-picker>\n      </el-form-item>\n      <el-row>\n        <el-col :span=\"4\" style=\"float:right;text-align:right;\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAddTable\"\n          >添加行</el-button>\n        </el-col>\n      </el-row>\n      <el-row>\n        <el-col :span=\"24\">\n          <el-table style=\"margin-top:20px\" v-loading=\"loading\" :data=\"form.costNumList\" ref=\"costNumListTable\" stripe max-height=\"600px\">\n            <el-table-column label=\"项目编码\" align=\"center\" prop=\"projectCode\">\n              <template slot-scope=\"scope\">\n                <orgDept :formProp=\"`costNumList.${scope.$index}.projectCode`\" :datas=\"form\" :compCode=\"form.compCode\" :queryParams=\"scope.row\"  @click=\"handleClickOrgPop(scope.$index,scope.row,$event)\" :rules=\"rules.projectCode\"  />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"项目名称\" align=\"center\" show-overflow-tooltip prop=\"projectName\" />\n            <el-table-column label=\"成本金额\" align=\"center\" show-overflow-tooltip prop=\"money\">\n              <template slot-scope=\"scope\">\n                <el-input-number :precision=\"2\" controls-position=\"right\" class=\"w100\" :min=\"0\" v-model=\"scope.row.money\"  />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" fixed=\"right\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  icon=\"el-icon-delete\" circle\n                  type=\"danger\"\n                  @click=\"handleAddDelete(scope.$index, scope.row)\"></el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm(false)\" :loading=\"saveLoading\" :disabled=\"isCountinus\" >保存并继续添加</el-button>\n      <el-button type=\"primary\" @click=\"submitForm(true)\" :loading=\"saveLoading\" :disabled=\"isCountinus\" >保存</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import { validEmail } from'@/utils/validate';\n  import {getYearMonth2} from \"@/utils/date\";\n  import orgDept from \"@/views/components/orgDept\";\n  import { listNum,searchList ,searchPreList, getNum, delNum, addNum, updateNum, exportNum,searchForDeptType } from \"@/api/project/num\";\n  import { setTimeout } from 'timers';\n  import { getCostApport } from \"@/api/system/dict/data\"\n\n\n  export default {\n    name: \"addEdit\",\n    props: {\n      open: {\n        type: Boolean,\n        default: false\n      },\n      id: {\n        type: [String, Number],\n        default: \"\"\n      },\n      editData:{\n        type: [Object,String],\n        default: \"\"\n      }\n\n    },\n    watch: {\n      id: {\n        handler(val) {\n          this.reset();\n          if (val) {\n            this.id = val;\n            this.title = \"成本金额管理-编辑\";\n            this.idflag=true\n            this.form.deptCode=this.editData.deptCode\n            this.deptDatas.push({\n              dictValue:this.editData.deptCode,\n              dictLabel:this.editData.deptName\n            })\n            this.searchForDeptType()\n            this.form.nowDate=this.editData.nowDate\n            this.getList()\n            // this.form.deptName=this.form.costNumList.deptName\n          } else {\n            this.id = \"\";\n            this.idflag=false\n            this.title = \"成本金额管理-新增\";\n            this.getCostApport();\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      open: {\n        handler(val) {\n          this.openDialog = val;\n        },\n        deep: true\n      }\n    },\n    components: {\n      orgDept,\n      getCostApport,\n    },\n    data() {\n      return {\n        title: \"成本金额管理-新增\",\n        openDialog: this.open,\n        saveLoading: false,\n        idflag:'',\n        // 表单参数\n        form: {\n          costNumList:[],\n        },\n        // 表单校验\n        rules: {\n          deptCode:[\n            { required: true, message: \"科室名称不能为空\", trigger:\"blur\"}\n          ],\n          projectCode:[\n            { required: true, message: \"项目编码不能为空\", trigger:[\"blur\",\"change\",\"focus\"]}\n          ],\n        },\n        filterAble:true,\n        deptTypeOptions:[],\n        deptDatas:[],\n        isHaveSearchOption:false,\n        isCountinus:null,\n        isPassCheck:null,\n        loading:false,\n        searchCoptLoading:false,\n        isInCome:true,\n      };\n    },\n    created() {\n      // this.getList();\n      this.getDicts(\"cost_dept_type\").then(response => {\n        this.deptTypeOptions = response.data;\n      });\n    },\n    methods: {\n      getCostApport() {\n        getCostApport(this.$store.state.user.accountInfo.deptId).then(response => {\n          if (response.data) {\n            let dataTime=response.data.split(\"-\")[0]+'-'+response.data.split(\"-\")[1]\n            this.form.nowDate = dataTime\n          }\n        });\n      },\n      /** 查询成本项目管理列表 */\n      getList() {\n        this.loading = true;\n        let searchQuery={\n          deptCode: this.form.deptCode,\n          nowDate:this.form.nowDate\n        }\n        listNum(searchQuery).then(response => {\n          if(response.code===200){\n            this.form.costNumList = response.rows;\n            this.total = response.total;\n            this.loading = false;\n          }\n        });\n      },\n      ResultListDatas(){\n        this.getList()\n      },\n      handleAddDelete(idx) {\n        this.form.costNumList.splice(idx, 1);\n        // this.getList();\n      },\n      //科室查询科室类型\n      searchForDeptType(){\n        let query={\n          deptCode: this.editData.deptCode,\n          comeCode:this.$store.state.user.accountInfo.deptId,\n        }\n        searchForDeptType(query).then(response=>{\n          this.form.deptName=response.msg\n        })\n      },\n      //科室类型字典翻译\n      deptTypeFormat(row, column) {\n        return this.selectDictLabel(this.deptTypeOptions, row.deptType);\n      },\n      //科室类型查询科室获取\n      getDeptQuery(value){\n        this.searchCoptLoading=true\n        let queryDatas={\n          compCode: this.$store.state.user.accountInfo.deptId,\n          type:value\n        }\n        searchList(queryDatas).then(response=>{\n          if(response.code===200){\n            this.deptDatas=response.data\n            this.searchCoptLoading=false\n          }\n        })\n      },\n      handleClickOrgPop(idx,row,datas){\n        let data = [\"projectCode\",\"projectName\",\"money\"];\n        data.forEach(key => {\n          this.$set(row, key, datas[key]);\n        })\n      },\n      addMeth(){\n        let tablCol = {\n        };\n        this.form.costNumList.push(tablCol);\n        this.tableScrollLeft(\"costNumListTable\")\n      },\n      /** 新增添加行 */\n      handleAddTable() {\n        let params={\n          compCode: this.$store.state.user.accountInfo.deptId,\n          nowDate:this.form.nowDate\n        }\n        searchPreList(params).then(response=>{\n          if(response){\n            this.isCountinus=false;\n            this.$refs[\"form\"].validate(valid => {\n              if (valid) {\n                let tablCol={\n                  deptCode:this.form.deptCode,\n                  nowDate:this.form.nowDate,\n                  projectCode:null\n                }\n                this.form.costNumList.push(tablCol);\n                this.tableScrollLeft(\"costNumListTable\")\n              }else{\n                this.msgError(\"请输入必填项\");\n              }\n            });\n          }else{\n            this.msgError(\"当前年月已经分摊不可以维护\");\n            this.isCountinus=true\n          }\n        })\n      },\n      checkList(){\n        if(this.form.costNumList.length>0){\n          let obj = {}\n          this.form.costNumList.forEach((el,i)=>{\n            if(obj.hasOwnProperty(el.projectCode)){\n              this.form.costNumList.splice(i, 1);\n              this.msgError('明细数据不能重复');\n              this.isPassCheck=false;\n            }else{\n              obj[el.projectCode] = i;\n              this.isPassCheck=true;\n            }\n          })\n        }\n      },\n      // 弹框关闭\n      handleDialogClose() {\n        this.$emit(\"cancel\", false);\n      },\n      // 取消\n      cancel() {\n        this.$emit(\"cancel\", false);\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          id: null,\n          compCode: null,\n          accountCode: null,\n          projectCode: null,\n          projectName:null,\n          costProperty: null,\n          deptCode: null,\n          deptName: null,\n          nowDate: getYearMonth2(),\n          money: null,\n          delFlag: null,\n          createBy: null,\n          createTime: null,\n          updateBy: null,\n          updateTime: null,\n          remark: null,\n          orgCode:null,\n          deptType:null,\n          params:{},\n          searchValue:null\n        };\n        this.resetForm(\"form\");\n      },\n      /** 提交按钮 */\n      submitForm(type) {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            let params={\n              compCode: this.$store.state.user.accountInfo.deptId,\n              nowDate:this.form.nowDate\n            }\n            searchPreList(params).then(response=>{\n              if(response){\n                this.saveLoading = true;\n                this.checkList()\n                if(!this.isPassCheck){\n                  this.saveLoading=false\n                  return\n                }\n                let costNumList=this.form.costNumList.map(ite=>{\n                  if(ite.money==undefined){\n                    this.msgError(\"请输入成本金额\");\n                    this.saveLoading = false;\n                    return\n                  }\n                  return {\n                    \"compCode\": this.$store.state.user.accountInfo.deptId,\n                    \"money\": ite.money,\n                    \"projectCode\": ite.projectCode\n                  }\n                })\n                let obj={\n                  \"deptCode\": this.form.deptCode,\n                  \"nowDate\": this.form.nowDate,\n                  \"costNumList\":costNumList\n                }\n                addNum(obj).then(response => {\n                  if(this.id!==\"\"){\n                    if(type){\n                      this.$emit(\"success\", false);\n                    }else{\n                      this.$emit(\"successSubmit\", true);\n                      this.reset()\n                    }\n                    this.msgSuccess(\"修改成功\");\n                  }else{\n                    if(type){\n                      this.$emit(\"success\", false);\n                    }else{\n                      this.$emit(\"successSubmit\", true);\n                      this.reset()\n                    }\n                    this.msgSuccess(\"新增成功\");\n                  }\n                  this.saveLoading = false;\n                });\n              }else{\n                this.msgError(\"当前年月已经分摊不可以维护\");\n                this.isCountinus=true\n              }\n            })\n          }\n        });\n      },\n    }};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 20%;\n    overflow: hidden;\n    .el-form-item__content{\n      margin-left: 0 !important\n    }\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n      .el-input-number--mini{\n        width: auto !important;\n      }\n    }\n  }\n</style>\n"]}]}