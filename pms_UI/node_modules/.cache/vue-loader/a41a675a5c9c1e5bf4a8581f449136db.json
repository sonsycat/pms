{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\tool\\formDesign\\index.vue?vue&type=style&index=0&id=73cf2c12&lang=scss&scoped=true&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\tool\\formDesign\\index.vue","mtime":1682043106684},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWRpdF9mb3JtewogIDo6di1kZWVwewogICAgIC5lbC1pbnB1dC1udW1iZXItLW1pbml7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIH0KICAgICAgLmVsLWZvcm0taXRlbV9fbGFiZWx7CiAgICAgICAgd2lkdGg6IDE0MHB4ICFpbXBvcnRhbnQ7CiAgICAgIH0KICAgICAgLmVsLWZvcm0taXRlbV9fY29udGVudHsKICAgICAgICBtYXJnaW4tbGVmdDogMTQwcHggIWltcG9ydGFudDsKICAgICAgfQogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/tool/formDesign","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div ref=\"search\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n        <el-form-item label=\"模板名称\" prop=\"formName\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.formName\"\n            placeholder=\"请输入模板名称\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item label=\"模板标题\" prop=\"title\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.title\"\n            placeholder=\"请输入模板标题\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div ref=\"btns\">\n      <el-row :gutter=\"10\" class=\"mb8\">\n            <!-- v-hasPermi=\"['formDesign:formDesign:add']\"    v-hasPermi=\"['formDesign:formDesign:edit']\" v-hasPermi=\"['formDesign:formDesign:remove']\"  -->\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAdd\"\n          >添加模板</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"success\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleUpdate\"\n          >编辑模板</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            :disabled=\"multiple\"\n            @click=\"handleDelete\"\n          >删除</el-button>\n        </el-col>\n        <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n      </el-row>\n    </div>\n    <el-table v-loading=\"loading\" :height=\"tableHeight\" :data=\"formDesignList\" @selection-change=\"handleSelectionChange\" ref=\"multipleTable\" @row-click=\"rowClick\" :row-style=\"rowStyle\" :row-class-name=\"rowClassName\" highlight-current-row>\n      <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\n      <el-table-column label=\"模板名称\" align=\"left\" prop=\"formName\">\n        <template slot-scope=\"scope\">\n           <el-link type=\"primary\" :underline=\"false\" v-html=\"scope.row.formName\" @click.stop=\"handleClickTableName(scope.row)\" class=\"displayBlock text-ellipsis \"></el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"模板标题\" align=\"left\" prop=\"title\" />\n      <el-table-column label=\"表名\" align=\"left\" prop=\"genTableName\" />\n      <el-table-column label=\"说明\" align=\"left\" prop=\"remark\" width=\"450\" show-overflow-tooltip  />\n      <el-table-column label=\"显示顺序\" align=\"center\" prop=\"sortNo\" width=\"170\" />\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加模板对话框 -->\n    <el-dialog :title=\"title\" custom-class=\"el-button--primary\" :visible.sync=\"open\" width=\"30%\" append-to-body @close=\"cancel\" :close-on-click-modal=\"false\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" class=\"edit_form\" >\n        <el-form-item label=\"模板名称：\" prop=\"formName\">\n          <el-input class=\"w90\" v-model=\"form.formName\" placeholder=\"请输入模板名称\" />\n        </el-form-item>\n        <el-form-item label=\"标题：\" prop=\"title\">\n          <el-input class=\"w90\" v-model=\"form.title\" placeholder=\"请输入标题\" />\n        </el-form-item>\n        <el-form-item label=\"显示顺序：\" prop=\"sortNo\">\n          <el-input-number class=\"w90\" controls-position=\"right\" :min=\"1\" v-model=\"form.sortNo\" disabled placeholder=\"请输入显示顺序\" />\n        </el-form-item>\n        <el-form-item label=\"生成汇总数据：\" prop=\"isSum\">\n          <el-radio-group class=\"w90\" v-model=\"form.isSum\">\n            <el-radio :label=\"0\" value=\"是\">是</el-radio>\n            <el-radio :label=\"1\" value=\"否\">否</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"科室跟踪：\" prop=\"isTrack\">\n          <el-radio-group class=\"w90\" v-model=\"form.isTrack\" @change=\"changeIsTrack\">\n            <el-radio :label=\"0\" value=\"是\">是</el-radio>\n            <el-radio :label=\"1\" value=\"否\">否</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"表单模板\" prop=\"formType\">\n          <el-select v-model=\"form.formType\" clearable filterable remote placeholder=\"请选择表单模板\" class=\"w90\">\n            <el-option\n              v-for=\"dict in formTypeOption\"\n              :key=\"dict.id\"\n              :label=\"dict.formName\"\n              :value=\"dict.formName\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"说明：\" prop=\"remark\">\n          <el-input class=\"w90\" v-model=\"form.remark\" type=\"textarea\" rows=\"4\" placeholder=\"请输入说明\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm(true)\">保存并继续添加</el-button>\n        <el-button type=\"primary\" @click=\"submitForm(false)\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n    <!-- 修改模板 -->\n    <editModel v-if=\"open1\" :open=\"open1\" :queryParamsData=\"queryParams\" :formDesignId=\"addEditId\" @cancel=\"cancel1\"></editModel>\n  </div>\n</template>\n\n<script>\nimport { listFormDesign, listFormSort, delFormDesign, addFormDesign, updateFormDesign, exportFormDesign, checkFormCodeUnique } from \"@/api/formDesign/formDesign\";\nimport editModel from \"./editModel\";\nexport default {\n  name: \"FormDesign\",\n  components: {\n    editModel,\n  },\n  data() {\n    return {\n      tableHeight:'auto',\n      genTableNames:[],\n      // 遮罩层\n      loading: false,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      itemId:[],\n      formNames:[],\n      formTypeOptions:[],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 自定义表单表格数据\n      formDesignList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      open1: false,\n      addEditId: \"\",\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 30,\n        formName: null,\n        formCode: null,\n        isTrack:null,\n        compCode: this.$store.state.user.userInfo.deptId,\n      },\n      // 表单参数\n      form: {\n      },\n      // 表单校验\n      rules: {\n        formName: [\n          { required: true, message: \"模板名称不能为空\", trigger: \"blur\" }\n        ],\n        title: [\n          { required: true, message: \"标题不能为空\", trigger: \"blur\" }\n        ],\n        isSum:[\n          { required: true, message: \"请选择是否生成汇总数据\", trigger: \"blur\" }\n        ],\n        isTrack:[\n          { required: true, message: \"请选择是否科室跟踪\", trigger: \"blur\" }\n        ],\n        // formType:[\n        //   { required: true, message: \"请选择表单模板\", trigger: \"blur\" }\n        // ],\n      },\n      selectionRow:[],\n      formTypeOption:[]\n    };\n  },\n  created() {\n    this.getList();\n     this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    }\n  },\n  methods: {\n    handleClickTableName(data) {\n        // 选中当前行\n        this.rowClick(data, false);\n        this.handleUpdate(data);\n    },\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + 18 + 45 + 84 + 40 + 20;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n    /** 查询自定义表单列表 */\n    getList() {\n      this.loading = true;\n      listFormDesign(this.queryParams).then(response => {\n        this.formTypeOptions = JSON.parse(JSON.stringify(response.rows));\n      // console.log(this.formTypeOptions,'this.formTypeOptions')\n        \n        this.formDesignList = JSON.parse(JSON.stringify(response.rows));\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    listFormSort(){\n      listFormSort({compCode: this.$store.state.user.userInfo.deptId}).then(res=>{\n        if(res.code===200){\n          this.form.sortNo=res.msg\n        }\n      })\n    },\n    changeIsTrack(val){\n      let arr=[]\n      arr=this.formTypeOptions.filter(_=>_.isTrack==val);\n      this.formTypeOption=arr;\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      // this.reset();\n    },\n    cancel1(editPageSize) {\n      this.open1 = false;\n      // this.reset();\n      this.getList()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        formName: null,\n        formJson: null,\n        createBy: null,\n        createDate: null,\n        updateBy: null,\n        updateDate: null,\n        remarks: null,\n        remark:null,\n        delFlag: null,\n        formCode: null,\n        genTableName: null,\n        formUrl: null,\n        formType: null,\n        originalCode:null,\n        title:null,\n        sortNo:null,\n        pageSize:null,\n        compCode:this.$store.state.user.userInfo.deptId,\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.formNames = selection.map(item => item.formName)\n      this.genTableNames = selection.map(item => item.genTableName)\n      this.single = selection.length!==1\n      this.multiple = selection.length!==1\n      this.selectionRow=selection\n    },\n    rowClick(row, column, event) {\n      let refsElTable = this.$refs.multipleTable;\n      let findRow = this.selectionRow.find(c => c.rowIndex == row.rowIndex);\n      // if (findRow && this.selectionRow.length == 1) {\n      //   refsElTable.toggleRowSelection(row, false);\n      //   return;\n      // }\n      refsElTable.clearSelection();\n      refsElTable.toggleRowSelection(row);\n    },\n    rowStyle({\n      row,\n      rowIndex\n      }) {\n      Object.defineProperty(row, 'rowIndex', {\n        value: rowIndex,\n        writable: true,\n        enumerable: false\n      })\n    },\n    rowClassName({\n      row,\n      rowIndex\n      }) {\n      let rowName = \"\",\n        findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex);\n      if (findRow) {\n        rowName = \"current-row \";\n      }\n      return rowName;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.listFormSort();\n      this.open = true;\n      this.title = \"模板管理-添加模板\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids[0];\n      this.addEditId = id;\n      this.open1 = true; // 弹框点开\n    },\n    /** 提交按钮 */\n    submitForm(type) {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.formTypeOptions.forEach(item=>{\n            if(item.formName==this.form.formType){\n              this.form.formType=item.formJson;\n              this.form.formJson=item.formJson;\n              this.form.originalCode=item.id\n            }\n          })\n          const saveLoading=this.saveLoading()\n          addFormDesign(this.form).then(response => {\n            if(type){\n              this.reset();\n              this.msgSuccess(\"保存成功\");\n              this.getList();\n              saveLoading.close();\n            }else{\n              this.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n              saveLoading.close();\n            }\n          });\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const saveLoading=this.saveLoading(' ')\n      const ids = row.id || this.ids[0];\n      this.$confirm('是否确认删除自定义表单编号为\"' + ids + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function() {\n        return delFormDesign(ids);\n      }).then(() => {\n        this.getList();\n        this.msgSuccess(\"删除成功\");\n         saveLoading.close()\n      }).catch(() => {\n        saveLoading.close()\n      });\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有自定义表单数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.exportLoading = true;\n        return exportFormDesign(queryParams);\n      }).then(response => {\n        this.download(response.msg);\n        this.exportLoading = false;\n      }).catch(() => {});\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.edit_form{\n  ::v-deep{\n     .el-input-number--mini{\n        width: 100%;\n      }\n      .el-form-item__label{\n        width: 140px !important;\n      }\n      .el-form-item__content{\n        margin-left: 140px !important;\n      }\n  }\n}\n</style>\n"]}]}