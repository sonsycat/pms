{"remainingRequest":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\pms_oracle\\pms_UI\\src\\views\\basic\\tree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\pms_oracle\\pms_UI\\src\\views\\basic\\tree\\index.vue","mtime":1693362204000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"index.vue","sourceRoot":"src/views/basic/tree","sourcesContent":["<template>\n    <!-- 基础信息 - 树级规则管理 -->\n  <div class=\"app-container\">\n    <div ref=\"search\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\">\n        <el-form-item label=\"规则名称\" prop=\"ruleName\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.ruleName\"\n            placeholder=\"请输入规则名称\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item label=\"表名\" prop=\"ruleDb\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.ruleDb\"\n            placeholder=\"请输入规则数据库表\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div ref=\"btns\">\n      <el-row :gutter=\"10\" class=\"mb8\">\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAdd\"\n            v-hasPermi=\"['encode:tree:add']\"\n          >新增</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"success\"\n\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleUpdate\"\n            v-hasPermi=\"['encode:tree:edit']\"\n          >修改</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"danger\"\n\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            :disabled=\"multiple\"\n            @click=\"handleDelete\"\n            v-hasPermi=\"['encode:tree:remove']\"\n          >删除</el-button>\n        </el-col>\n        <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n      </el-row>\n    </div>\n    <el-table :height=\"tableHeight\" ref=\"treeListTable\" v-loading=\"loading\" :data=\"treeList\" @selection-change=\"handleSelectionChange\" :default-sort=\"defaultSort\" @sort-change=\"handleSortChange\"  highlight-current-row @row-click=\"handleRowClick\" >\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"规则名称\" align=\"left\" prop=\"ruleName\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" show-overflow-tooltip>\n        <template slot-scope=\"scope\">\n          <el-link type=\"primary\" :underline=\"false\" v-html=\"scope.row.ruleName\" @click.stop=\"handleClickTableName(scope.row)\" class=\"displayBlock text-ellipsis \"></el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"规则数据库表\" align=\"left\" prop=\"ruleDb\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" show-overflow-tooltip/>\n      <el-table-column label=\"规则数据库对应字段\" align=\"left\" prop=\"ruleColumn\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" show-overflow-tooltip/>\n      <el-table-column label=\"规则内容\" align=\"left\" prop=\"ruleContent\" sortable=\"custom\" :sort-orders=\"['descending', 'ascending']\" show-overflow-tooltip/>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改编码规则树形对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"50%\" append-to-body :close-on-click-modal=\"false\" custom-class=\"el-button--primary\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row :gutter=\"36\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"规则名称\" prop=\"ruleName\">\n              <el-input v-model=\"form.ruleName\" placeholder=\"请输入规则名称\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"规则数据库表\" prop=\"ruleDb\">\n              <el-input v-model=\"form.ruleDb\" placeholder=\"请输入规则数据库表\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"对应字段\" prop=\"ruleColumn\">\n              <el-input v-model=\"form.ruleColumn\" placeholder=\"请输入规则数据库对应字段\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"规则内容\" prop=\"ruleContent\">\n              <el-input v-model=\"form.ruleContent\" placeholder=\"请输入规则内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\" style=\"display: none\">\n            <el-form-item label=\"删除标记\" prop=\"delFlag\">\n              <el-input v-model=\"form.delFlag\" placeholder=\"请输入删除标记\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"  maxlength=\"100\" show-word-limit rows=\"3\" resize=\"none\"/> \n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  listTree,\n  getTree,\n  delTree,\n  addTree,\n  updateTree,\n  exportTree\n} from \"@/api/encode/tree\";\n\nexport default {\n  name: \"Tree\",\n  components: {},\n  data() {\n    return {\n      defaultSort: { prop: \"createTime\", order: \"descending\" },\n      tableHeight: \"auto\",\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 编码规则树形表格数据\n      treeList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        ruleName: null,\n        ruleDb: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        ruleName: [\n          { required: true, message: \"规则名称不能为空\", trigger: \"blur\" }\n        ],\n        ruleDb: [\n          { required: true, message: \"规则数据库表不能为空\", trigger: \"blur\" }\n        ],\n        ruleColumn: [\n          {\n            required: true,\n            message: \"规则数据库对应字段不能为空\",\n            trigger: \"blur\"\n          }\n        ],\n        ruleContent: [\n          { required: true, message: \"规则内容不能为空\", trigger: \"blur\" }\n        ]\n      },\n      selectionRow: []\n    };\n  },\n  created() {\n    this.getList();\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    }\n  },\n  methods: {\n    handleClickTableName(data) {\n      // 选中当前行\n      this.handleRowClick(data, false);\n      this.handleUpdate(data);\n    },\n    handleSortChange(column, prop, order) {\n      this.queryParams.orderByColumn = column.prop;\n      this.queryParams.isAsc = column.order;\n      this.getList();\n    },\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + 18 + 45 + 84 + 40 + 20;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n    /** 查询编码规则树形列表 */\n    getList() {\n      this.loading = true;\n      listTree(this.queryParams).then(response => {\n        if (response.code == 200) {\n          this.treeList = response.rows;\n          this.total = response.total;\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        ruleName: null,\n        ruleDb: null,\n        ruleColumn: null,\n        ruleContent: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 点击行\n    handleRowClick(row, flag = true) {\n      let treeListTable = this.$refs.treeListTable;\n      if (flag) {\n        let findRow = this.selectionRow.find(c => c.id == row.id);\n        if (findRow) {\n          treeListTable.toggleRowSelection(row, false);\n          return;\n        }\n      }\n      treeListTable.clearSelection(); //清空列表的选中\n      treeListTable.toggleRowSelection(row, true);\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      let treeListTable = this.$refs.treeListTable;\n      if (selection.length > 1) {\n        treeListTable.clearSelection(); //清空列表的选中\n        treeListTable.toggleRowSelection(selection[selection.length - 1], true); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      // 设置行高亮\n      treeListTable.setCurrentRow(selection[0]);\n\n      this.ids = selection.map(item => item.id);\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.$refs.treeListTable.clearSelection();\n      this.reset();\n      this.open = true;\n      this.title = \"编码规则树形 / 新增\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids;\n      const loading = this.dataLoading()                   \n      getTree(id).then(response => {\n        if (response.code == 200) {\n          this.form = response.data;\n          this.open = true;\n          this.title = \"编码规则树形 / 修改\";\n          loading.close()                           \n        } else {\n          this.msgError(response.msg);\n        }\n      }).catch(()=>{\n        loading.close();            \n      })\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateTree(this.form).then(response => {\n              if (response.code == 200) {\n                this.msgSuccess(\"修改成功\");\n                this.open = false;\n                this.getList();\n              } else {\n                this.msgError(response.msg);\n              }\n            });\n          } else {\n            addTree(this.form).then(response => {\n              if (response.code == 200) {\n                this.msgSuccess(\"新增成功\");\n                this.open = false;\n                this.getList();\n              } else {\n                this.msgError(response.msg);\n              }\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$confirm(\n        '是否确认删除编码规则树形编号为\"' + ids + '\"的数据项?',\n        \"警告\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(function() {\n          return delTree(ids);\n        })\n        .then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        })\n        .catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm(\"是否确认导出所有编码规则树形数据项?\", \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      })\n        .then(() => {\n          this.exportLoading = true;\n          return exportTree(queryParams);\n        })\n        .then(response => {\n          if (response.code == 200) {\n            this.download(response.msg);\n            this.exportLoading = false;\n          } else {\n            this.msgError(response.msg);\n          }\n        })\n        .catch(() => {});\n    }\n  }\n};\n</script>\n"]}]}