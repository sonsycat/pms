{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\tool\\gen\\editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\tool\\gen\\editTable.vue","mtime":1682043106629},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEdlblRhYmxlLCB1cGRhdGVHZW5UYWJsZSB9IGZyb20gJ0AvYXBpL3Rvb2wvZ2VuJwppbXBvcnQgeyBvcHRpb25zZWxlY3QgYXMgZ2V0RGljdE9wdGlvbnNlbGVjdCB9IGZyb20gJ0AvYXBpL3N5c3RlbS9kaWN0L3R5cGUnCmltcG9ydCB7IGxpc3RNZW51IGFzIGdldE1lbnVUcmVlc2VsZWN0IH0gZnJvbSAnQC9hcGkvc3lzdGVtL21lbnUnCmltcG9ydCBiYXNpY0luZm9Gb3JtIGZyb20gJy4vYmFzaWNJbmZvRm9ybScKaW1wb3J0IGdlbkluZm9Gb3JtIGZyb20gJy4vZ2VuSW5mb0Zvcm0nCmltcG9ydCBTb3J0YWJsZSBmcm9tICdzb3J0YWJsZWpzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdHZW5FZGl0JywKICBjb21wb25lbnRzOiB7CiAgICBiYXNpY0luZm9Gb3JtLAogICAgZ2VuSW5mb0Zvcm0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDpgInkuK3pgInpobnljaHnmoQgbmFtZQogICAgICBhY3RpdmVOYW1lOiAnY2xvdW0nLAogICAgICAvLyDooajmoLznmoTpq5jluqYKICAgICAgdGFibGVIZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgLSAyNDUgKyAncHgnLAogICAgICAvLyDooajkv6Hmga8KICAgICAgdGFibGVzOiBbXSwKICAgICAgLy8g6KGo5YiX5L+h5oGvCiAgICAgIGNsb3VtbnM6IFtdLAogICAgICAvLyDlrZflhbjkv6Hmga8KICAgICAgZGljdE9wdGlvbnM6IFtdLAogICAgICAvLyDoj5zljZXkv6Hmga8KICAgICAgbWVudXM6IFtdLAogICAgICAvLyDooajor6bnu4bkv6Hmga8KICAgICAgaW5mbzoge30sCiAgICAgIC8vIOWtl+WFuGRpYWxvZwogICAgICBkaWN0U2VhcmNoRGlhbG9nOiBmYWxzZSwKICAgICAgLy8gc2VsZWN057uR5a6a5YC8CiAgICAgIGRpY3RUeXBlOiAnJywKICAgICAgLy8g6KGM57Si5byVCiAgICAgIHJvd0luZGV4OiAnJwogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHRhYmxlSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMgJiYgdGhpcy4kcm91dGUucGFyYW1zLnRhYmxlSWQKICAgIGlmICh0YWJsZUlkKSB7CiAgICAgIC8vIOiOt+WPluihqOivpue7huS/oeaBrwogICAgICBnZXRHZW5UYWJsZSh0YWJsZUlkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5jbG91bW5zID0gcmVzLmRhdGEucm93cwogICAgICAgIHRoaXMuaW5mbyA9IHJlcy5kYXRhLmluZm8KICAgICAgICB0aGlzLnRhYmxlcyA9IHJlcy5kYXRhLnRhYmxlcwogICAgICB9KQogICAgICAvKiog5p+l6K+i5a2X5YW45LiL5ouJ5YiX6KGoICovCiAgICAgIGdldERpY3RPcHRpb25zZWxlY3QoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLmRpY3RPcHRpb25zID0gcmVzcG9uc2UuZGF0YQogICAgICB9KQogICAgICAvKiog5p+l6K+i6I+c5Y2V5LiL5ouJ5YiX6KGoICovCiAgICAgIGdldE1lbnVUcmVlc2VsZWN0KCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5tZW51cyA9IHRoaXMuaGFuZGxlVHJlZShyZXNwb25zZS5kYXRhLCAnbWVudUlkJykKICAgICAgfSkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKiDmj5DkuqTmjInpkq4gKi8KICAgIHN1Ym1pdEZvcm0oKSB7CiAgICAgIGNvbnN0IGJhc2ljRm9ybSA9IHRoaXMuJHJlZnMuYmFzaWNJbmZvLiRyZWZzLmJhc2ljSW5mb0Zvcm0KICAgICAgY29uc3QgZ2VuRm9ybSA9IHRoaXMuJHJlZnMuZ2VuSW5mby4kcmVmcy5nZW5JbmZvRm9ybQogICAgICBQcm9taXNlLmFsbChbYmFzaWNGb3JtLCBnZW5Gb3JtXS5tYXAodGhpcy5nZXRGb3JtUHJvbWlzZSkpLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zdCB2YWxpZGF0ZVJlc3VsdCA9IHJlcy5ldmVyeShpdGVtID0+ICEhaXRlbSkKICAgICAgICBpZiAodmFsaWRhdGVSZXN1bHQpIHsKICAgICAgICAgIGNvbnN0IGdlblRhYmxlID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzaWNGb3JtLm1vZGVsLCBnZW5Gb3JtLm1vZGVsKQogICAgICAgICAgZ2VuVGFibGUuY29sdW1ucyA9IHRoaXMuY2xvdW1ucwogICAgICAgICAgZ2VuVGFibGUucGFyYW1zID0gewogICAgICAgICAgICB0cmVlQ29kZTogZ2VuVGFibGUudHJlZUNvZGUsCiAgICAgICAgICAgIHRyZWVOYW1lOiBnZW5UYWJsZS50cmVlTmFtZSwKICAgICAgICAgICAgdHJlZVBhcmVudENvZGU6IGdlblRhYmxlLnRyZWVQYXJlbnRDb2RlLAogICAgICAgICAgICBwYXJlbnRNZW51SWQ6IGdlblRhYmxlLnBhcmVudE1lbnVJZAogICAgICAgICAgfQogICAgICAgICAgdXBkYXRlR2VuVGFibGUoZ2VuVGFibGUpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy5tc2dTdWNjZXNzKHJlcy5tc2cpCiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMubXNnRXJyb3IoJ+ihqOWNleagoemqjOacqumAmui/h++8jOivt+mHjeaWsOajgOafpeaPkOS6pOWGheWuuScpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGdldEZvcm1Qcm9taXNlKGZvcm0pIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIGZvcm0udmFsaWRhdGUocmVzID0+IHsKICAgICAgICAgIHJlc29sdmUocmVzKQogICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAogICAgLyoqIOWFs+mXreaMiemSriAqLwogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YWdzVmlldy9kZWxWaWV3JywgdGhpcy4kcm91dGUpCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcGF0aDogJy90b29sL2dlbicsIHF1ZXJ5OiB7IHQ6IERhdGUubm93KCkgfSB9KQogICAgfSwKICAgIC8v5Yip55So5Y2V5YWD5qC855qEIGNsYXNzTmFtZSDnmoTlm57osIPmlrnms5XvvIznu5nooYzliJfntKLlvJXotYvlgLwKICAgIHRhYmxlQ2VsbENsYXNzTmFtZSh7IHJvdywgY29sdW1uLCByb3dJbmRleCwgY29sdW1uSW5kZXggfSkgey8v5rOo5oSP6L+Z6YeM5piv6Kej5p6ECiAgICAgIHJvdy5pbmRleCA9IHJvd0luZGV4CiAgICAgIGNvbHVtbi5pbmRleCA9IGNvbHVtbkluZGV4CiAgICB9LAogICAgLy8g5LiL5ouJ5qGG54K55Ye75LqL5Lu2CiAgICBoYW5kbGVDbGljayhyb3cpIHsKICAgIAljb25zb2xlLmxvZyhyb3cpOwogICAgICB0aGlzLiRzZXQodGhpcy5jbG91bW5zW3Jvdy5pbmRleF0sICdkaWN0T3B0aW9ucycsIHRoaXMuZGljdE9wdGlvbnMpCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc3QgZWwgPSB0aGlzLiRyZWZzLmRyYWdUYWJsZS4kZWwucXVlcnlTZWxlY3RvckFsbCgnLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIgPiB0YWJsZSA+IHRib2R5JylbMF0KICAgIGNvbnN0IHNvcnRhYmxlID0gU29ydGFibGUuY3JlYXRlKGVsLCB7CiAgICAgIGhhbmRsZTogJy5hbGxvd0RyYWcnLAogICAgICBvbkVuZDogZXZ0ID0+IHsKICAgICAgICBjb25zdCB0YXJnZXRSb3cgPSB0aGlzLmNsb3VtbnMuc3BsaWNlKGV2dC5vbGRJbmRleCwgMSlbMF0KICAgICAgICB0aGlzLmNsb3VtbnMuc3BsaWNlKGV2dC5uZXdJbmRleCwgMCwgdGFyZ2V0Um93KQogICAgICAgIGZvciAobGV0IGluZGV4IGluIHRoaXMuY2xvdW1ucykgewogICAgICAgICAgdGhpcy5jbG91bW5zW2luZGV4XS5zb3J0ID0gcGFyc2VJbnQoaW5kZXgpICsgMQogICAgICAgIH0KICAgICAgfQogICAgfSkKICB9Cn0K"},{"version":3,"sources":["editTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"editTable.vue","sourceRoot":"src/views/tool/gen","sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-table border  ref=\"dragTable\" :data=\"cloumns\" row-key=\"columnId\" :max-height=\"tableHeight\"\n                  :cell-class-name=\"tableCellClassName\">\n          <el-table-column sortable label=\"序号\" type=\"index\" min-width=\"5%\" class-name=\"allowDrag\"/>\n          <el-table-column\n            label=\"字段列名\"\n            prop=\"columnName\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"字段描述\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"Java类型\" min-width=\"11%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.javaType\">\n                <el-option label=\"Long\" value=\"Long\"/>\n                <el-option label=\"String\" value=\"String\"/>\n                <el-option label=\"Integer\" value=\"Integer\"/>\n                <el-option label=\"Double\" value=\"Double\"/>\n                <el-option label=\"BigDecimal\" value=\"BigDecimal\"/>\n                <el-option label=\"Date\" value=\"Date\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"java属性\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.javaField\"></el-input>\n            </template>\n          </el-table-column>\n\n          <el-table-column sortable label=\"插入\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isInsert\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"编辑\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isEdit\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"列表\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isList\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isQuery\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询方式\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\"/>\n                <el-option label=\"!=\" value=\"NE\"/>\n                <el-option label=\">\" value=\"GT\"/>\n                <el-option label=\">=\" value=\"GTE\"/>\n                <el-option label=\"<\" value=\"LT\"/>\n                <el-option label=\"<=\" value=\"LTE\"/>\n                <el-option label=\"LIKE\" value=\"LIKE\"/>\n                <el-option label=\"BETWEEN\" value=\"BETWEEN\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"必填\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isRequired\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"显示类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\"/>\n                <el-option label=\"文本域\" value=\"textarea\"/>\n                <el-option label=\"下拉框\" value=\"select\"/>\n                <el-option label=\"单选框\" value=\"radio\"/>\n                <el-option label=\"复选框\" value=\"checkbox\"/>\n                <el-option label=\"日期控件\" value=\"datetime\"/>\n                <el-option label=\"图片上传\" value=\"imageUpload\"/>\n                <el-option label=\"文件上传\" value=\"fileUpload\"/>\n                <el-option label=\"富文本控件\" value=\"editor\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"字典类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select clearable filterable placeholder=\"请选择\" v-model=\"scope.row.dictType\"\n                         v-on:click.native=\"handleClick(scope.row)\">\n                <el-option\n                  v-for=\"dict in scope.row.dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\">\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" :tables=\"tables\" :menus=\"menus\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\n  import { getGenTable, updateGenTable } from '@/api/tool/gen'\n  import { optionselect as getDictOptionselect } from '@/api/system/dict/type'\n  import { listMenu as getMenuTreeselect } from '@/api/system/menu'\n  import basicInfoForm from './basicInfoForm'\n  import genInfoForm from './genInfoForm'\n  import Sortable from 'sortablejs'\n\n  export default {\n    name: 'GenEdit',\n    components: {\n      basicInfoForm,\n      genInfoForm\n    },\n    data() {\n      return {\n        // 选中选项卡的 name\n        activeName: 'cloum',\n        // 表格的高度\n        tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n        // 表信息\n        tables: [],\n        // 表列信息\n        cloumns: [],\n        // 字典信息\n        dictOptions: [],\n        // 菜单信息\n        menus: [],\n        // 表详细信息\n        info: {},\n        // 字典dialog\n        dictSearchDialog: false,\n        // select绑定值\n        dictType: '',\n        // 行索引\n        rowIndex: ''\n      }\n    },\n    created() {\n      const tableId = this.$route.params && this.$route.params.tableId\n      if (tableId) {\n        // 获取表详细信息\n        getGenTable(tableId).then(res => {\n          this.cloumns = res.data.rows\n          this.info = res.data.info\n          this.tables = res.data.tables\n        })\n        /** 查询字典下拉列表 */\n        getDictOptionselect().then(response => {\n          this.dictOptions = response.data\n        })\n        /** 查询菜单下拉列表 */\n        getMenuTreeselect().then(response => {\n          this.menus = this.handleTree(response.data, 'menuId')\n        })\n      }\n    },\n    methods: {\n      /** 提交按钮 */\n      submitForm() {\n        const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n        const genForm = this.$refs.genInfo.$refs.genInfoForm\n        Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n          const validateResult = res.every(item => !!item)\n          if (validateResult) {\n            const genTable = Object.assign({}, basicForm.model, genForm.model)\n            genTable.columns = this.cloumns\n            genTable.params = {\n              treeCode: genTable.treeCode,\n              treeName: genTable.treeName,\n              treeParentCode: genTable.treeParentCode,\n              parentMenuId: genTable.parentMenuId\n            }\n            updateGenTable(genTable).then(res => {\n              this.msgSuccess(res.msg)\n              if (res.code === 200) {\n                this.close()\n              }\n            })\n          } else {\n            this.msgError('表单校验未通过，请重新检查提交内容')\n          }\n        })\n      },\n      getFormPromise(form) {\n        return new Promise(resolve => {\n          form.validate(res => {\n            resolve(res)\n          })\n        })\n      },\n      /** 关闭按钮 */\n      close() {\n        this.$store.dispatch('tagsView/delView', this.$route)\n        this.$router.push({ path: '/tool/gen', query: { t: Date.now() } })\n      },\n      //利用单元格的 className 的回调方法，给行列索引赋值\n      tableCellClassName({ row, column, rowIndex, columnIndex }) {//注意这里是解构\n        row.index = rowIndex\n        column.index = columnIndex\n      },\n      // 下拉框点击事件\n      handleClick(row) {\n      \tconsole.log(row);\n        this.$set(this.cloumns[row.index], 'dictOptions', this.dictOptions)\n      }\n    },\n    mounted() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      const sortable = Sortable.create(el, {\n        handle: '.allowDrag',\n        onEnd: evt => {\n          const targetRow = this.cloumns.splice(evt.oldIndex, 1)[0]\n          this.cloumns.splice(evt.newIndex, 0, targetRow)\n          for (let index in this.cloumns) {\n            this.cloumns[index].sort = parseInt(index) + 1\n          }\n        }\n      })\n    }\n  }\n</script>\n"]}]}