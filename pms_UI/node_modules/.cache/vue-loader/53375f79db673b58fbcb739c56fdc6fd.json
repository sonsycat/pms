{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\apport\\apport\\addEdit.vue?vue&type=style&index=0&id=66ec8801&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\apport\\apport\\addEdit.vue","mtime":1693362204061},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgbWluLWhlaWdodDogMjAlOwogIG92ZXJmbG93OiBoaWRkZW47CiAgLmVsLWRpYWxvZ19fYm9keSB7CiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwMHB4KTsKICAgIG92ZXJmbG93OiBhdXRvOwogICAgcGFkZGluZzogMzBweCAyMHB4IDAgIWltcG9ydGFudDsKICB9Cn0K"},{"version":3,"sources":["addEdit.vue"],"names":[],"mappingskfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/apport/apport","sourcesContent":["<template>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"40%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"110px\">\n        <el-col :span=\"12\">\n          <el-form-item label=\"分摊编码\" prop=\"apportCode\">\n            <el-input v-model=\"form.apportCode\" placeholder=\"请输入分摊编码\"  maxlength=\"50\" show-word-limit disabled />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-form-item label=\"分摊年月\" prop=\"nowDate\">\n            <el-date-picker disabled class=\"w100\"\n              v-model=\"form.nowDate\"\n              type=\"month\"\n              value-format=\"yyyy-MM\"\n              placeholder=\"选择年月\">\n            </el-date-picker>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <div shadow=\"always\" >\n            <el-button type=\"success\" style=\"float:right\" @click=\"submitForm\" :loading=\"saveLoading\">开始计算</el-button>\n          </div>\n        </el-col>\n          <el-col :span=\"24\" class=\"mb20\" style=\"margin:10px 0 0\">\n            <el-progress v-if=\"progressShow\" :text-inside=\"true\" :stroke-width=\"20\" :percentage=\"percentage\"></el-progress>\n          </el-col>\n          <el-col :span=\"24\" style=\"max-height:450px;overflow:auto;padding:10px 0\">\n            <el-timeline>\n              <el-timeline-item\n                v-for=\"(activity, index) in activities\"\n                :key=\"index\"\n                :icon=\"activity.icon\"\n                :type=\"activity.type\"\n                :size=\"activity.size\"\n              >\n                <!-- :timestamp=\"activity.timestamp\" -->\n                {{activity.content}}\n                <div v-if=\"!activity.flag\" class=\"errorStyle\">{{activity.timestamp}}</div>\n                <div v-if=\"activity.flag\" class=\"successStyle\">{{activity.timestamp}}</div>\n                <div v-if=\"activity.flag\" class=\"successStyle\">{{activity.idea1}}</div>\n                <div v-if=\"activity.flag\" class=\"successStyle\">{{activity.idea2}}</div>\n                <div v-if=\"activity.flag\" class=\"successStyle\">{{activity.idea3}}</div>\n              </el-timeline-item>\n            </el-timeline>\n          </el-col>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { getCostApport } from \"@/api/system/dict/data\"\nimport { validEmail } from'@/utils/validate'\nimport { listApport, getApport, addApportFtjs,addApportYjftjs,addApportEjftjs,addApportSjftjs, addVerification1,addVerification2,addVerification3,addVerification } from \"@/api/apport/apport\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset();\n        if (val) {\n          this.id = val;\n          this.title = \"成本分摊 / 分摊计算\";\n          this.getDetailInfo();\n        } else {\n          this.form.apportType='1';\n          this.id = \"\";\n          this.title = \"成本分摊 / 分摊计算\";\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    open: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n  },\n  data() {\n    return {\n      title: \"分摊计算管理-新增\",\n      openDialog: this.open,\n      saveLoading: false,\n      // 表单参数\n      form: {},\n      apportTypeOptions: [],\n      checkData:[],\n      progressShow:false,\n      activities: [],\n      percentage:0,\n\t  \t// 表单校验\n      rules: {\n        nowDate: [\n          { required: true, message: \"分摊年月不能为空\", trigger: \"blur\" }\n        ],\n        apportType: [\n          { required: true, message: \"分摊级别不能为空\", trigger: \"blur\" }\n        ],\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"cost_apport_type\").then(response => {\n    });\n    this.getCostApport()\n  },\n  methods: {\n    //分摊计算弹框年月限制\n    getCostApport() {\n      getCostApport(this.$store.state.user.accountInfo.deptId).then(response => {\n        if (response.data) {\n          this.form.nowDate = response.data;\n        } else {\n          this.form.nowDate = getYear();\n        }\n      });\n    },\n  \tgetDetailInfo() {\n      getApport(this.id).then(response => {\n        console.log(response);\n        this.form = response.data;\n      });\n    },\n    /** 查询分摊计算列表 */\n    getList() {\n      this.loading = true;\n      listApport(this.queryParams).then(response => {\n        this.apportList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 分摊级别(保存最后的级别)字典翻译\n    apportTypeFormat(row, column) {\n      return this.selectDictLabel(this.apportTypeOptions, row.apportType);\n    },\n    //分摊计算的多选关联\n    handlerChange(e,el){\n      let arr=[]\n      this.apportTypeOptions.forEach((ite,i)=>{\n        if(el.target.checked){\n          if(ite.dictValue<=el.target.value){\n            arr.push(ite.dictValue)\n          }\n        }else{\n          if(ite.dictValue<el.target.value){\n            arr.push(ite.dictValue)\n          }\n        }\n      })\n      this.form.apportType=arr\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"success\", false);\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"success\", false);\n      this.$emit(\"cancel\", false);\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        compCode: this.$store.state.user.userInfo.deptId,\n        accountCode: this.$store.state.user.accountInfo.accountCode,\n        apportCode: null,\n        nowDate: null,\n        apportType: [],\n        forward: null,\n        back: null,\n        apportTime: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.saveLoading = true;\n          this.activities = []\n          this.progressShow = true\n         // this.form.apportType=this.form.apportType.sort((a,b)=>{return b-a})[0]\n\n            this.saveStepOne1(this.form).then(()=>{\n            }).then(()=>{\n              return this.saveStepOne2(this.form)\n            }).then(()=>{\n              return this.saveStepOne3(this.form)\n            }).then(()=>{\n              return this.saveStepTow(this.form)\n            }).then(()=>{\n              this.saveLoading = false;\n            }).catch((res)=>{\n              this.saveLoading = false;\n            })\n\n        }\n      });\n    },\n    saveStepOne(data){\n      return new Promise((reslove,reject)=>{\n        addVerification1(data).then(response =>{\n          if(response.code == 200){\n            this.percentage = 15\n            this.activities.push({\n              content: '验证科室快照',\n              timestamp: 'ok',\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 10\n          this.activities.push({\n            content: '验证科室快照',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepOne1(data){\n      return new Promise((reslove,reject)=>{\n        addVerification2(data).then(response =>{\n          if(response.code == 200){\n            this.percentage = 30\n            this.activities.push({\n              content: '验证分摊方案',\n              timestamp: 'ok',\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 20\n          this.activities.push({\n            content: '验证分摊方案',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepOne2(data){\n      return new Promise((reslove,reject)=>{\n        addVerification3(data).then(response =>{\n          if(response.code == 200){\n            this.percentage = 45\n            this.activities.push({\n              content: '验证分摊比例',\n              timestamp: 'ok',\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 30\n          this.activities.push({\n            content: '验证分摊比例',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepOne3(data){\n      return new Promise((reslove,reject)=>{\n        addVerification(data).then(response =>{\n          if(response.code == 200){\n            this.percentage = 60\n            this.activities.push({\n              content: '验证成本数据',\n              timestamp: 'ok',\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 40\n          this.activities.push({\n            content: '验证成本数据',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepTow(data){\n      return new Promise((reslove,reject)=>{\n        addApportFtjs(data).then(response =>{\n          this.form = response.data;\n          if(response.code == 200){\n            this.percentage = 100\n            this.activities.push({\n              content: '开始计算计入成本分摊数据',\n              timestamp: 'ok',\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 50\n          this.activities.push({\n            content: '开始计算计入成本分摊数据',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepTow1(data){\n      return new Promise((reslove,reject)=>{\n        addApportYjftjs(data).then(response =>{\n          this.form = response.data;\n          if(response.code == 200){\n            this.percentage = 80\n            this.activities.push({\n              content: '开始计算一级分摊数据',\n              timestamp: 'ok',\n              idea1: '一级分摊数据计算完成',\n              idea2: '分摊前金额'+this.form.forward,\n              idea3: '分摊后金额'+this.form.back,\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 60\n          this.activities.push({\n            content: '开始计算一级分摊数据',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepTow2(data){\n      return new Promise((reslove,reject)=>{\n        addApportEjftjs(data).then(response =>{\n          this.form = response.data;\n          if(response.code == 200){\n            this.percentage = 90\n            this.activities.push({\n              content: '开始计算二级分摊数据',\n              timestamp: 'ok',\n              idea1: '二级分摊数据计算完成',\n              idea2: '分摊前金额'+this.form.forward,\n              idea3: '分摊后金额'+this.form.back,\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 70\n          this.activities.push({\n            content: '开始计算二级分摊数据',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n    saveStepTow3(data){\n      return new Promise((reslove,reject)=>{\n        addApportSjftjs(data).then(response =>{\n          this.form = response.data;\n          if(response.code == 200){\n            this.percentage = 100\n            this.activities.push({\n              content: '开始计算三级分摊数据',\n              timestamp: 'ok',\n              idea1: '三级分摊数据计算完成',\n              idea2: '分摊前金额'+this.form.forward,\n              idea3: '分摊后金额'+this.form.back,\n              size: 'large',\n              type: 'success',\n              icon: 'el-icon-check',\n              flag:true\n            })\n            reslove()\n          }else{\n            reject(response)\n          }\n        }).catch((res)=>{\n          this.percentage = 80\n          this.activities.push({\n            content: '开始计算三级分摊数据',\n            timestamp: 'Error',\n            size: 'large',\n            type: 'danger',\n            color:\"red\",\n            icon: 'el-icon-close',\n            flag:false\n          })\n          reject(res)\n        })\n      })\n    },\n}};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 20%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n      padding: 30px 20px 0 !important;\n    }\n  }\n</style>\n"]}]}