{"remainingRequest":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\pms_UI\\src\\views\\basic\\sysemp\\index.vue?vue&type=style&index=0&id=ff6da60e&scoped=true&lang=css&","dependencies":[{"path":"F:\\pms_UI\\src\\views\\basic\\sysemp\\index.vue","mtime":1693362204522},{"path":"F:\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"F:\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbW1vbiB7CiAgd2lkdGg6IDIxMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingss5BA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/basic/sysemp","sourcesContent":["<template>\n    <!-- 基础信息 - 人员信息 -->\n  <div class=\"app-container\">\n    <div ref=\"search\" >\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n      <orgSearch size=\"small\" label=\"单位\" :queryParams=\"queryParams\"  ></orgSearch>\n      <el-form-item label=\"科室名称\" prop=\"deptName\">\n        <el-select v-model=\"queryParams.deptCode\" clearable @click.native=\"getDivision()\" size=\"small\">\n          <el-option\n            v-for=\"item in deptList\"\n            :key=\"item.deptRoomId\"\n            :label=\"item.deptRoomName\"\n            :value=\"item.deptRoomId\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"人员信息\" prop=\"empName\">\n        <el-input\n          v-model=\"queryParams.empName\"\n          placeholder=\"请输入工号或姓名\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n    </div>\n    <div ref=\"btns\">\n      <el-row :gutter=\"10\" class=\"mb8\">\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAdd\"\n            v-hasPermi=\"['basic:sysEmp:add']\"\n          >新增\n          </el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"success\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleUpdate\"\n            v-hasPermi=\"['basic:sysEmp:edit']\"\n          >修改\n          </el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            :disabled=\"multiple\"\n            @click=\"handleDelete\"\n            v-hasPermi=\"['basic:sysEmp:remove']\"\n          >删除\n          </el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button type=\"info\" plain icon=\"el-icon-upload2\" size=\"mini\" @click=\"handleImport\"\n                     v-hasPermi=\"['basic:sysEmp:import']\">导入\n          </el-button>\n        </el-col>\n<!--        <el-col :span=\"1.5\">-->\n<!--          <el-button-->\n<!--            type=\"primary\"-->\n<!--            icon=\"el-icon-edit\"-->\n<!--            size=\"mini\"-->\n<!--            :disabled=\"single\"-->\n<!--            @click=\"processExamine\"-->\n<!--            v-hasPermi=\"['emp:sysEmp:edit']\"-->\n<!--          >流转历史</el-button>-->\n<!--        </el-col>-->\n        <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n      </el-row>\n    </div>\n    <el-table :height=\"tableHeight\" :row-class-name=\"tableRowClassName\"  v-loading=\"loading\" ref=\"sysEmpListTable\" :data=\"sysEmpList\" @selection-change=\"handleSelectionChange\"   highlight-current-row @row-click=\"handleRowClick\"  >\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"工号\" align=\"center\" prop=\"empCode\" sortable/>\n      <el-table-column label=\"姓名\" align=\"left\" prop=\"empName\" show-overflow-tooltip sortable :sort-method=\"(a,b) => a.empName.localeCompare(b.empName)\">\n        <template slot-scope=\"scope\">\n          <el-link type=\"primary\" class=\"displayBlock text-ellipsis \"  v-text=\"scope.row.empName\" @click.stop=\"handleClickTableName(scope.row)\"></el-link>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"单位\" align=\"left\" prop=\"compName\"  show-overflow-tooltip sortable :sort-method=\"(a,b) => a.compName==null?0:a.compName.localeCompare(b.compName==null?0:b.compName)\"/>\n      <el-table-column label=\"科室\" align=\"left\" prop=\"deptName\"  show-overflow-tooltip sortable :sort-method=\"(a,b) => a.deptName==null?0:a.deptName.localeCompare(b.deptName==null?0:b.deptName)\"/>\n      <el-table-column label=\"人员分类\" align=\"center\" width=\"140\" prop=\"kindCode\" :formatter=\"kindCodeFormat\" sortable :sort-method=\"(a,b) => a.kindCode==null?0:a.kindCode.localeCompare(b.kindCode==null?0:b.kindCode)\"/>\n      <el-table-column label=\"人员类别\" align=\"center\" prop=\"staffsort\" width=\"140\" :formatter=\"staffsortFormat\" sortable :sort-method=\"(a,b) => a.staffsort==null?0:a.staffsort.localeCompare(b.staffsort==null?0:b.staffsort)\"/>\n      <el-table-column label=\"性别\" align=\"center\" prop=\"gender\" width=\"120\" :formatter=\"genderFormat\" sortable />\n      <el-table-column label=\"人员状态\" align=\"center\" prop=\"isPost\" width=\"120\" :formatter=\"isPostFormat\" sortable/>\n      <el-table-column label=\"来院时间\" align=\"center\" prop=\"inhospitalDate\" width=\"110\" sortable>\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.inhospitalDate, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 新增编辑 -->\n    <addEdit v-if=\"open\" :open=\"open\" :id=\"addEditId\" :proclnsIds=\"proclnsIds[0]\"  @success=\"successSubmit\" @cancel=\"cancel\"></addEdit>\n    <!-- 流转历史对话框 -->\n    <el-dialog title=\"流转历史\" :visible.sync=\"processOpen\" width=\"1200px\" append-to-body :close-on-click-modal=\"false\" custom-class=\"el-button--primary\">\n      <div v-loading=\"loading\" :style=\"'height:'+ height\">\n        <iframe :src=\"src\" frameborder=\"no\" style=\"width: 100%;height: 100%\" scrolling=\"auto\" />\n      </div>\n    </el-dialog>\n    <!--单位编码树结构-->\n    <el-dialog :visible.sync=\"deptSearchFormDialog\" :close-on-click-modal=\"false\" title=\"选择单位编码\" append-to-body\n               width=\"500px\" custom-class=\"el-button--primary\">\n      <div style=\"height: auto\">\n        <div class=\"head-container\">\n          <el-input\n            v-model=\"deptNameForm\"\n            placeholder=\"请输入编码名称\"\n            clearable\n            size=\"small\"\n            prefix-icon=\"el-icon-search\"\n            style=\"margin-bottom: 20px\"\n          />\n        </div>\n        <div class=\"head-container\">\n          <el-tree\n            :data=\"deptOptions\"\n            :props=\"defaultProps\"\n            :expand-on-click-node=\"false\"\n            :filter-node-method=\"filterNode\"\n            ref=\"treeForm\"\n            default-expand-all\n            @node-click=\"handleFormNodeClick\"\n          />\n        </div>\n      </div>\n    </el-dialog>\n    <!-- 导入对话框 -->\n    <el-dialog :title=\"upload.title\" :visible.sync=\"upload.open\" width=\"400px\" append-to-body>\n      <el-upload ref=\"upload\" :limit=\"1\" accept=\".xlsx, .xls\" :headers=\"upload.headers\"\n                 :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\n                 :disabled=\"upload.isUploading\" :on-progress=\"handleFileUploadProgress\" :on-success=\"handleFileSuccess\"\n                 :auto-upload=\"false\" drag>\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\"><em>点击上传</em></div>\n        <div class=\"el-upload__tip\" slot=\"tip\">\n          <a href=\"/templateFile/人员信息模板.xlsx\" download>下载模板</a>\n        </div>\n        <div class=\"el-upload__tip\" style=\"color:red\" slot=\"tip\">提示：仅允许导入“xls”或“xlsx”格式文件！</div>\n      </el-upload>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\n        <el-button @click=\"upload.open = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  listSysEmp,\n  getSysEmp,\n  delSysEmp,\n  addSysEmp,\n  updateSysEmp,\n  exportSysEmp\n} from \"@/api/basic/sysEmp\";\nimport { checkInfo2, treeselect, treeRoom } from \"@/api/until\";\nimport addEdit from \"./addEdit\";\nimport orgSearch from \"@/views/components/orgSearch\";\nimport { getToken } from \"@/utils/auth\";\n\nexport default {\n  // name: \"Empinfo\",\n  components: {\n    addEdit,\n    orgSearch\n  },\n  data() {\n    return {\n      tableHeight: \"auto\",\n      open: false,\n      rules: {},\n      addEditId: \"\",\n      // form10: {},\n      baseInfo: {},\n      //审核\n      form22: {},\n      shh: false,\n      shtitle2: \"\",\n      deptList: [],\n      deptOptions: undefined,\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      empDetailFlag: true,\n      deptNameForm: undefined,\n      deptSearchFormDialog: false,\n\n      empCode: [],\n      // // 选中数组\n      // ids3: [],\n      // ids4: [],\n      // ids5: [],\n      // ids6: [],\n      // ids7: [],\n      // 非单个禁用\n      single3: true,\n      single4: true,\n      single5: true,\n      single6: true,\n      single7: true,\n      sh: true,\n\n      // // 查询参数\n      // queryParams3: {\n      //   pageNum: 1,\n      //   pageSize: 10,\n      //   empCode: null\n      // },\n      // ids2: [],\n\n      // 查询参数\n      // queryParams2: {\n      //   pageNum: 1,\n      //   pageSize: 10,\n      //   empCode: null\n      // },\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      proclnsIds: [],\n      src: \"\",\n      height: \"500px;\",\n      // 流转历史对话框\n      processOpen: false,\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 人员基本信息表格数据\n      sysEmpList: [],\n      // 弹出层标题\n      // title: \"\",\n      // 是否显示弹出层\n      // open: false,\n      // 性别字典\n      genderOptions: [],\n\n      // 是否采购字典\n      isStockOptions: [],\n\n      // 人员状态字典\n      isPostOptions: [],\n      // 人员分类字典\n      kindCodeOptions: [],\n\n      // 是否停用字典\n      isStopOptions: [],\n      // 是否同步字典\n      isSynOptions: [],\n\n      // 人员类别字典\n      staffsortOptions: [],\n\n      // 保险支付字典\n      ispaymentOptions: [],\n\n      // 其他分类字典\n      personsOtherOptions: [],\n      // 导入参数\n      upload: {\n        // 是否显示弹出层（用户导入）\n        open: false,\n        // 弹出层标题（用户导入）\n        title: \"\",\n        // 是否禁用上传\n        isUploading: false,\n        // 是否更新已经存在的用户数据\n        updateSupport: 0,\n        // 设置上传的请求头部\n        headers: { Authorization: \"Bearer \" + getToken() },\n        // 上传的地址\n        url: process.env.VUE_APP_BASE_API + \"/basic/sysEmp/importData\"\n      },\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        compCode: null,\n        empName: null,\n        deptCode: null,\n        deptName: null\n      },\n      selectionRow: [],\n      lzState: \"2\",\n      defaultSort: {}\n    };\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    },\n    \"queryParams.compCode\": {\n      handler(val) {\n        this.getTreeDept(val);\n      },\n      deep: true,\n      immediate: true\n    },\n    // 根据名称筛选部门树\n    deptName(val) {\n      this.$refs.tree.filter(val);\n    },\n    // 根据名称筛选部门树\n    deptNameForm(val) {\n      this.$refs.treeForm.filter(val);\n    }\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"sys_user_sex\").then(response => {\n      this.genderOptions = response.data;\n    });\n\n    this.getDicts(\"hr_is_change\").then(response => {\n      this.isStockOptions = response.data;\n    });\n\n    this.getDicts(\"hr_personnel_state\").then(response => {\n      this.isPostOptions = response.data;\n    });\n    this.getDicts(\"hr_personnel_classification\").then(response => {\n      this.kindCodeOptions = response.data;\n    });\n    this.getDicts(\"hr_is_change\").then(response => {\n      this.isStopOptions = response.data;\n    });\n    this.getDicts(\"hr_is_change\").then(response => {\n      this.isSynOptions = response.data;\n    });\n\n    this.getDicts(\"hr_personnel_category\").then(response => {\n      this.staffsortOptions = response.data;\n    });\n\n    this.getDicts(\"hr_insurance_pay\").then(response => {\n      this.ispaymentOptions = response.data;\n    });\n\n    this.getDicts(\"hr_other_classification\").then(response => {\n      this.personsOtherOptions = response.data;\n    });\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  methods: {\n    handleSortChange(column, prop, order) {\n      this.queryParams.orderByColumn = column.prop;\n      this.queryParams.isAsc = column.order;\n      this.getList();\n    },\n    // 离职背景色\n    tableRowClassName({ row, rowIndex }) {\n      if (row.isPost == this.lzState) {\n        return \"warning-row\";\n      } else {\n        if (rowIndex % 2 === 1) {\n          return \"striped\";\n        } else {\n          return \"\";\n        }\n      }\n    },\n    // 点击姓名 弹出编辑\n    handleClickTableName(data) {\n      this.handleRowClick(data, false);\n      this.open = true;\n      this.addEditId = data.id;\n    },\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + this.$store.state.settings.tableHeight;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n    },\n    async validID(rule, value, callback) {\n      // 身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X\n      let reg = /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/;\n      if (reg.test(value)) {\n        await this.go(value.length);\n        callback();\n      } else {\n        callback(new Error(\"身份证号码不正确\"));\n        this.form.age = null;\n        this.form.birthday = null;\n        this.form.gender = null;\n      }\n    },\n    // 实现自动生成生日，性别，年龄\n    go(val) {\n      let iden = this.form.idNumber;\n      let sex = null;\n      let birth = null;\n      let myDate = new Date();\n      let month = myDate.getMonth() + 1;\n      let day = myDate.getDate();\n      let age = 0;\n\n      if (val === 18) {\n        age = myDate.getFullYear() - iden.substring(6, 10) - 1;\n        sex = iden.substring(16, 17);\n        birth =\n          iden.substring(6, 10) +\n          \"-\" +\n          iden.substring(10, 12) +\n          \"-\" +\n          iden.substring(12, 14);\n        if (\n          iden.substring(10, 12) < month ||\n          (iden.substring(10, 12) == month && iden.substring(12, 14) <= day)\n        )\n          age++;\n      }\n      if (val === 15) {\n        age = myDate.getFullYear() - iden.substring(6, 8) - 1901;\n        sex = iden.substring(13, 14);\n        birth =\n          \"19\" +\n          iden.substring(6, 8) +\n          \"-\" +\n          iden.substring(8, 10) +\n          \"-\" +\n          iden.substring(10, 12);\n        if (\n          iden.substring(8, 10) < month ||\n          (iden.substring(8, 10) == month && iden.substring(10, 12) <= day)\n        )\n          age++;\n      }\n\n      //0：男， 1：女 2：未知\n      if (sex % 2 === 0) sex = 1;\n      else sex = 0;\n      this.form.gender = sex;\n      this.form.age = age;\n      this.form.birthday = birth;\n    },\n    //  审核\n    submitForm22() {\n      let data = {\n        id: this.idd[0],\n        state: this.form22.state,\n        checkDate: this.form22.checkDate\n      };\n\n      checkInfo2(data).then(response => {\n        if (response.code == 200) {\n          this.msgSuccess(\"审核成功\");\n          this.shh = false;\n          this.resetSh();\n          this.getList();\n        } else {\n          this.msgError(response.msg);\n        }\n      });\n    },\n    resetSh() {\n      this.form22 = {\n        state: null,\n        checkDate: null\n      };\n      this.resetForm(\"form\");\n    },\n    cancelSh() {\n      this.shh = false;\n    },\n    //取消审核\n    confirms(row) {\n      this.idd = row.id || this.ids;\n      this.shh = true;\n      this.shtitle2 = \"审核\";\n    },\n    getName(res) {\n      this.form.deptName = res.deptRoomName;\n    },\n    //获取科室列表\n    getTreeDept(deptId) {\n      let data = { deptId: deptId };\n      treeRoom(data).then(response => {\n        if (response.code == 200) {\n          this.deptList = response.data;\n        } else {\n          this.msgError(response.msg);\n        }\n      });\n    },\n    // form表单中search节点单击事件\n    handleFormNodeClick(data) {\n      if (this.open == true) {\n        this.form.compCode = data.id;\n        this.form.compName = data.label;\n      } else {\n        this.queryParams.compCode = data.id;\n        this.queryParams.compName = data.label;\n      }\n      this.deptSearchFormDialog = false;\n    },\n    // search筛选节点\n    filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n\n    /** 查询人员基本信息列表 */\n    getList() {\n      this.loading = true;\n      listSysEmp(this.queryParams).then(response => {\n        if (response.code == 200) {\n          this.sysEmpList = response.rows;\n          this.total = response.total;\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    // 性别字典翻译\n    genderFormat(row, column) {\n      return this.selectDictLabel(this.genderOptions, row.gender);\n    },\n\n    // 是否采购字典翻译\n    isStockFormat(row, column) {\n      return this.selectDictLabel(this.isStockOptions, row.isStock);\n    },\n\n    // 人员状态字典翻译\n    isPostFormat(row, column) {\n      return this.selectDictLabel(this.isPostOptions, row.isPost);\n    },\n    // 人员分类字典翻译\n    kindCodeFormat(row, column) {\n      return this.selectDictLabel(this.kindCodeOptions, row.kindCode);\n    },\n    // 是否停用字典翻译\n    isStopFormat(row, column) {\n      return this.selectDictLabel(this.isStopOptions, row.isStop);\n    },\n    // 是否同步字典翻译\n    isSynFormat(row, column) {\n      return this.selectDictLabel(this.isSynOptions, row.isSyn);\n    },\n\n    // 人员类别字典翻译\n    staffsortFormat(row, column) {\n      return this.selectDictLabel(this.staffsortOptions, row.staffsort);\n    },\n\n    // 保险支付字典翻译\n    ispaymentFormat(row, column) {\n      return this.selectDictLabel(this.ispaymentOptions, row.ispayment);\n    },\n\n    // 其他分类字典翻译\n    personsOtherFormat(row, column) {\n      return this.selectDictLabel(this.personsOtherOptions, row.personsOther);\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n    },\n    successSubmit() {\n      this.open = false;\n      this.getList();\n    },\n    // // 表单重置\n    // reset() {\n    //   this.form = {\n    //     id: null,\n    //     compCode: null,\n    //     empCode: null,\n    //     empName: null,\n    //     formerName: null,\n    //     gender: null,\n    //     birthday: null,\n    //     idNumber: null,\n    //     homeAdd: null,\n    //     homePost: null,\n    //     photoUrl: null,\n    //     homeTown: null,\n    //     studySpecsort: null,\n    //     bankAccount: null,\n    //     postCode: null,\n    //     titleCode: null,\n    //     addMark: null,\n    //     spell: null,\n    //     isStock: null,\n    //     sysUserId: null,\n    //     empDesc: null,\n    //     nationName: null,\n    //     politicalName: null,\n    //     eduName: null,\n    //     deptCode: null,\n    //     isPost: null,\n    //     kindCode: null,\n    //     isStop: null,\n    //     isSyn: null,\n    //     isIntern: null,\n    //     isArmy: null,\n    //     bonusFactor: null,\n    //     deptType: null,\n    //     inhospitalDate: null,\n    //     job: null,\n    //     jobDate: null,\n    //     staffsort: null,\n    //     beenrolledinDate: null,\n    //     workdate: null,\n    //     duty: null,\n    //     dutydate: null,\n    //     techincClass: null,\n    //     technicClassDate: null,\n    //     civilserviceClass: null,\n    //     civilserviceClassDate: null,\n    //     santspecSort: null,\n    //     rootspecSort: null,\n    //     inputUser: null,\n    //     inputDate: null,\n    //     userDate: null,\n    //     deptGroup: null,\n    //     homeplace: null,\n    //     maritalStatus: null,\n    //     edu1: null,\n    //     graduateAcademy: null,\n    //     rank: null,\n    //     markUser: null,\n    //     userId: null,\n    //     jobTitle: null,\n    //     titleDate: null,\n    //     expert: null,\n    //     fileNo: null,\n    //     gl: null,\n    //     politicalTime: null,\n    //     titleLevel: null,\n    //     language: null,\n    //     languageLevel: null,\n    //     wyzhshshj: null,\n    //     ifReservecadres: null,\n    //     practice: null,\n    //     practiceData: null,\n    //     household: null,\n    //     householdType: null,\n    //     telephone: null,\n    //     email: null,\n    //     health: null,\n    //     overseaschinese: null,\n    //     titleGet: null,\n    //     titleTime: null,\n    //     ifAppoint: null,\n    //     appointDate: null,\n    //     ifAbroad: null,\n    //     dutyLevel: null,\n    //     rzhfsh: null,\n    //     jobtype: null,\n    //     joblevel: null,\n    //     joblevelname: null,\n    //     bank: null,\n    //     bangkCard: null,\n    //     jhcyDate: null,\n    //     jhAge: null,\n    //     jdAge: null,\n    //     inhospitalAge: null,\n    //     jdhospitalAge: null,\n    //     personsType: null,\n    //     ispayment: null,\n    //     staffHeight: null,\n    //     staffWeight: null,\n    //     bloodType: null,\n    //     jobdate: null,\n    //     isbraid: null,\n    //     titleKindCode: null,\n    //     deptName: null,\n    //     postName: null,\n    //     age: null,\n    //     branchCourts: null,\n    //     personsOther: null,\n    //     personsOther1: null,\n    //     staffid: null,\n    //     partyBranch: null,\n    //     source: null,\n    //     socialNumber: null,\n    //     salaryScale: null,\n    //     studyOverDate: null,\n    //     dateOfGradetitle: null,\n    //     dimissionType: null,\n    //     workid: null,\n    //     delFlag: null,\n    //     createBy: null,\n    //     createTime: null,\n    //     updateBy: null,\n    //     updateTime: null,\n    //     remark: null\n    //   };\n    //   this.resetForm(\"form\");\n    // },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.queryParams.compCode = null;\n      this.queryParams.compName = null;\n      this.queryParams.deptCode = null;\n      this.handleQuery();\n    },\n    handleRowClick(row, flag = true) {\n      let sysEmpListTable = this.$refs.sysEmpListTable;\n      if (flag) {\n        let findRow = this.selectionRow.find(c => c.id == row.id);\n        if (findRow) {\n          sysEmpListTable.toggleRowSelection(row, false);\n          return;\n        }\n      }\n      sysEmpListTable.clearSelection(); //清空列表的选中\n      sysEmpListTable.toggleRowSelection(row, true);\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      let sysEmpListTable = this.$refs.sysEmpListTable;\n      if (selection.length > 1) {\n        sysEmpListTable.clearSelection(); //清空列表的选中\n        sysEmpListTable.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      // 设置行高亮\n      sysEmpListTable.setCurrentRow(selection[0]);\n\n      if (selection.length == 1) {\n        selection[0].isChange == 1\n          ? (this.single = false)\n          : (this.single = false);\n      } else {\n        this.single = true;\n      }\n\n      this.empCode = selection.map(item => item.empCode);\n      this.ids = selection.map(item => item.id);\n      this.proclnsIds = selection.map(item => item.proclnsId);\n      this.multiple = selection.length !== 1;\n      this.sh = selection.length !== 1;\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.open = true;\n      this.addEditId = \"\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.open = true;\n      this.addEditId = this.ids[0];\n      // getsysEmp(id).then(response => {\n      //   console.log(response);\n      //   this.form = response.data;\n      //   this.title = \"修改人员基本信息\";\n      // });\n    },\n    /** 流转历史操作 */\n    handleExamine() {\n      this.src =\n        `${this.processUrl}/api/wf/processHistoric?procInsId=${this.proclnsIds[0]}`;\n    },\n    /** 流转历史按钮操作 */\n    processExamine() {\n      if (this.proclnsIds[0] == null || !this.proclnsIds[0]) {\n        this.msgError(\"没有流转历史数据！\");\n      } else {\n        this.handleExamine();\n        this.processOpen = true;\n      }\n    },\n    /** 提交按钮 */\n    // submitForm() {\n    //   this.$refs[\"form\"].validate(valid => {\n    //     console.log(this.form);\n    //     if (valid) {\n    //       if (this.form.id != null) {\n    //         updateEmpinfo(this.form).then(response => {\n    //           this.msgSuccess(\"修改成功\");\n    //           this.open = false;\n    //           this.getList();\n    //         });\n    //       } else {\n    //         addEmpinfo(this.form).then(response => {\n    //           this.msgSuccess(\"新增成功\");\n    //           this.open = false;\n    //           this.getList();\n    //         });\n    //       }\n    //     }\n    //   });\n    // },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$confirm(\n        '是否确认删除人员基本信息编号为\"' + ids + '\"的数据项?',\n        \"警告\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      )\n        .then(function() {\n          return delSysEmp(ids);\n        })\n        .then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        })\n        .catch(() => {});\n    },\n    // /** 导出按钮操作*/\n    // handleExport() {\n    //   const queryParams = this.queryParams;\n    //   this.$confirm('是否确认导出所有人员基本信息数据项?', \"警告\", {\n    //     confirmButtonText: \"确定\",\n    //     cancelButtonText: \"取消\",\n    //     type: \"warning\"\n    //   }).then(() => {\n    //     this.exportLoading = true;\n    //     return exportEmpinfo(queryParams);\n    //   }).then(response => {\n    //     this.download(response.msg);\n    //     this.exportLoading = false;\n    //   }).catch(() => {\n    //   });\n    // },\n\n    /** 导入按钮操作 */\n    handleImport() {\n      this.upload.title = \"导入\";\n      this.upload.open = true;\n    },\n    /** 下载模板操作 */\n    importTemplate() {\n      importTemplate().then(response => {\n        if (response.code == 200) {\n          this.download(response.msg);\n        } else {\n          this.msgError(response.msg);\n        }\n      });\n    },\n    /** 文件上传中处理 */\n    handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    /** 文件上传成功处理 */\n    handleFileSuccess(response, file, fileList) {\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      this.$alert(response.msg, \"导入结果\", { dangerouslyUseHTMLString: true });\n      this.getList();\n    },\n    /** 提交上传文件 */\n    submitFileForm() {\n      this.$refs.upload.submit();\n    }\n  }\n};\n</script>\n<style scoped>\n.common {\n  width: 210px;\n}\n</style>\n"]}]}