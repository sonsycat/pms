{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\workload\\toll\\select.vue?vue&type=style&index=0&id=1996d0d2&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\workload\\toll\\select.vue","mtime":1693362206887},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgbWF4LWhlaWdodDogODYlOwogIG92ZXJmbG93OiBoaWRkZW47CgogIC5lbC1kaWFsb2dfX2JvZHkgewogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMDBweCk7CiAgICBvdmVyZmxvdzogYXV0bzsKICB9Cn0K"},{"version":3,"sources":["select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"select.vue","sourceRoot":"src/views/workload/toll","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"50%\" custom-class=\"el-button--primary\" append-to-body\n             :close-on-click-modal=\"false\" @close=\"handleDialogClose\"\n  >\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" :inline=\"true\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"24\">\n          <el-form-item label=\"收费项目:\" prop=\"hisName\">\n            <el-input v-model=\"form.hisName\" placeholder=\"请输入\"/>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n            <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-card>\n            <el-col :span=\"12\">\n              <span style=\"font-size:16px\">待选收费项目</span>\n            </el-col>\n            <el-table\n              style=\"margin-top:10px\"\n              v-loading=\"indexListLoading\"\n              :data=\"roleList\"\n              height=\"500px\"\n              :row-class-name=\"tableRowClassName\"\n              @select=\"selectionProject\"\n              @row-click=\"rowClickWaitClass\"\n            >\n              <el-table-column label=\"收费项目\" align=\"left\" prop=\"roleName\" show-overflow-tooltip/>\n            </el-table>\n          </el-card>\n        </el-col>\n        <el-col :span=\"12\" class=\"mb10\">\n          <el-card>\n            <el-col :span=\"12\">\n              <span style=\"font-size:16px\">已选收费项目</span>\n            </el-col>\n            <el-table\n              style=\"margin-top:10px\"\n              v-loading=\"roleSelectedListLoading\"\n              :data=\"roleSelectedList\"\n              height=\"500px\"\n              :row-class-name=\"tableRowClassName\"\n              @row-click=\"rowClickHasClass\"\n              @select=\"selectionProjectDept\"\n            >\n              <el-table-column label=\"收费项目\" align=\"left\" prop=\"roleName\" show-overflow-tooltip/>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { listAll, save } from '@/api/workload/toll'\n\nexport default {\n  name: 'select',\n  props: {\n\n    openSelect: {\n      type: Boolean,\n      default: false\n    },\n    projectCode: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      title: '设置收费项目',\n      openDialog: this.openSelect,\n      roleSelectedListLoading: false,\n      indexListLoading: false,\n      // 表单参数\n      form: { hisName: '' },\n      // 表单校验\n      rules: {},\n      //待选角色\n      queryParamsIndex: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        compCode: this.$store.state.user.userInfo.deptId,\n        roleKey: null,\n        roleName: null\n      },\n      //已选角色\n      queryParamsIndexSelected: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        compCode: this.$store.state.user.userInfo.deptId,\n        roleKey: null,\n        roleName: null,\n        setCode: null\n      },\n      // 待选角色数据\n      roleList: [],\n      // 已选角色数据\n      roleSelectedList: []\n    }\n  },\n  created() {\n    this.getSelectedRoleList()\n    this.getList(this.form.hisName)\n\n  },\n  mounted() {\n  },\n  methods: {\n    resetQuery() {\n      this.form.hisName = ''\n      this.handleQuery()\n    },\n    handleQuery() {\n      let exitHisCode = this.roleSelectedList.map(item => {\n        return item.roleKey\n      })\n      this.getList(this.form.hisName, exitHisCode)\n    },\n    tableRowClassName({ row, rowIndex }) {\n      row.index = rowIndex\n    },\n    // 待选科室多选框选中数据\n    selectionProject(selection, row) {\n      this.rowClickWaitClass(selection[0])\n    },\n    //待选物资类型 点击行\n    rowClickWaitClass(selection) {\n      let {\n        roleKey,\n        roleName,\n        indexName\n      } = selection\n      this.roleSelectedList.push({\n        roleKey,\n        roleName,\n        indexName\n      })\n      this.roleList.splice(selection.index, 1)\n    },\n    // 已选科室多选框选中数据\n    selectionProjectDept(selection, row) {\n      this.rowClickHasClass(selection[0])\n    },\n    // 已经选择点击行\n    rowClickHasClass(selection) {\n      let {\n        roleKey,\n        roleName,\n        indexName\n      } = selection\n      this.roleList.push({\n        roleKey,\n        roleName,\n        indexName\n      })\n      this.roleSelectedList.splice(selection.index, 1)\n    },\n    /** 查询角色列表 */\n    getList(hisName, existCode) {\n      listAll({ projectCode: this.projectCode, type: '2', hisName: hisName, existCode: existCode }).then(response => {\n        console.log(response.data)\n        this.roleList = response.data.map(item => {\n          item.roleName = item.hisName\n          item.roleKey = item.hisCode\n          return item\n        })\n      })\n    },\n    //已选角色列表\n    getSelectedRoleList(hisName) {\n      listAll({ projectCode: this.projectCode, type: '1' }).then(response => {\n        this.roleSelectedList = response.data.map(item => {\n          item.roleName = item.hisName\n          item.roleKey = item.hisCode\n          return item\n        })\n      })\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit('cancelSelect', false)\n    },\n    // 取消\n    cancel() {\n      this.$emit('cancelSelect', false)\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.roleSelectedList.forEach(item => {\n        item.hisCode = item.roleKey\n        item.hisName = item.roleName\n        return item\n      })\n      let data = {\n        projectCode: this.projectCode,\n        list: this.roleSelectedList\n      }\n      const saveLoading = this.saveLoading()\n      save(data).then(response => {\n        if (response.code === 200) {\n          this.msgSuccess('设置成功')\n          this.$emit('cancelSelect', false)\n          saveLoading.close()\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog {\n  max-height: 86%;\n  overflow: hidden;\n\n  .el-dialog__body {\n    height: calc(100% - 100px);\n    overflow: auto;\n  }\n}\n</style>\n"]}]}