{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\apportionment\\project\\addEdit.vue?vue&type=style&index=0&id=180dfdd2&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\apportionment\\project\\addEdit.vue","mtime":1693362204148},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCAuZWwtZGlhbG9nIHsKICBvdmVyZmxvdzogaGlkZGVuOwogIG1pbi1oZWlnaHQ6MjAlOwogIC5lbC1kaWFsb2dfX2JvZHkgewogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMDBweCk7CiAgICBvdmVyZmxvdzogYXV0bzsKICB9Cn0K"},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/apportionment/project","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"30%\"  custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n      <el-row>\n        <el-form-item label=\"方案编码\" prop=\"projectCode\">\n          <el-input v-model=\"form.projectCode\" placeholder=\"请输入方案编码\"  maxlength=\"50\" show-word-limit  />\n        </el-form-item>\n        <el-form-item label=\"方案名称\" prop=\"projectName\">\n          <el-input v-model=\"form.projectName\" placeholder=\"请输入方案名称\"  maxlength=\"50\" show-word-limit @blur=\"getPym\"  />\n        </el-form-item>\n        <el-form-item label=\"当前年月\" prop=\"nowDate\" >\n          <el-date-picker clearable size=\"small\" class=\"w100\" disabled\n                          v-model=\"form.nowDate\"\n                          type=\"month\"\n                          value-format=\"yyyy-MM\"\n                          placeholder=\"选择当前年月\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"拼音码\" prop=\"spell\" >\n          <el-input v-model=\"form.spell\"  disabled maxlength=\"50\" show-word-limit  :placeholder=\"pym\" />\n        </el-form-item>\n        <el-form-item label=\"方案类型\" prop=\"projectType\" >\n          <el-select v-model=\"form.projectType\" class=\"w100\" placeholder=\"请选择方案类型\" disabled>\n            <el-option\n              v-for=\"dict in projectTypeOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm(true)\" v-show=\"!id\" >保存并继续添加</el-button>\n      <el-button type=\"primary\" @click=\"submitForm(false)\" >确 定</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import { validEmail } from'@/utils/validate'\n  import { listProject, getProject, delProject, addProject, updateProject, exportProject } from \"@/api/apportionment/project\";\n  import pinyin from \"js-pinyin\";\n  import {getYear} from \"@/utils/date\";\n  import { getCostApport } from \"@/api/system/dict/data\"\n\n  export default {\n    name: \"addEdit\",\n    props: {\n      open: {\n        type: Boolean,\n        default: false\n      },\n      id: {\n        type: [String, Number],\n        default: \"\"\n      }\n    },\n    watch: {\n      id: {\n        handler(val) {\n          this.reset();\n          if (val) {\n            this.id = val;\n            this.title = \"分摊方案管理-编辑\";\n            this.getDetailInfo();\n          } else {\n            this.id = \"\";\n            this.pym = \"自动生成\";\n            this.form.projectType ='2';\n            this.title = \"分摊方案管理-新增\";\n            this.getCostApport();\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      open: {\n        handler(val) {\n          this.openDialog = val;\n        },\n        deep: true\n      }\n    },\n    components: {\n      getCostApport\n    },\n    data() {\n      return {\n        title: \"分摊方案管理-新增\",\n        openDialog: this.open,\n        pym: \"\",\n        // 表单参数\n        form: {},\n        projectTypeOptions: [],\n        // 表单校验\n        rules: {\n          projectCode: [\n            { required: true, message: \"方案编码不能为空\", trigger: \"blur\" }\n          ],\n          projectName: [\n            { required: true, message: \"方案名称不能为空\", trigger: \"blur\" }\n          ],\n          nowDate: [\n            { required: true, message: \"当前年月不能为空\", trigger: \"blur\" }\n          ],\n          projectType:[\n            { required: true, message: \"方案类型不能为空\", trigger: \"blur\" }\n          ],\n        }\n      };\n    },\n    created() {\n      this.getList();\n      this.getDicts(\"cost_fa_type\").then(response => {\n        this.projectTypeOptions = response.data;\n      });\n    },\n    methods: {\n      getDetailInfo() {\n        getProject(this.id).then(response => {\n          console.log(response);\n          this.form = response.data;\n        });\n      },\n      getCostApport() {\n        getCostApport(this.$store.state.user.accountInfo.deptId).then(response => {\n          if (response.data) {\n            this.form.nowDate = response.data;\n          } else {\n            this.form.nowDate = getYear();\n          }\n        });\n      },\n      // 获取拼音码\n      getPym() {\n        // 全是字母的情况下,拼音码等于所有字母\n        if (/^[a-zA-Z]*$/.test(this.form.projectName)) {\n          this.form.spell = this.form.projectName;\n          return;\n        }\n        // 有汉字的情况下,转为首字母\n        let fullName = pinyin.getCamelChars(this.form.projectName).toUpperCase();\n        let pym = \"\";\n        for (var i = 0; i < fullName.length; i++) {\n          var c = fullName.charAt(i);\n          if (/^[A-Z]+$/.test(c)) {\n            pym += c;\n          }\n        }\n        this.form.spell = pym;\n      },\n      /** 查询分摊方案管理列表 */\n      getList() {\n        this.loading = true;\n        listProject(this.queryParams).then(response => {\n          this.projectList = response.rows;\n          this.total = response.total;\n          this.loading = false;\n        });\n      },\n      // 方案类型字典翻译\n      projectTypeFormat(row, column) {\n        return this.selectDictLabel(this.projectTypeOptions, row.projectType);\n      },\n      // 弹框关闭\n      handleDialogClose() {\n        this.$emit(\"cancel\", false);\n      },\n      // 取消\n      cancel() {\n        this.$emit(\"cancel\", false);\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          id: null,\n          compCode: this.$store.state.user.accountInfo.deptId,\n          accountCode: null,\n          projectCode: null,\n          projectName: null,\n          nowDate: null,\n          spell: null,\n          projectType: null\n        };\n        this.resetForm(\"form\");\n      },\n      /** 提交按钮 */\n      submitForm(type) {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            let saveLoading = this.saveLoading();\n            if (this.form.id != null) {\n              updateProject(this.form).then(response => {\n                this.msgSuccess(\"修改成功\");\n                this.$emit(\"success\", false);\n                saveLoading.close();\n              });\n            } else {\n              addProject(this.form).then(response => {\n                if(type){\n                  this.msgSuccess(\"保存成功\");\n                  this.reset()\n                }else{\n                  this.msgSuccess(\"新增成功\");\n                  this.$emit(\"success\", false);\n                }\n                saveLoading.close();\n              });\n            }\n          }\n        });\n      },\n    }};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    overflow: hidden;\n    min-height:20%;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}