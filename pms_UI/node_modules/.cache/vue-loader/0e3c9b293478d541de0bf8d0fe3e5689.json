{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\components\\FileUpload\\index.vue?vue&type=style&index=0&id=211f81e0&scoped=true&lang=scss&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\components\\FileUpload\\index.vue","mtime":1682043102610},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudXBsb2FkLWZpbGUtdXBsb2FkZXIgew0KICBtYXJnaW4tYm90dG9tOiA1cHg7DQp9DQoudXBsb2FkLWZpbGUtbGlzdCAuZWwtdXBsb2FkLWxpc3RfX2l0ZW0gew0KICBib3JkZXI6IDFweCBzb2xpZCAjZTRlN2VkOw0KICBsaW5lLWhlaWdodDogMjsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KLnVwbG9hZC1maWxlLWxpc3QgLmVsZS11cGxvYWQtbGlzdF9faXRlbS1jb250ZW50IHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBjb2xvcjogaW5oZXJpdDsNCn0NCi5lbGUtdXBsb2FkLWxpc3RfX2l0ZW0tY29udGVudC1hY3Rpb24gLmVsLWxpbmsgew0KICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/FileUpload","sourcesContent":["<template>\r\n  <div class=\"upload-file\">\r\n    <el-upload\r\n      v-if=\"editor\"\r\n      :action=\"uploadFileUrl\"\r\n      :before-upload=\"handleBeforeUpload\"\r\n      :file-list=\"fileList\"\r\n      :limit=\"Number(limit)\"\r\n      :on-error=\"handleUploadError\"\r\n      :on-exceed=\"handleExceed\"\r\n      :on-success=\"handleUploadSuccess\"\r\n      :show-file-list=\"false\"\r\n      :headers=\"headers\"\r\n      class=\"upload-file-uploader\"\r\n      ref=\"upload\"\r\n    >\r\n      <!-- 上传按钮 -->\r\n      <el-button size=\"mini\" type=\"primary\" v-if=\"!iconUpload\">选取文件</el-button>\r\n      <i class=\"el-icon-upload2\" v-if=\"iconUpload\"></i>\r\n      <!-- 上传提示 -->\r\n      <div class=\"el-upload__tip\" slot=\"tip\" v-if=\"showTip&&!iconUpload\">\r\n        请上传\r\n        <template v-if=\"fileSize\"> 大小不超过 <b style=\"color: #f56c6c\">{{ fileSize }}MB</b> </template>\r\n        <template v-if=\"fileType\"> 格式为 <b style=\"color: #f56c6c\">{{ fileType.join(\"/\") }}</b> </template>\r\n        的文件\r\n      </div>\r\n    </el-upload>\r\n\r\n    <!-- 文件列表 -->\r\n    <transition-group class=\"upload-file-list el-upload-list el-upload-list--text\" name=\"el-fade-in-linear\" tag=\"ul\">\r\n      <li :key=\"file.uid\" class=\"el-upload-list__item ele-upload-list__item-content\" v-for=\"(file, index) in list\">\r\n        <el-link :href=\"file.url\" :underline=\"false\" target=\"_blank\">\r\n          <span class=\"el-icon-document\"> {{ getFileName(file.name) }} </span>\r\n        </el-link>\r\n        <div class=\"ele-upload-list__item-content-action\" v-if=\"editor\">\r\n          <el-link :underline=\"false\" @click=\"handleDelete(index)\" type=\"danger\">删除</el-link>\r\n        </div>\r\n      </li>\r\n    </transition-group>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getToken } from \"@/utils/auth\";\r\n\r\nexport default {\r\n  props: {\r\n    // 值\r\n    value: [String, Object, Array],\r\n    // 大小限制(MB)\r\n    fileSize: {\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    // 文件类型, 例如['png', 'jpg', 'jpeg']\r\n    fileType: {\r\n      type: Array,\r\n      default: () => [\"doc\", \"xls\", \"ppt\", \"txt\", \"pdf\",\"png\", \"jpg\", \"jpeg\"]\r\n    },\r\n    // 是否显示提示\r\n    isShowTip: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 文件个数\r\n    limit: {\r\n      type: [String, Number],\r\n      default: 1\r\n    },\r\n    //可以编辑 显示选取文件按钮 和图片删除操作\r\n    editor: {\r\n      ype: Boolean,\r\n      default: true\r\n    },\r\n    iconUpload: {\r\n      ype: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      uploadFileUrl: process.env.VUE_APP_BASE_API + \"/common/upload\", // 上传的图片服务器地址\r\n      headers: {\r\n        Authorization: \"Bearer \" + getToken()\r\n      },\r\n      fileList: []\r\n    };\r\n  },\r\n  computed: {\r\n    // 是否显示提示\r\n    showTip() {\r\n      return this.isShowTip && (this.fileType || this.fileSize);\r\n    },\r\n    // 列表\r\n    list() {\r\n      let temp = 1;\r\n      if (this.value) {\r\n        // 首先将值转为数组\r\n        const list = Array.isArray(this.value) ? this.value : [this.value];\r\n        // 然后将数组转为对象数组\r\n        return list.map(item => {\r\n          if (typeof item === \"string\") {\r\n            item = { name: item, url: item };\r\n          }\r\n          item.uid = item.uid || new Date().getTime() + temp++;\r\n          return item;\r\n        });\r\n      } else {\r\n        this.fileList = [];\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 上传前校检格式和大小\r\n    handleBeforeUpload(file) {\r\n      // 校检文件类型\r\n      if (this.fileType) {\r\n        let fileExtension = \"\";\r\n        if (file.name.lastIndexOf(\".\") > -1) {\r\n          fileExtension = file.name.slice(file.name.lastIndexOf(\".\") + 1);\r\n        }\r\n        const isTypeOk = this.fileType.some(type => {\r\n          if (file.type.indexOf(type) > -1) return true;\r\n          if (fileExtension && fileExtension.indexOf(type) > -1) return true;\r\n          return false;\r\n        });\r\n        if (!isTypeOk) {\r\n          this.$message.error(\r\n            `文件格式不正确, 请上传${this.fileType.join(\"/\")}格式文件!`\r\n          );\r\n          return false;\r\n        }\r\n      }\r\n      // 校检文件大小\r\n      if (this.fileSize) {\r\n        const isLt = file.size / 1024 / 1024 < this.fileSize;\r\n        if (!isLt) {\r\n          this.$message.error(`上传文件大小不能超过 ${this.fileSize} MB!`);\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    // 文件个数超出\r\n    handleExceed() {\r\n      this.$message.error(`只允许上传单个文件`);\r\n    },\r\n    // 上传失败\r\n    handleUploadError(err) {\r\n      this.$message.error(\"上传失败, 请重试\");\r\n    },\r\n    // 上传成功回调\r\n    handleUploadSuccess(res, file) {\r\n      this.$message.success(\"上传成功\");\r\n      this.$emit(\"input\", res.url);\r\n    },\r\n    // 删除文件\r\n    handleDelete(index) {\r\n      this.fileList.splice(index, 1);\r\n      this.$emit(\"input\", \"\");\r\n    },\r\n    // 获取文件名称\r\n    getFileName(name) {\r\n      if (name.lastIndexOf(\"/\") > -1) {\r\n        return name.slice(name.lastIndexOf(\"/\") + 1).toLowerCase();\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fileList = this.list;\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.upload-file-uploader {\r\n  margin-bottom: 5px;\r\n}\r\n.upload-file-list .el-upload-list__item {\r\n  border: 1px solid #e4e7ed;\r\n  line-height: 2;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n}\r\n.upload-file-list .ele-upload-list__item-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: inherit;\r\n}\r\n.ele-upload-list__item-content-action .el-link {\r\n  margin-right: 10px;\r\n}\r\n</style>"]}]}