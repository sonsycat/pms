{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\commission\\sort\\addEdit.vue?vue&type=style&index=0&id=33b2b558&lang=scss&scoped=true&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\commission\\sort\\addEdit.vue","mtime":1682043106791},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC5lbC1kaWFsb2cgewogIGhlaWdodDogMjIycHghaW1wb3J0YW50OwogIG92ZXJmbG93OiBoaWRkZW47CiAgLmVsLWRpYWxvZ19fYm9keSB7CiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwMHB4KSFpbXBvcnRhbnQ7CiAgICBvdmVyZmxvdzogYXV0bzsKICB9Cn0K"},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/commission/sort","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog2\" width=\"40%\" custom-class=\"el-button--primary\"\n             append-to-body\n             :close-on-click-modal=\"false\" @close=\"handleDialogClose\"\n  >\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n      <el-form-item label=\"类别编码\" prop=\"sortCode\">\n        <el-input v-model=\"form.sortCode\" placeholder=\"系统自动生成\" maxlength=\"50\" :disabled=\"true\" show-word-limit/>\n      </el-form-item>\n      <el-form-item label=\"类别名称\" prop=\"sortName\">\n        <el-input v-model=\"form.sortName\" placeholder=\"请输入类别名称\" maxlength=\"50\" show-word-limit/>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saveLoading\">确 定</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { addSort, getSort, listSort, updateSort } from '@/api/commission/sort'\n\nexport default {\n  name: 'addEdit',\n  props: {\n    open2: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: ''\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset()\n        if (val) {\n          this.id = val\n          this.title = '独立核算提成比类别管理-编辑'\n          this.getDetailInfo()\n        } else {\n          this.id = ''\n          this.title = '独立核算提成比类别管理-新增'\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    open2: {\n      handler(val) {\n        this.openDialog2 = val\n      },\n      deep: true\n    }\n  },\n  components: {},\n  data() {\n    return {\n      title: '独立核算提成比类别管理-新增',\n      openDialog2: this.open2,\n      saveLoading: false,\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        sortName:[\n          { required: true, message: \"类别名称\", trigger: [\"blur\",\"change\"] }\n        ],\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getDetailInfo() {\n      getSort(this.id).then(response => {\n        console.log(response)\n        this.form = response.data\n      })\n    },\n    /** 查询独立核算提成比类别列表 */\n    getList() {\n      this.loading = true\n      listSort(this.queryParams).then(response => {\n        this.sortList = response.rows\n        this.total = response.total\n        this.loading = false\n      })\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit('cancel', false)\n    },\n    // 取消\n    cancel() {\n      this.$emit('cancel', false)\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      }\n      this.resetForm('form')\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.saveLoading = true\n          if (this.form.id != null) {\n            updateSort(this.form).then(response => {\n              this.msgSuccess('修改成功')\n              this.$emit('success', false)\n              this.saveLoading = false\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          } else {\n            addSort(this.form).then(response => {\n              this.msgSuccess('新增成功')\n              this.$emit('success', false)\n              this.saveLoading = false\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog {\n  height: 222px!important;\n  overflow: hidden;\n  .el-dialog__body {\n    height: calc(100% - 100px)!important;\n    overflow: auto;\n  }\n}\n</style>\n"]}]}