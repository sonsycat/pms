{"remainingRequest":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\componentExample\\treeSelect\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\componentExample\\treeSelect\\index.vue","mtime":1693362204000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"index.vue","sourceRoot":"src/views/componentExample/treeSelect","sourcesContent":["<template>\n  <div style=\"margin-left: 20px;margin-top: 20px;margin-right: 20px\">\n    <el-menu :default-active=\"activeIndex\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n      <el-menu-item index=\"1\">预览</el-menu-item>\n      <el-menu-item index=\"2\">查看源代码</el-menu-item>\n    </el-menu>\n\n    <div v-show=\"activeIndex==1\">\n      <div class=\"app-container\" ref=\"preview\">\n        <el-row :gutter=\"20\">\n          <!--部门数据-->\n          <el-col :span=\"6\" :xs=\"24\">\n            <h3>search机构树</h3>\n            <div class=\"head-container\">\n              <el-input\n                v-model=\"deptName\"\n                placeholder=\"请输入部门名称\"\n                clearable\n                size=\"small\"\n                prefix-icon=\"el-icon-search\"\n                style=\"margin-bottom: 20px\"\n              />\n            </div>\n            <div style=\"height: 600px;overflow-y: scroll\">\n              <el-tree\n                :data=\"deptOptions\"\n                :props=\"defaultProps\"\n                :expand-on-click-node=\"false\"\n                :filter-node-method=\"filterNode\"\n                ref=\"tree\"\n                :load=\"getTreeSelect\"\n                lazy\n                @node-click=\"handleNodeClick\"\n              />\n            </div>\n          </el-col>\n          <el-col :span=\"18\" :xs=\"24\">\n            <h3>下拉机构树</h3>\n            <div class=\"head-container\">\n              <treeSelect v-model=\"orgCode\" :options=\"orgOptions\" placeholder=\"请选择机构\"\n                          :load-options=\"loadDepts\"\n                          style=\"width:500px;\"/>\n            </div>\n            <div class=\"head-container\">\n              <h3>弹出机构树</h3>\n              <el-input v-on:click.native=\"deptSearchDialog=true\" placeholder=\"请选择机构\" v-model=\"queryShowDeptName\"\n                        style=\"width:250px;\" disabled/>\n              <el-input type=\"text\" style=\"display:none\" v-model=\"deptId\"/>\n              <!-- 所属机构search-dialog -->\n              <el-theme-dialog :visible.sync=\"deptSearchDialog\" :close-on-click-modal=\"false\" title=\"选择机构\" append-to-body\n                         width=\"500px\">\n                <div style=\"height: 400px;overflow-y: scroll\">\n                  <div class=\"head-container\">\n                    <el-input\n                      v-model=\"deptNameDialog\"\n                      placeholder=\"请输入机构名称\"\n                      clearable\n                      size=\"small\"\n                      prefix-icon=\"el-icon-search\"\n                      style=\"margin-bottom: 20px\"\n                    />\n                  </div>\n                  <div class=\"head-container\">\n                    <el-tree\n                      :data=\"deptOptions\"\n                      :props=\"defaultProps\"\n                      :expand-on-click-node=\"false\"\n                      :filter-node-method=\"filterNode\"\n                      ref=\"treeDialog\"\n                      :load=\"getTreeSelect\"\n                      lazy\n                      @node-click=\"handleDialogNodeClick\"\n                    />\n                  </div>\n                </div>\n              </el-theme-dialog>\n            </div>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n    <div v-show=\"activeIndex==2\">\n      <pre style=\"background-color: #dadada\">{{code}}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { treeselect } from '@/api/system/dept'\n  import TreeSelect from '@riophae/vue-treeselect'\n  import '@riophae/vue-treeselect/dist/vue-treeselect.css'\n  import { LOAD_CHILDREN_OPTIONS } from '@riophae/vue-treeselect'\n\n  export default {\n    name: 'TreeSelectDemo',\n    components: { TreeSelect },\n    data() {\n      return {\n        // 导航栏切换index\n        activeIndex: '1',\n        // 查看源代码code\n        code: '',\n        // 部门名称\n        deptName: undefined,\n        // 部门树选项\n        deptOptions: undefined,\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        },\n        // 下拉树code\n        orgCode: null,\n        // 部门树选项\n        orgOptions: [],\n        // 机构id\n        deptId: null,\n        // 用于显示查询的机构名称\n        queryShowDeptName: '',\n        // 表格上方机构查询dialog\n        deptSearchDialog: false,\n        // 部门名称\n        deptNameDialog: undefined\n      }\n    },\n    watch: {\n      // 根据名称筛选部门树\n      deptName(val) {\n        this.$refs.tree.filter(val)\n      },\n      // 根据名称筛选部门树\n      deptNameDialog(val) {\n        this.$refs.treeDialog.filter(val)\n      }\n    },\n    created() {\n      // 初始化源代码\n      this.initCode()\n      // 初始化弹窗内部门数据\n      this.getDepts()\n    },\n    methods: {\n      // 获取左侧部门数据\n      getTreeSelect(node, resolve) {\n        let pid = ''\n        if (node.level == 0) {\n          pid = ''\n        } else {\n          pid = node.data.id\n        }\n        setTimeout(() => {\n          treeselect({ parentId: pid }).then(response => {\n            if (resolve) {\n              resolve(response.data)\n            } else {\n              this.deptOptions = response.data\n            }\n          })\n        }, 100)\n      },\n      // 初始化弹窗内部门数据\n      getDepts() {\n        treeselect({ parentId: \"0\" }).then(res => {\n          this.orgOptions = res.data.map(function(obj) {\n            if (obj.hasChildren) {\n              obj.children = null\n            }\n            return obj\n          })\n        })\n      },\n      // 获取弹窗内部门数据\n      loadDepts({ action, parentNode, callback }) {\n        if (action === LOAD_CHILDREN_OPTIONS) {\n          treeselect({ parentId: parentNode.id }).then(res => {\n            parentNode.children = res.data.map(function(obj) {\n              if (obj.hasChildren) {\n                obj.children = null\n              }\n              return obj\n            })\n            setTimeout(() => {\n              callback()\n            }, 200)\n          })\n        }\n      },\n      // search筛选节点\n      filterNode(value, data) {\n        if (!value) return true\n        return data.label.indexOf(value) !== -1\n      },\n      // search节点单击事件\n      handleNodeClick(data) {\n        this.$message({\n          showClose: true,\n          message: 'search树节点点击事件'\n        })\n      },\n      // dialog中search节点单击事件\n      handleDialogNodeClick(data) {\n        this.deptId = data.id\n        this.queryShowDeptName = data.label\n        this.deptSearchDialog = false\n      },\n      // 导航切换\n      handleSelect(key, keyPath) {\n        this.activeIndex = key\n      },\n      // 初始化源代码\n      initCode() {\n        this.code =\n          '<template>\\n' +\n          '  <div style=\"margin-left: 20px;margin-top: 20px;margin-right: 20px\">\\n' +\n          '    <div class=\"app-container\" ref=\"preview\">\\n' +\n          '      <el-row :gutter=\"20\">\\n' +\n          '        <!--部门数据-->\\n' +\n          '        <el-col :span=\"6\" :xs=\"24\">\\n' +\n          '          <h3>search机构树</h3>\\n' +\n          '          <div class=\"head-container\">\\n' +\n          '            <el-input\\n' +\n          '              v-model=\"deptName\"\\n' +\n          '              placeholder=\"请输入部门名称\"\\n' +\n          '              clearable\\n' +\n          '              size=\"small\"\\n' +\n          '              prefix-icon=\"el-icon-search\"\\n' +\n          '              style=\"margin-bottom: 20px\"\\n' +\n          '            />\\n' +\n          '          </div>\\n' +\n          '          <div style=\"height: 600px;overflow-y: scroll\">\\n' +\n          '            <el-tree\\n' +\n          '              :data=\"deptOptions\"\\n' +\n          '              :props=\"defaultProps\"\\n' +\n          '              :expand-on-click-node=\"false\"\\n' +\n          '              :filter-node-method=\"filterNode\"\\n' +\n          '              ref=\"tree\"\\n' +\n          '              :load=\"getTreeSelect\"\\n' +\n          '              lazy\\n' +\n          '              @node-click=\"handleNodeClick\"\\n' +\n          '            />\\n' +\n          '          </div>\\n' +\n          '        </el-col>\\n' +\n          '        <el-col :span=\"18\" :xs=\"24\">\\n' +\n          '          <h3>下拉机构树</h3>\\n' +\n          '          <div class=\"head-container\">\\n' +\n          '            <treeSelect v-model=\"orgCode\" :options=\"orgOptions\" placeholder=\"请选择机构\"\\n' +\n          '                        :load-options=\"loadDepts\"\\n' +\n          '                        style=\"width:500px;\"/>\\n' +\n          '          </div>\\n' +\n          '          <div class=\"head-container\">\\n' +\n          '            <h3>弹出机构树</h3>\\n' +\n          '            <el-input v-on:click.native=\"deptSearchDialog=true\" placeholder=\"请选择机构\" v-model=\"queryShowDeptName\"\\n' +\n          '                      style=\"width:250px;\" disabled/>\\n' +\n          '            <el-input type=\"text\" style=\"display:none\" v-model=\"deptId\"/>\\n' +\n          '            <!-- 所属机构search-dialog -->\\n' +\n          '            <el-theme-dialog :visible.sync=\"deptSearchDialog\" :close-on-click-modal=\"false\" title=\"选择机构\" append-to-body\\n' +\n          '                       width=\"500px\">\\n' +\n          '              <div style=\"height: 400px;overflow-y: scroll\">\\n' +\n          '                <div class=\"head-container\">\\n' +\n          '                  <el-input\\n' +\n          '                    v-model=\"deptNameDialog\"\\n' +\n          '                    placeholder=\"请输入机构名称\"\\n' +\n          '                    clearable\\n' +\n          '                    size=\"small\"\\n' +\n          '                    prefix-icon=\"el-icon-search\"\\n' +\n          '                    style=\"margin-bottom: 20px\"\\n' +\n          '                  />\\n' +\n          '                </div>\\n' +\n          '                <div class=\"head-container\">\\n' +\n          '                  <el-tree\\n' +\n          '                    :data=\"deptOptions\"\\n' +\n          '                    :props=\"defaultProps\"\\n' +\n          '                    :expand-on-click-node=\"false\"\\n' +\n          '                    :filter-node-method=\"filterNode\"\\n' +\n          '                    ref=\"treeDialog\"\\n' +\n          '                    :load=\"getTreeSelect\"\\n' +\n          '                    lazy\\n' +\n          '                    @node-click=\"handleDialogNodeClick\"\\n' +\n          '                  />\\n' +\n          '                </div>\\n' +\n          '              </div>\\n' +\n          '            </el-theme-dialog>\\n' +\n          '          </div>\\n' +\n          '        </el-col>\\n' +\n          '      </el-row>\\n' +\n          '    </div>\\n' +\n          '  </div>\\n' +\n          '</template>\\n' +\n          '\\n' +\n          '<script>\\n' +\n          '  import { treeselect } from \\'@/api/system/dept\\'\\n' +\n          '  import TreeSelect from \\'@riophae/vue-treeselect\\'\\n' +\n          '  import \\'@riophae/vue-treeselect/dist/vue-treeselect.css\\'\\n' +\n          '  import { LOAD_CHILDREN_OPTIONS } from \\'@riophae/vue-treeselect\\'\\n' +\n          '\\n' +\n          '  export default {\\n' +\n          '    name: \\'TreeSelectDemo\\',\\n' +\n          '    components: { TreeSelect },\\n' +\n          '    data() {\\n' +\n          '      return {\\n' +\n          '        // 部门名称\\n' +\n          '        deptName: undefined,\\n' +\n          '        // 部门树选项\\n' +\n          '        deptOptions: undefined,\\n' +\n          '        defaultProps: {\\n' +\n          '          children: \\'children\\',\\n' +\n          '          label: \\'label\\'\\n' +\n          '        },\\n' +\n          '        // 下拉树code\\n' +\n          '        orgCode: null,\\n' +\n          '        // 部门树选项\\n' +\n          '        orgOptions: [],\\n' +\n          '        // 机构id\\n' +\n          '        deptId: null,\\n' +\n          '        // 用于显示查询的机构名称\\n' +\n          '        queryShowDeptName: \\'\\',\\n' +\n          '        // 表格上方机构查询dialog\\n' +\n          '        deptSearchDialog: false,\\n' +\n          '        // 部门名称\\n' +\n          '        deptNameDialog: undefined\\n' +\n          '      }\\n' +\n          '    },\\n' +\n          '    watch: {\\n' +\n          '      // 根据名称筛选部门树\\n' +\n          '      deptName(val) {\\n' +\n          '        this.$refs.tree.filter(val)\\n' +\n          '      },\\n' +\n          '      // 根据名称筛选部门树\\n' +\n          '      deptNameDialog(val) {\\n' +\n          '        this.$refs.treeDialog.filter(val)\\n' +\n          '      }\\n' +\n          '    },\\n' +\n          '    created() {\\n' +\n          '      // 初始化弹窗内部门数据\\n' +\n          '      this.getDepts()\\n' +\n          '    },\\n' +\n          '    methods: {\\n' +\n          '      // 获取左侧部门数据\\n' +\n          '      getTreeSelect(node, resolve) {\\n' +\n          '        let pid = \\'\\'\\n' +\n          '        if (node.level == 0) {\\n' +\n          '          pid = \\'\\'\\n' +\n          '        } else {\\n' +\n          '          pid = node.data.id\\n' +\n          '        }\\n' +\n          '        setTimeout(() => {\\n' +\n          '          treeselect({ parentId: pid }).then(response => {\\n' +\n          '            if (resolve) {\\n' +\n          '              resolve(response.data)\\n' +\n          '            } else {\\n' +\n          '              this.deptOptions = response.data\\n' +\n          '            }\\n' +\n          '          })\\n' +\n          '        }, 100)\\n' +\n          '      },\\n' +\n          '      // 初始化弹窗内部门数据\\n' +\n          '      getDepts() {\\n' +\n          '        treeselect({ parentId: \"0\" }).then(res => {\\n' +\n          '          this.orgOptions = res.data.map(function(obj) {\\n' +\n          '            if (obj.hasChildren) {\\n' +\n          '              obj.children = null\\n' +\n          '            }\\n' +\n          '            return obj\\n' +\n          '          })\\n' +\n          '        })\\n' +\n          '      },\\n' +\n          '      // 获取弹窗内部门数据\\n' +\n          '      loadDepts({ action, parentNode, callback }) {\\n' +\n          '        if (action === LOAD_CHILDREN_OPTIONS) {\\n' +\n          '          treeselect({ parentId: parentNode.id }).then(res => {\\n' +\n          '            parentNode.children = res.data.map(function(obj) {\\n' +\n          '              if (obj.hasChildren) {\\n' +\n          '                obj.children = null\\n' +\n          '              }\\n' +\n          '              return obj\\n' +\n          '            })\\n' +\n          '            setTimeout(() => {\\n' +\n          '              callback()\\n' +\n          '            }, 200)\\n' +\n          '          })\\n' +\n          '        }\\n' +\n          '      },\\n' +\n          '      // search筛选节点\\n' +\n          '      filterNode(value, data) {\\n' +\n          '        if (!value) return true\\n' +\n          '        return data.label.indexOf(value) !== -1\\n' +\n          '      },\\n' +\n          '      // search节点单击事件\\n' +\n          '      handleNodeClick(data) {\\n' +\n          '        this.$message({\\n' +\n          '          showClose: true,\\n' +\n          '          message: \\'search树节点点击事件\\'\\n' +\n          '        })\\n' +\n          '      },\\n' +\n          '      // dialog中search节点单击事件\\n' +\n          '      handleDialogNodeClick(data) {\\n' +\n          '        this.deptId = data.id\\n' +\n          '        this.queryShowDeptName = data.label\\n' +\n          '        this.deptSearchDialog = false\\n' +\n          '      }\\n' +\n          '    }\\n' +\n          '  }\\n' +\n          '<\\/script>\\n'\n      }\n    }\n  }\n</script>\n"]}]}