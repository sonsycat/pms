{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\evaluate\\index\\algorithm.vue?vue&type=style&index=0&id=3bf0f616&lang=scss&scoped=true&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\evaluate\\index\\algorithm.vue","mtime":1726738258564},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949271},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179282},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110683},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152666},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC5lbC1kaWFsb2cgewogIG1heC1oZWlnaHQ6IDUyJSAhaW1wb3J0YW50OwogIG92ZXJmbG93OiBoaWRkZW47CiAgLmVsLWRpYWxvZ19fYm9keSB7CiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwMHB4KTsKICAgIG92ZXJmbG93OiBhdXRvOwogICAgLmxpdC10aXRsZXsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICBwYWRkaW5nLWJvdHRvbTogOHB4OwogICAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICNjY2NjY2M7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["algorithm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"algorithm.vue","sourceRoot":"src/views/evaluate/index","sourcesContent":["<template>\n<!--  <div>-->\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"50%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"指标代码\" prop=\"indexCode\">\n              <el-input class=\"w90\" v-model=\"form.indexCode\" placeholder=\"系统自动生成指标代码\" disabled/>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"指标名称\" prop=\"indexName\">\n              <el-input class=\"w90\" v-model=\"form.indexName\" placeholder=\"指标名称\"  maxlength=\"100\" show-word-limit disabled />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"是否区间指标\" prop=\"isSection\">\n              <el-select class=\"w90\" v-model=\"form.isSection\" placeholder=\"请选择是否区间指标\" @change=\"changeSection\">\n                <el-option\n                  v-for=\"dict in isSectionOptions\"\n                  :key=\"dict.dictValue\"\n                  :label=\"dict.dictLabel\"\n                  :value=\"dict.dictValue\"\n                />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"数据源:\" prop=\"dbCode\" >\n              <el-select class=\"w90\" v-model=\"form.dbCode\" placeholder=\"请选择数据源\" >\n                <el-option\n                  v-for=\"dict in dbOptions\"\n                  :key=\"dict.code\"\n                  :label=\"dict.name\"\n                  :value=\"dict.code\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"指标算法sql\" prop=\"indexSql\">\n              <el-input v-model=\"form.indexSql\" type=\"textarea\" :rows=\"10\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"指标数据从\" prop=\"dateTimeRange\" v-show=\"form.isSection=='0'\">\n              <el-date-picker\n                v-model=\"dateTimeRange\"\n                type=\"daterange\"\n                value-format=\"yyyy-MM-dd\"\n                range-separator=\"至\"\n                start-placeholder=\"开始日期\"\n                end-placeholder=\"结束日期\">\n              </el-date-picker>\n            </el-form-item>\n            <el-form-item label=\"\" prop=\"\" v-show=\"form.isSection!='0'\">\n\n            </el-form-item>\n          </el-col>\n<!--          <el-col :span=\"12\">\n            <el-form-item label=\"\">\n              <el-button type=\"success\" @click=\"showDataFun\">生成数据</el-button>\n            </el-form-item>\n          </el-col>-->\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n<!--        <el-button type=\"success\" @click=\"showDataFun\">生成数据</el-button>-->\n        <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n<!--  </div>-->\n</template>\n\n<script>\nimport { listDatabase } from \"@/api/apportionment/database\";\nimport { validEmail } from'@/utils/validate';\nimport {\n  listIndex,\n  getIndex,\n  delIndex,\n  addIndex,\n  updateIndex,\n  exportIndex,\n  createDataFromSql\n} from \"@/api/evaluate/index\";\nimport Editor from '@/components/Editor';\nimport {Message} from \"element-ui\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    },\n    addIndexName:{\n      type:String,\n      default:\"\"\n    },\n\n  },\n  watch: {\n    id: {\n      handler(val) {\n        if (val) {\n          this.id = val;\n          this.getDetailInfo();\n        } else {\n          this.id = \"\";\n          this.form.indexName=this.addIndexName\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    open: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n    Editor,\n\n  },\n  data() {\n    return {\n      title: \"指标管理-指标算法\",\n      openDialog: this.open,\n      dateTimeRange:[],\n      dbOptions: [],//数据源\n      // 表单参数\n      form: {\n\n      }, \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t        // 表单校验\n      rules: {\n        isSection:[\n          {required: true, message: \"是否区间指标不能为空\", trigger: [\"blur\",\"change\"]}\n        ],\n        indexSql:[\n          {required: true, message: \"指标算法Spl不能为空\", trigger: \"blur\"}\n        ],\n        dbCode:[\n          {required: true, message: \"请选择数据源\", trigger: [\"blur\",\"change\"]}\n        ]\n      },\n      isSectionOptions:[],\n\n    };\n  },\n  created() {\n    this.getList()\n    //是否字典类型\n    this.getDicts(\"hr_is_change\").then(response => {\n      this.isSectionOptions = response.data;\n    });\n  },\n  methods: {\n    getList() {\n      //数据源获取\n      listDatabase().then(response => {\n        this.dbOptions = response.rows;\n      });\n    },\n    getDetailInfo() {\n      getIndex(this.id).then(response => {\n        this.form = response.data;\n        this.form.isSection=this.form.isSection?this.form.isSection:'1';\n        if(this.form.isSection==0){\n          this.$set(this.dateTimeRange,0,this.form.sectionStart)\n          this.$set(this.dateTimeRange,1,this.form.sectionEnd)\n        }else{\n          this.$set(this.dateTimeRange,0,'')\n          this.$set(this.dateTimeRange,1,'')\n        }\n      });\n    },\n    showDataFun(){\n      this.$refs[\"form\"].validate(valid => {\n        if(valid){\n          this.form.sectionStart=this.dateTimeRange[0]||null;\n          this.form.sectionEnd=this.dateTimeRange[1]||null;\n          let params = {\n            id:this.id,\n            orgType:this.form.orgType,\n            indexCode:this.form.indexCode,\n            dbCode:this.form.dbCode,\n            indexSql:this.form.indexSql,\n            isSection:this.form.isSection,\n            sectionStart:this.form.sectionStart,\n            sectionEnd:this.form.sectionEnd\n          }\n          this.$emit('showData',params);\n          /*createDataFromSql(params).then(response => {\n            if (response.code === 200) {\n              this.msgSuccess(response.msg)\n            } else {\n              reject(response.msg);\n            }\n          }).catch((err)=>{\n            reject(err);\n          });*/\n        }else{\n          this.msgError(\"请先填写数据\")\n        }\n      })\n    },\n    setIndicatorExp(){\n      this.$emit(\"openIndExp\")\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"cancel\", false);\n    },\n    changeSection(val){\n      if(val==1){\n        this.dateTimeRange=[]\n      }\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        compCode: null,\n        accountCode: null,\n        bscOneCode: null,\n        bscSecondCode: null,\n        deptType: null,\n        orgType: null,\n        indexCode: null,\n        indexName: null,\n        isExpress: null,\n        formulaCode: null,\n        formulaName: null,\n        isSection: '1',\n        indexSql: null,\n        sectionStart: '',\n        sectionEnd: '',\n        isCouns: null,\n        isStop: null,\n        isComp: null,\n        isAbsolute: null,\n        indexType: null,\n        isRegular: null,\n        indexRatio: null,\n        indexContent: null,\n        indexSort: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null,\n        dbCode:null,\n      };\n      this.resetForm(\"form\");\n    },\n    /** 提交按钮 */\n    submitForm() {\n      if(this.form.isSection==0&&this.dateTimeRange.length==0){\n        this.rules.dateTimeRange=[\n          {required: true, message: \"指标数据时间区间不能为空\", trigger: \"blur\"}\n        ]\n      }else{\n        this.rules.dateTimeRange=[\n          {message: \"\",}\n        ]\n      }\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.form.sectionStart=this.dateTimeRange[0]||null;\n          this.form.sectionEnd=this.dateTimeRange[1]||null;\n          if(!this.id){\n            this.$emit(\"success\", this.form);\n          }else{\n            let saveLoading=this.saveLoading()\n            updateIndex(this.form).then(response => {\n              this.msgSuccess(\"修改成功\");\n              this.$emit(\"success\", false);\n              saveLoading.close()\n            });\n          }\n\n        }\n      });\n    },\n  }};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .el-dialog {\n  max-height: 52% !important;\n  overflow: hidden;\n  .el-dialog__body {\n    height: calc(100% - 100px);\n    overflow: auto;\n    .lit-title{\n      font-size: 16px;\n      padding-bottom: 8px;\n      border-bottom: 1px dashed #cccccc;\n    }\n  }\n}\n</style>\n"]}]}