{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\evaluate\\set\\addBonus.vue?vue&type=style&index=0&id=6d67e2d2&lang=scss&scoped=true&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\evaluate\\set\\addBonus.vue","mtime":1682043108350},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCAuZWwtZGlhbG9nIHsKICBtaW4taGVpZ2h0OiAxMCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAuZWwtZGlhbG9nX19ib2R5IHsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTAwcHgpOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgfQp9Cg=="},{"version":3,"sources":["addBonus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addBonus.vue","sourceRoot":"src/views/evaluate/set","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"30%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n    <el-form ref=\"form\" :model=\"form\" :rules=\"rules\">\n      <el-row>\n        <el-col :span=\"24\">\n          <el-form-item label=\"一级分类\" prop=\"oneCode\">\n            <el-select class=\"w90\" :disabled=\"id!=''\" clearable filterable remote v-model=\"form.oneCode\" placeholder=\"请选择一级分类\" @change=\"setType\">\n              <el-option\n                v-for=\"dict in oneCodeOptions\"\n                :key=\"dict.bscCode\"\n                :label=\"dict.bscName\"\n                :value=\"dict.bscCode\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item label=\"二级分类\" prop=\"secondCode\">\n            <el-select class=\"w90\" :disabled=\"id!=''\" clearable filterable remote v-model=\"form.secondCode\" placeholder=\"请选择二级分类\">\n              <el-option\n                v-for=\"dict in secondCodeOptions\"\n                :key=\"dict.bscCode\"\n                :label=\"dict.bscName\"\n                :value=\"dict.bscCode\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item label=\"指标集名称\" prop=\"setName\">\n            <el-input class=\"w90\" v-model=\"form.setName\" placeholder=\"请输入指标集名称\"  maxlength=\"100\" show-word-limit  />\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item label=\"适用年份\" prop=\"partYear\">\n            <el-select class=\"w90\" v-model=\"form.partYear\" placeholder=\"请选择适用年份\">\n              <el-option\n                v-for=\"dict in partYearOptions\"\n                :key=\"dict.dictValue\"\n                :label=\"dict.dictLabel\"\n                :value=\"dict.dictValue\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n        <el-col :span=\"24\">\n          <el-form-item label=\"适用对象\" prop=\"orgType\">\n            <el-select class=\"w90\" v-model=\"form.orgType\" placeholder=\"请选择适用对象\">\n              <el-option\n                v-for=\"dict in orgTypeOptions\"\n                :key=\"dict.dictValue\"\n                :label=\"dict.dictLabel\"\n                :value=\"dict.dictValue\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n      <el-button @click=\"cancel\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\n  import { validEmail } from'@/utils/validate'\n  import { listBonus, getSet, delSet, addBonus, updateSet, exportSet, setType } from \"@/api/evaluate/set\";\n\n  export default {\n    name: \"addEdit\",\n    props: {\n      open: {\n        type: Boolean,\n        default: false\n      },\n      id: {\n        type: [String, Number],\n        default: \"\"\n      }\n    },\n    watch: {\n      id: {\n        handler(val) {\n          this.reset();\n          if (val) {\n            this.id = val;\n            this.title = \"奖金指标集管理-编辑\";\n            this.getDetailInfo();\n          } else {\n            this.id = \"\";\n            this.title = \"奖金指标集管理-新增\";\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      open: {\n        handler(val) {\n          this.openDialog = val;\n        },\n        deep: true\n      }\n    },\n    components: {\n    },\n    data() {\n      return {\n        title: \"指标集管理-新增\",\n        openDialog: this.open,\n        // 表单参数\n        form: {},\n        orgTypeOptions: [],\n        partYearOptions: [],\n        // 表单校验\n        rules: {\n          oneCode:[\n            { required:true,message:'一级分类不能为空',trigger:['blur','change'] }\n          ],\n          secondCode:[\n            { required:true,message:'二级分类不能为空',trigger:['blur','change'] }\n          ],\n          setName:[\n            { required:true,message:'指标集名称不能为空',trigger:['blur','change'] }\n          ],\n          orgType:[\n            { required:true,message:'适用对象不能为空',trigger:['blur','change'] }\n          ],\n          partYear:[\n            { required:true,message:'适用年份不能为空',trigger:['blur','change'] }\n          ],\n\n        },\n        //一级分类\n        oneCodeOptions:[],\n        secondCodeOptions:[],\n      };\n    },\n    created() {\n      this.getList();\n      this.getDicts(\"pms_zb_zz\").then(response => {\n        this.orgTypeOptions = response.data;\n      });\n      this.getDicts(\"pms_zbj_nf\").then(response => {\n        this.partYearOptions = response.data;\n      });\n      this.setType()\n    },\n    methods: {\n      getDetailInfo() {\n        getSet(this.id).then(response => {\n          // console.log(response);\n          this.form = response.data;\n          this.setType(this.form.oneCode)\n        });\n      },\n      setType(val){\n        let params={\n          parentCode:val?val:0\n        }\n        if(!val){\n          this.form.secondCode=null;\n          this.oneCodeOptions=[];\n          this.secondCodeOptions=[];\n        }\n\n        setType(params).then(res=>{\n          if(res.code==200){\n            if(val){\n              this.secondCodeOptions=res.data;\n            }else{\n              this.oneCodeOptions=res.data;\n            }\n          }\n        })\n      },\n      /** 查询指标集管理列表 */\n      getList() {\n        this.loading = true;\n        listBonus(this.queryParams).then(response => {\n          this.setList = response.rows;\n          this.total = response.total;\n          this.loading = false;\n        });\n      },\n      // 组织类别(适用对象)字典翻译\n      orgTypeFormat(row, column) {\n        return this.selectDictLabel(this.orgTypeOptions, row.orgType);\n      },\n      // 适用年份字典翻译\n      partYearFormat(row, column) {\n        return this.selectDictLabel(this.partYearOptions, row.partYear);\n      },\n      // 弹框关闭\n      handleDialogClose() {\n        this.$emit(\"cancel\", false);\n      },\n      // 取消\n      cancel() {\n        this.$emit(\"cancel\", false);\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          id: null,\n          compCode:this.$store.state.user.userInfo.deptId,\n          accountCode: null,\n          setCode: null,\n          setName: null,\n          oneCode: null,\n          secondCode: null,\n          deptType: null,\n          orgType: null,\n          partYear: null,\n          delFlag: null,\n          createBy: null,\n          createTime: null,\n          updateBy: null,\n          updateTime: null,\n          remark: null\n        };\n        this.resetForm(\"form\");\n      },\n      /** 提交按钮 */\n      submitForm() {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            const saveLoading=this.saveLoading()\n            if (this.form.id != null) {\n              updateSet(this.form).then(response => {\n                this.msgSuccess(\"修改成功\");\n                this.$emit(\"success\", false);\n              });\n              saveLoading.close()\n            } else {\n              addBonus(this.form).then(response => {\n                this.msgSuccess(\"新增成功\");\n                this.$emit(\"success\", false);\n                saveLoading.close()\n              });\n            }\n          }\n        });\n      },\n    }};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 10%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}