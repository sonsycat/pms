{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\project\\project\\index.vue?vue&type=style&index=0&id=7e0e393c&lang=css&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\project\\project\\index.vue","mtime":1682043106097},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtdHJhbnNmZXItcGFuZWx7CiAgIHdpZHRoOiA0MiU7CiAgIGhlaWdodDogODAlOwogfQouZWwtdHJhbnNmZXItcGFuZWxfX2xpc3QuaXMtZmlsdGVyYWJsZXsKICAgaGVpZ2h0OiA4MCU7CiB9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsspBA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/project/project","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div ref=\"search\">\n      <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\">\n        <el-form-item label=\"项目编码\" prop=\"projectCode\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.projectCode\"\n            placeholder=\"请输入项目编码\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item label=\"项目名称\" prop=\"projectName\">\n          <el-input\n            class=\"search_w220\"\n            v-model=\"queryParams.projectName\"\n            placeholder=\"请输入项目名称\"\n            clearable\n            @keyup.enter.native=\"handleQuery\"\n          />\n        </el-form-item>\n        <el-form-item label=\"项目级别\" prop=\"projectLevel\">\n          <el-select class=\"search_w220\" v-model=\"queryParams.projectLevel\" placeholder=\"请选择项目级别\" clearable >\n            <el-option\n              v-for=\"dict in projectLevelOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"项目类型\" prop=\"projectType\">\n          <el-select class=\"search_w220\" v-model=\"queryParams.projectType\" placeholder=\"请选择项目类型\" clearable >\n            <el-option\n              v-for=\"dict in projectTypeOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"成本属性\" prop=\"costProperty\">\n          <el-select class=\"search_w220\" v-model=\"queryParams.costProperty\" placeholder=\"请选择成本属性\" clearable >\n            <el-option\n              v-for=\"dict in costPropertyOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div ref=\"btns\">\n      <el-row :gutter=\"10\" class=\"mb8\">\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAdd\"\n            v-hasPermi=\"['project:project:add']\"\n          >新增</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"success\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleUpdate\"\n            v-hasPermi=\"['project:project:edit']\"\n          >修改</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            :disabled=\"multiple\"\n            @click=\"handleDelete\"\n            v-hasPermi=\"['project:project:remove']\"\n          >删除</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleDept\"\n            v-hasPermi=\"['project:project:add']\"\n          >科室设置</el-button>\n        </el-col>\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"warning\"\n            icon=\"el-icon-upload2\"\n            size=\"mini\"\n            :loading=\"exportLoading\"\n            @click=\"handleExport\"\n            v-hasPermi=\"['project:project:export']\"\n          >导出模板</el-button>\n        </el-col>\n\n        <el-col :span=\"1.5\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-upload2\"\n            size=\"mini\"\n            @click=\"handleImport\"\n          >导入Excel</el-button>\n        </el-col>\n        <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n      </el-row>\n    </div>\n\n    <el-table border stripe :height=\"tableHeight\" v-loading=\"loading\" :data=\"projectList\"\n              @selection-change=\"handleSelectionChange\"\n              ref=\"multipleTable\"\n              @row-click=\"rowClick\"\n              :row-style=\"rowStyle\"\n              row-key=\"projectCode\"\n              default-expand-all\n              :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n              :row-class-name=\"rowClassName\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column sortable label=\"项目编码\" width=\"160\" align=\"center\" prop=\"projectCode\" />\n      <el-table-column sortable label=\"项目名称\" width=\"160\" align=\"left\" prop=\"projectName\">\n        <template slot-scope=\"scope\">\n           <el-link type=\"primary\" :underline=\"false\" v-html=\"scope.row.projectName\" @click.stop=\"handleClickTableName(scope.row)\" class=\"displayBlock text-ellipsis \"></el-link>\n        </template>\n      </el-table-column>\n      <el-table-column sortable label=\"项目级别\" width=\"100\" align=\"center\" prop=\"projectLevel\" :formatter=\"projectLevelFormat\" />\n      <el-table-column sortable label=\"项目类型\" width=\"100\" align=\"center\" prop=\"projectType\" :formatter=\"projectTypeFormat\" />\n      <el-table-column sortable label=\"成本属性\" width=\"100\" align=\"center\" prop=\"costProperty\" :formatter=\"costPropertyFormat\" />\n      <el-table-column sortable label=\"是否可控\" width=\"100\" align=\"center\" prop=\"isControl\" :formatter=\"isControlFormat\" />\n      <el-table-column sortable label=\"是否核算\" width=\"100\" align=\"center\" prop=\"isAccount\" :formatter=\"isAccountFormat\" />\n      <el-table-column sortable label=\"是否资本性成本\"  min-width=\"90\"  align=\"center\" prop=\"isCostCapital\" :formatter=\"isCostCapitalFormat\" />\n      <el-table-column sortable label=\"是否医疗成本\" align=\"center\" prop=\"isCostHealth\" :formatter=\"isCostHealthFormat\" />\n      <el-table-column sortable label=\"是否计算计入成本\"  min-width=\"100\"  align=\"center\" prop=\"isCostCalculate\" :formatter=\"isCostCalculateFormat\" />\n      <el-table-column sortable label=\"计算计入成本方案\" align=\"left\" prop=\"costScheme\" />\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <addEdit v-if=\"open\" :open=\"open\" :id=\"addEditId\" @cancel=\"cancel\" @success=\"successSubmit\" :levelOptions=\"levelOptions\" ></addEdit>\n\n    <!-- 导入待盘点明细对话框 -->\n    <el-dialog :title=\"upload.title\" :visible.sync=\"upload.open\" width=\"400px\" custom-class=\"el-button--primary\" :close-on-click-modal=\"false\" >\n      <el-upload\n        ref=\"upload\"\n        :limit=\"1\"\n        :data=\"uploadDate\"\n        accept=\".xlsx, .xls\"\n        :headers=\"upload.headers\"\n        :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\n        :disabled=\"upload.isUploading\"\n        :on-progress=\"handleFileUploadProgress\"\n        :on-success=\"handleFileSuccess\"\n        :on-error=\"handleFileError\"\n        :auto-upload=\"false\"\n        drag\n      >\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">\n          将文件拖到此处，或\n          <em>点击上传</em>\n        </div>\n        <div class=\"el-upload__tip\" style=\"color:red\" slot=\"tip\">提示：仅允许导入“xls”或“xlsx”格式文件！</div>\n      </el-upload>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\n        <el-button @click=\"upload.open = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog custom-class=\"el-button--primary\" :title=\"title\" :close-on-click-modal=\"false\" :visible.sync=\"open1\" width=\"40%\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"项目编码\" prop=\"projectCode\">\n              <el-input v-model=\"form.projectCode\" placeholder=\"系统自动生成\"  maxlength=\"50\" show-word-limit disabled />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"项目名称\" prop=\"projectName\">\n              <el-input v-model=\"form.projectName\" placeholder=\"请输入项目名称\"  maxlength=\"100\" show-word-limit disabled />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-transfer\n              filterable\n              :filter-method=\"dataFilter\"\n              v-model=\"selectedDept\"\n              :titles=\"['待选择科室信息','已选择科室信息']\"\n              :data=\"deptList\"\n              :props=\"{\n                key: 'dictValue',\n                label:'dictLabel'}\">\n              <span slot-scope=\"{ option }\" :title=\"option.dictValue\">{{ option.dictLabel }} - {{option.dictValue}}</span>\n            </el-transfer>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm()\" >保 存</el-button>\n        <el-button @click=\"cancel1\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\n  import { listProject, getProject, delProject, addProject, updateProjectDept, exportProject,getDictList } from \"@/api/project/project\";\n  import addEdit from \"./addEdit\";\n  import { getToken } from \"@/utils/auth\";\n  import { getDeptList } from \"@/api/project/project\";\n\n  export default {\n    name: \"Project\",\n    components: {\n      addEdit\n    },\n    watch: {\n      listData(val) {\n        var that = this;\n        setTimeout(function() {\n          that.resizeHandler();\n        }, 300);\n      }\n    },\n    data() {\n      return {\n        // 遮罩层\n        loading: true,\n        tableHeight: \"auto\",\n        // 导出遮罩层\n        exportLoading: false,\n        // 选中数组\n        ids: [],\n        isCostCalculates: [],\n        // 非单个禁用\n        single: true,\n        // 非多个禁用\n        multiple: true,\n        // 显示搜索条件\n        showSearch: true,\n        // 总条数\n        total: 0,\n        // 成本项目管理表格数据\n        projectList: [],\n        selectionRow: [],\n        // 弹出层标题\n        title: \"\",\n        // 是否显示弹出层\n        open: false,\n        open1: false,\n        // 方案级别字典\n        levelOptions: [],\n        // 项目级别字典\n        projectLevelOptions: [],\n        // 项目类型字典\n        projectTypeOptions: [],\n        // 成本属性字典\n        costPropertyOptions: [],\n        // 是否可控字典\n        isControlOptions: [],\n        // 是否核算字典\n        isAccountOptions: [],\n        // 是否资本性成本字典\n        isCostCapitalOptions: [],\n        // 是否医疗成本字典\n        isCostHealthOptions: [],\n        // 是否计算计入成本字典\n        isCostCalculateOptions: [],\n        // 查询参数\n        queryParams: {\n          pageNum: 1,\n          pageSize: this.$store.state.settings.pageSize,\n          compCode: this.$store.state.user.accountInfo.deptId,\n          projectCode: null,\n          projectName: null,\n          projectLevel: null,\n          projectType: null,\n          costProperty: null,\n        },\n        uploadDate: {\n          compCode: this.$store.state.user.accountInfo.deptId,\n        },\n        // 导入参数\n        upload: {\n          // 是否显示弹出层（用户导入）\n          open: false,\n          // 弹出层标题（用户导入）\n          title: \"\",\n          // 是否禁用上传\n          isUploading: false,\n          // 是否更新已经存在的用户数据\n          updateSupport: 0,\n          // 设置上传的请求头部\n          headers: { Authorization: \"Bearer \" + getToken() },\n          // 上传的地址\n          url: process.env.VUE_APP_BASE_API + \"/project/project/importData\"\n        },\n\n        // 表单参数\n        form: {},\n        // 表单校验\n        rules: {\n        },\n        deptList: [],\n        selectedDept: [],\n      };\n\n    },\n    computed: {\n      listData() {\n        return this.$store.state.app.sidebar.opened;\n      }\n    },\n    created() {\n      this.getDictList()\n      this.getList();\n      this.getDicts(\"cost_xm_jb\").then(response => {\n        this.projectLevelOptions = response.data;\n      });\n      this.getDicts(\"cost_xm_lx\").then(response => {\n        this.projectTypeOptions = response.data;\n      });\n      this.getDicts(\"cost_cb_sx\").then(response => {\n        this.costPropertyOptions = response.data;\n      });\n      this.getDicts(\"hr_is_change\").then(response => {\n        this.isCostCalculateOptions = response.data;\n        this.isControlOptions = response.data;\n        this.isCostHealthOptions = response.data;\n        this.isCostCapitalOptions = response.data;\n        this.isAccountOptions = response.data;\n      });\n      this.getDeptList(this.$store.state.user.userInfo.deptId,\"\");\n      this.$nextTick(() => {\n        this.resizeHandler();\n        window.addEventListener(\"resize\", this.resizeHandler);\n      });\n    },\n    methods: {\n      handleClickTableName(data) {\n        // 选中当前行\n        this.rowClick(data, false);\n        this.handleUpdate(data);\n      },\n      /** 查询成本项目管理列表 */\n      getList() {\n        this.loading = true;\n        listProject(this.queryParams).then(response => {\n          // console.log(this.levelOptions,'leve')\n          response.rows.forEach(ite=>{\n            this.levelOptions.forEach(item=>{\n              if(ite.costScheme==item.dictValue){\n                ite.costScheme=item.dictLabel\n              }\n            })\n          })\n          this.projectList = this.handleTree(\n            response.rows,\n            \"projectCode\",\n            \"parentProject\"\n          );\n          this.total = response.total;\n          this.loading = false;\n        });\n      },\n      /** 查询收入项目管理列表 */\n      getDeptList(compCode,isCostCalculate) {\n        this.loading = true;\n        getDeptList(compCode,isCostCalculate).then(response => {\n          console.log(\"compCode\",compCode)\n          this.deptList = response.data;\n          this.loading = false;\n        });\n      },\n      // 项目级别字典翻译\n      projectLevelFormat(row, column) {\n        return this.selectDictLabel(this.projectLevelOptions, row.projectLevel);\n      },\n      // 项目类型字典翻译\n      projectTypeFormat(row, column) {\n        return this.selectDictLabel(this.projectTypeOptions, row.projectType);\n      },\n      // 成本属性字典翻译\n      costPropertyFormat(row, column) {\n        return this.selectDictLabel(this.costPropertyOptions, row.costProperty);\n      },\n      // 是否可控字典翻译\n      isControlFormat(row, column) {\n        return this.selectDictLabel(this.isControlOptions, row.isControl);\n      },\n      // 是否核算字典翻译\n      isAccountFormat(row, column) {\n        return this.selectDictLabel(this.isAccountOptions, row.isAccount);\n      },\n      // 是否资本性成本字典翻译\n      isCostCapitalFormat(row, column) {\n        return this.selectDictLabel(this.isCostCapitalOptions, row.isCostCapital);\n      },\n      // 是否医疗成本字典翻译\n      isCostHealthFormat(row, column) {\n        return this.selectDictLabel(this.isCostHealthOptions, row.isCostHealth);\n      },\n      // 是否计算计入成本字典翻译\n      isCostCalculateFormat(row, column) {\n        return this.selectDictLabel(this.isCostCalculateOptions, row.isCostCalculate);\n      },\n      //分摊方案级别\n      getDictList(){\n        let query={\n          compCode:this.$store.state.user.userInfo.deptId,\n        }\n        getDictList(query).then(response=>{\n          if(response.code===200){\n            this.levelOptions=response.data\n          }\n        })\n      },\n      successSubmit(flag) {\n        this.open = flag;\n        this.getList();\n      },\n      // 取消按钮\n      cancel() {\n        this.open = false;\n        this.reset();\n      },\n      cancel1() {\n        this.open1 = false;\n        this.reset();\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          id: null,\n          compCode: null,\n          accountCode: null,\n          projectCode: null,\n          projectName: null,\n          parentProject: null,\n          projectLevel: null,\n          projectType: null,\n          costProperty: null,\n          isControl: null,\n          isAccount: null,\n          isCostCapital: null,\n          isCostHealth: null,\n          isCostCalculate: null,\n          costScheme: null,\n          delFlag: null,\n          createBy: null,\n          createTime: null,\n          updateBy: null,\n          updateTime: null,\n          remark: null\n        };\n        this.resetForm(\"form\");\n      },\n      /** 搜索按钮操作 */\n      handleQuery() {\n        this.queryParams.pageNum = 1;\n        this.getList();\n      },\n      /** 重置按钮操作 */\n      resetQuery() {\n        this.resetForm(\"queryForm\");\n        this.handleQuery();\n      },\n      // 多选框选中数据\n      handleSelectionChange(selection) {\n        this.ids = selection.map(item => item.id)\n        this.isCostCalculate = selection.map(item => item.isCostCalculate)[0]\n        this.single = selection.length!==1\n        this.multiple = !selection.length\n        this.selectionRow=selection\n      },\n      rowClick(row, column, event) {\n        let refsElTable = this.$refs.multipleTable;\n        let findRow = this.selectionRow.find(c => c.rowIndex == row.rowIndex);\n        if (findRow && this.selectionRow.length == 1) {\n          refsElTable.toggleRowSelection(row, false);\n          return;\n        }\n        refsElTable.clearSelection();\n        refsElTable.toggleRowSelection(row);\n      },\n      rowStyle({\n                 row,\n                 rowIndex\n               }) {\n        Object.defineProperty(row, 'rowIndex', {\n          value: rowIndex,\n          writable: true,\n          enumerable: false\n        })\n      },\n      rowClassName({\n                     row,\n                     rowIndex\n                   }) {\n        let rowName = \"\",\n          findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex);\n        if (findRow) {\n          rowName = \"current-row \";\n        }\n        return rowName;\n      },\n      resizeHandler() {\n        let a = this.$refs.search.offsetHeight;\n        let b = this.$refs.btns.offsetHeight;\n        let h = a + b + 18 + 45 + 84 + 40 + 20;\n        h = h + \"px\";\n        this.tableHeight = `calc(100vh - ${h})`;\n      },\n      /** 新增按钮操作\n       handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加成本项目管理\";\n    },\n       */\n      /** 新增按钮操作 */\n      handleAdd() {\n        this.open = true; // 弹框点开\n        this.addEditId = \"\"; // addEditId 是新增  去子组件方便区分新增编辑\n      },\n      handleUpdate(row) {\n        this.reset();\n        const id = row.id || this.ids[0];\n        this.open = true;\n        this.addEditId = id; // id赋值\n        console.log(\"addEditId---\" + addEdit);\n      },\n      /** 提交按钮 */\n      submitForm() {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            this.form.deptList = this.selectedDept;\n            console.log(\"form\",this.form)\n            let saveLoading = this.saveLoading();\n            if (this.form.id != null) {\n              updateProjectDept(this.form).then(response => {\n                this.msgSuccess(\"项目科室设置成功\");\n                this.open1 = false;\n                saveLoading.close();\n              });\n            }\n          }\n        });\n      },\n      handleDelete(row) {\n        const ids = row.id || this.ids;\n        this.$confirm('是否确认删除成本项目管理编号为\"' + ids + '\"的数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function() {\n          return delProject(ids);\n        }).then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        }).catch(() => {});\n      },\n      /** 导入按钮操作 */\n      handleImport() {\n        this.upload.title = \"成本项目导入\";\n        this.upload.open = true;\n      },\n      // 提交上传文件\n      submitFileForm() {\n        this.$refs.upload.submit();\n      },\n      // 文件上传中处理\n      handleFileUploadProgress(event, file, fileList) {\n        this.upload.isUploading = true;\n      },\n      // 文件上传成功处理\n      handleFileSuccess(response, file, fileList) {\n        this.upload.open = false;\n        this.upload.isUploading = false;\n        this.$refs.upload.clearFiles();\n        this.$alert(response.msg, \"导入结果\", { dangerouslyUseHTMLString: true });\n        this.getList();\n      },\n      handleFileError(err,file,fileList){\n        this.upload.isUploading = false;\n        this.msgError(\"上传失败！\");\n//  \tconsole.log(err);\n//  \tconsole.log(file);\n//  \tconsole.log(fileList);\n      },\n      /** 导出按钮操作 */\n      handleExport() {\n        const queryParams = this.queryParams;\n        this.$confirm('是否导出成本项目管理模板?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          this.exportLoading = true;\n          return exportProject(queryParams);\n        }).then(response => {\n          this.download(response.msg);\n          this.exportLoading = false;\n        }).catch(() => {});\n      },\n      handleDept(row) {\n        this.reset();\n        this.open1 = false;\n        this.title = \"收入项目管理-科室设置\";\n        const id = row.id || this.ids[0];\n        let isCostCalculate = this.isCostCalculate;\n        if (isCostCalculate == '0') {\n          this.getDeptList(this.$store.state.user.userInfo.deptId,\"0\");\n        } else if (isCostCalculate == '1') {\n          this.getDeptList(this.$store.state.user.userInfo.deptId,\"1\");\n        }\n        getProject(id).then(response => {\n          console.log(response);\n          this.form = response.data;\n          this.selectedDept = this.form.deptList?this.form.deptList:[]\n          console.log(this.selectedDept,\"this.selectedDept\")\n          this.open1 = true;\n        });\n      },\n      /** 搜索方法 */\n      dataFilter(query,item) {\n        return item.dictValue.indexOf(query) > -1 || item.dictLabel.indexOf(query) > -1;\n        // if (val) { //val存在\n        //   // this.options = this.optionsCopy.filter((item) => {\n        //   //   if (!!~item.label.indexOf(val) || !!~item.label.toUpperCase().indexOf(val.toUpperCase())) {\n        //   //     return true\n        //   //   }\n        //   // })\n        // } else { //val为空时，还原数组\n        //   return true;\n        //   // this.options = this.optionsCopy;\n        // }\n      },\n    }\n  };\n</script>\n<style>\n .el-transfer-panel{\n    width: 42%;\n    height: 80%;\n  }\n .el-transfer-panel__list.is-filterable{\n    height: 80%;\n  }\n</style>\n"]}]}