{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\subsidy\\reward\\addEdit.vue?vue&type=style&index=0&id=bfc1c52e&lang=scss&scoped=true&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\subsidy\\reward\\addEdit.vue","mtime":1682043104717},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgaGVpZ2h0OiA0MCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAuZWwtZGlhbG9nX19ib2R5IHsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTAwcHgpOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgfQp9Cg=="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/subsidy/reward","sourcesContent":["<template>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"30%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"项目名称\" prop=\"rewardName\">\n          <el-input v-model=\"form.rewardName\" placeholder=\"请输入项目名称\"  maxlength=\"100\" show-word-limit  />\n        </el-form-item>\n        <el-form-item label=\"项目类型\" prop=\"rewardType\">\n          <el-select v-model=\"form.rewardType\" placeholder=\"请选择项目类型\" class=\"w100\" @change=\"changeType\">\n            <el-option\n              v-for=\"dict in rewardTypeOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"奖惩标准\" prop=\"rewardReason\">\n          <el-input v-model=\"form.rewardReason\" type=\"textarea\" placeholder=\"请输入内容\" />\n        </el-form-item>\n        <el-form-item label=\"是否启用\" prop=\"isEnable\">\n          <el-select v-model=\"form.isEnable\" placeholder=\"请选择是否启用\" class=\"w100\">\n            <el-option\n              v-for=\"dict in isEnableOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm(true)\">保存并继续添加</el-button>\n        <el-button type=\"primary\" @click=\"submitForm(false)\">保 存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { validEmail } from'@/utils/validate'\nimport { listReward, getReward, delReward, addReward, updateReward, exportReward } from \"@/api/subsidy/reward\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset();\n        if (val) {\n          this.id = val;\n          this.title = \"奖惩项目维护管理-编辑\";\n          this.getDetailInfo();\n        } else {\n          this.id = \"\";\n          this.title = \"奖惩项目维护管理-新增\";\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    open: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n  },\n  data() {\n    return {\n      title: \"奖惩项目维护管理-新增\",\n      openDialog: this.open,\n      // 表单参数\n      form: {},\n      \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t\t  rewardTypeOptions: [],\n\t  \t  \t  \t  \t  \t\t  isEnableOptions: [],\n\t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t  \t        // 表单校验\n      rules: {\n        rewardName: [\n          { required: true, message: \"项目名称不能为空\", trigger: \"blur\" }\n        ],\n        rewardType: [\n          { required: true, message: \"项目类型不能为空\", trigger: \"blur\" }\n        ],\n        rewardReason: [],\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"REWARD_TYPE\").then(response => {\n      this.rewardTypeOptions = response.data;\n    });\n    this.getDicts(\"hr_is_change\").then(response => {\n      this.isEnableOptions = response.data;\n    });\n  },\n  methods: {\n    changeType(val) {\n      if (val == '1') {\n        this.rules.rewardReason = [\n          { required: true, message: \"奖惩标准不能为空\", trigger: \"blur\" }\n        ];\n      } else {\n        this.rules.rewardReason = [];\n      }\n    },\n  \tgetDetailInfo() {\n      getReward(this.id).then(response => {\n        console.log(response);\n        this.form = response.data;\n      });\n    },\n    /** 查询奖惩项目维护列表 */\n    getList() {\n      this.loading = true;\n      listReward(this.queryParams).then(response => {\n        this.rewardList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 项目类型(1单项奖惩2其他奖励)字典翻译\n    rewardTypeFormat(row, column) {\n      return this.selectDictLabel(this.rewardTypeOptions, row.rewardType);\n    },\n    // 是否启用字典翻译\n    isEnableFormat(row, column) {\n      return this.selectDictLabel(this.isEnableOptions, row.isEnable);\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"cancel\", false);\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        compCode: this.$store.state.user.userInfo.deptId,\n        accountCode: null,\n        rewardCode: null,\n        rewardName: null,\n        rewardType: null,\n        rewardReason: null,\n        isEnable: '0',\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 提交按钮 */\n    submitForm(type) {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          let saveLoading = this.saveLoading();\n          if (type) {\n            if (this.form.id != null) {\n              updateReward(this.form).then(response => {\n                this.reset();\n                this.msgSuccess(\"修改成功\");\n                this.$emit(\"success\", true);\n                this.title = \"奖惩项目维护管理-新增\";\n                saveLoading.close();\n              });\n            } else {\n              addReward(this.form).then(response => {\n                this.reset();\n                this.msgSuccess(\"新增成功\");\n                this.$emit(\"success\", true);\n                this.title = \"奖惩项目维护管理-新增\";\n                saveLoading.close();\n              });\n            }\n          } else {\n            if (this.form.id != null) {\n              updateReward(this.form).then(response => {\n                this.msgSuccess(\"修改成功\");\n                this.$emit(\"success\", false);\n                saveLoading.close();\n              });\n            } else {\n              addReward(this.form).then(response => {\n                this.msgSuccess(\"新增成功\");\n                this.$emit(\"success\", false);\n                saveLoading.close();\n              });\n            }\n          }\n        }\n      });\n    },\n}};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    height: 40%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}