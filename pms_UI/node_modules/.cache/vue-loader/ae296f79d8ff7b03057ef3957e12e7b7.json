{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\apportionment\\dictionary\\addEdit.vue?vue&type=style&index=0&id=2b9340e5&lang=scss&scoped=true&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\apportionment\\dictionary\\addEdit.vue","mtime":1682043107735},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgbWluLWhlaWdodDogMjAlOwogIG92ZXJmbG93OiBoaWRkZW47CiAgLmVsLWRpYWxvZ19fYm9keSB7CiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEwMHB4KTsKICAgIG92ZXJmbG93OiBhdXRvOwogIH0KfQo="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/apportionment/dictionary","sourcesContent":["<template>\n  <div>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"50%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-row :gutter=\"24\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"比例编码\" prop=\"ratioCode\">\n              <el-input v-model=\"form.ratioCode\" placeholder=\"系统自动生成\"  maxlength=\"50\" show-word-limit disabled />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"比例名称\" prop=\"ratioName\">\n              <el-input v-model=\"form.ratioName\" placeholder=\"请输入比例名称\"  maxlength=\"100\" show-word-limit  />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"比例类型\" prop=\"ratioType\">\n              <el-select v-model=\"form.ratioType\" placeholder=\"请选择比例类型\" class=\"w100\" @change=\"handleChangeType\" disabled>\n                <el-option\n                  v-for=\"dict in ratioTypeOptions\"\n                  :key=\"dict.dictValue\"\n                  :label=\"dict.dictLabel\"\n                  :value=\"dict.dictValue\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"数据源\" prop=\"coonectCode\">\n              <el-select v-model=\"form.coonectCode\" placeholder=\"请选择数据源\" class=\"w100\">\n                <el-option\n                  v-for=\"dict in coonectOptions\"\n                  :key=\"dict.code\"\n                  :label=\"dict.name\"\n                  :value=\"dict.code\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"计算计入成本分摊SQL\" prop=\"countSql\" v-if=\"form.ratioType == '2'\">\n              <el-input v-model=\"form.countSql\" type=\"textarea\" rows=\"4\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"一级分摊SQL\" prop=\"firstLevelSql\" v-if=\"form.ratioType == '1'\">\n              <el-input v-model=\"form.firstLevelSql\" type=\"textarea\" rows=\"4\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"二级分摊SQL\" prop=\"secondLevelSql\" v-if=\"form.ratioType == '1'\">\n              <el-input v-model=\"form.secondLevelSql\" type=\"textarea\" rows=\"4\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"三级分摊SQL\" prop=\"thirdLevelSql\" v-if=\"form.ratioType == '1'\">\n              <el-input v-model=\"form.thirdLevelSql\" type=\"textarea\" rows=\"4\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" rows=\"4\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"success\" @click=\"submitCs\" class=\"dialog-footer\">SQL测试</el-button>\n        <el-button type=\"primary\" @click=\"submitForm(false)\">保存并新增</el-button>\n        <el-button type=\"primary\" @click=\"submitForm(true)\" >保  存</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n    <el-dialog :title=\"title1\" class=\"dialog\" :visible.sync=\"openDialog2\" width=\"50%\" append-to-body :close-on-click-modal=\"false\"  custom-class=\"el-button--primary\"  @close=\"cancel2\">\n      <div>\n        <el-row>\n          <!-- 计算计入成本分摊方案 -->\n          <el-tabs v-model=\"activeName2\">\n            <el-tab-pane label=\"计算计入成本分摊方案\" name=\"sql4List\">\n              <el-form  ref=\"form\" :model=\"form\">\n                <el-table border class=\"mt20\" v-loading=\"sql4Loading\" :data=\"form.costApportionmentDictionaryDetailList4\" ref=\"cardListRef\" stripe>\n                  <el-table-column label=\"比例编码\" align=\"center\" prop=\"ratioCode\" show-overflow-tooltip/>\n                  <el-table-column label=\"科室编码\" align=\"center\" prop=\"deptCode\" show-overflow-tooltip/>\n                  <el-table-column label=\"科室名称\" align=\"left\" prop=\"deptName\" show-overflow-tooltip/>\n                  <el-table-column label=\"使用人数\" align=\"center\" prop=\"num\" show-overflow-tooltip/>\n                  <el-table-column label=\"使用占比\" align=\"center\" prop=\"useRatio\" show-overflow-tooltip/>\n                  <el-table-column label=\"年月\" align=\"center\" prop=\"ny\" show-overflow-tooltip/>\n                </el-table>\n              </el-form>\n            </el-tab-pane>\n          </el-tabs>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <p :style=\"style\" class=\"\">{{form.exception}}</p>\n          </el-col>\n        </el-row>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancel2\" class=\"m20\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import { listDictionary, listDictionarys, getDictionary, addDictionary, updateDictionary } from \"@/api/apportionment/dictionary\";\n  import { listDatabase, getDatabase, delDatabase, addDatabase, updateDatabase, exportDatabase } from \"@/api/apportionment/database\";\n  export default {\n    name: \"addEdit\",\n    props: {\n      open: {\n        type: Boolean,\n        default: false\n      },\n      id: {\n        type: [String, Number],\n        default: \"\"\n      }\n    },\n    watch: {\n      id: {\n        handler(val) {\n          this.reset();\n          if (val) {\n            this.id = val;\n            this.title = \"分摊比例字典管理-编辑\";\n            this.getDetailInfo();\n          } else {\n            this.id = \"\";\n            this.form.ratioType = '2';\n            this.title = \"分摊比例字典管理-新增\";\n          }\n        },\n        deep: true,\n        immediate: true\n      },\n      open: {\n        handler(val) {\n          this.openDialog = val;\n        },\n        deep: true\n      }\n    },\n    components: {\n    },\n    data() {\n      return {\n        style:{color: 'green',textAlign: 'right',fontSize: '18px'},\n        title: \"分摊比例字典管理-新增\",\n        title1: \"分摊比例字典管理/ 测试SQL\",\n        openDialog: this.open,\n        openDialog1: false,\n        openDialog2: false,\n        activeName1: \"sql1List\",\n        activeName2: \"sql4List\",\n        // 表单参数\n        form: {},\n        ratioTypeOptions: [],\n        coonectOptions: [],\n        sql1Loading: false,\n        // 使用科室明细\n        sql2Loading: false,\n        // 资产文档\n        sql3Loading: false,\n        sql4Loading: false,\n        // 查询参数\n        queryParams: {\n          pageNum: 1,\n          pageSize: 30,\n          code: null,\n          name: null,\n          type: null,\n          url: null,\n          userName: null,\n          passWord: null,\n        },\n        // 表单校验\n        rules: {\n          ratioName: [\n            { required: true, message: \"比例名称不能为空\", trigger: \"change\" }\n          ],\n          coonectCode: [\n            { required: true, message: \"数据源不能为空\", trigger: \"change\" }\n          ],\n          countSql: [\n            { required: true, message: \"计算计入成本分摊SQL不能为空\", trigger: \"change\" }\n          ],\n          firstLevelSql: [\n            { required: true, message: \"一级分摊SQL不能为空\", trigger: \"change\" }\n          ],\n          secondLevelSql: [\n            { required: true, message: \"二级分摊SQL不能为空\", trigger: \"change\" }\n          ],\n          thirdLevelSql: [\n            { required: true, message: \"三级分摊SQL不能为空\", trigger: \"change\" }\n          ],\n        }\n      };\n    },\n    created() {\n      this.getList();\n      this.getDicts(\"cost_scale_type\").then(response => {\n        this.ratioTypeOptions = response.data;\n      });\n\n    },\n    methods: {\n      getDetailInfo() {\n        getDictionary(this.id).then(response => {\n          this.form = response.data;\n        });\n      },\n      getList() {\n        listDatabase(this.queryParams).then(response => {\n          this.coonectOptions = response.rows;\n        });\n      },\n      // 比例类型字典翻译\n      ratioTypeFormat(row, column) {\n        return this.selectDictLabel(this.ratioTypeOptions, row.ratioType);\n      },\n      // 弹框关闭\n      handleDialogClose() {\n        this.$emit(\"cancel\", false);\n      },\n      // 取消\n      cancel() {\n        this.$emit(\"cancel\", false);\n      },\n      cancel1() {\n        this.openDialog1 = false;\n      },\n      cancel2() {\n        this.openDialog2 = false;\n      },\n      handleChangeType(val){\n        this.$confirm('是否确认更换比例类型，如果更换类型SQL数据全部清空！', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          this.form.firstLevelSql = null,\n            this.form.secondLevelSql = null,\n            this.form.thirdLevelSql = null,\n            this.form.countSql = null,\n            this.form.costApportionmentDictionaryDetailList1 = [],\n            this.form.costApportionmentDictionaryDetailList2 = [],\n            this.form.costApportionmentDictionaryDetailList3 = [],\n            this.form.costApportionmentDictionaryDetailList4 = []\n        }).catch(() => {});\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          id: null,\n          compCode: this.$store.state.user.userInfo.deptId,\n          accountCode: null,\n          ratioCode: null,\n          ratioName: null,\n          ratioType: '1',\n          countSql: null,\n          firstLevelSql: null,\n          secondLevelSql: null,\n          thirdLevelSql: null,\n          costApportionmentDictionaryDetailList1: [],\n          costApportionmentDictionaryDetailList2: [],\n          costApportionmentDictionaryDetailList3: [],\n          costApportionmentDictionaryDetailList4: [],\n          delFlag: null,\n          createBy: null,\n          createTime: null,\n          updateBy: null,\n          updateTime: null,\n          remark: null\n        };\n        this.resetForm(\"form\");\n      },\n      /** SQL测试 */\n      submitCs(){\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            let saveLoading = this.saveLoading();\n            let ratioType = this.form.ratioType;\n            this.form.exception = null;\n            if (ratioType == \"1\") {\n              listDictionarys(this.form).then(response => {\n                if(response.data.costApportionmentDictionaryDetailList1.length ==0 ||response.data.costApportionmentDictionaryDetailList2.length ==0 ||response.data.costApportionmentDictionaryDetailList3 ==0){\n                  this.msgError(\"数据库连接异常或sql异常!\");\n                  return\n                }\n                this.form.costApportionmentDictionaryDetailList1 = response.data.costApportionmentDictionaryDetailList1;\n                this.form.costApportionmentDictionaryDetailList2 = response.data.costApportionmentDictionaryDetailList2;\n                this.form.costApportionmentDictionaryDetailList3 = response.data.costApportionmentDictionaryDetailList3;\n                if (response.data.exception) {\n                  this.style = {color: 'red',textAlign: 'right',fontSize: '18px'};\n                  this.form.exception = \"测试失败: \" + response.data.exception;\n                } else {\n                  this.form.exception = \"测试成功\"\n                }\n                this.openDialog1 = true; // 弹框点开sql1\n              });\n              saveLoading.close();\n            } else if (ratioType == \"2\") {\n              listDictionarys(this.form).then(response => {\n                if(response.data.costApportionmentDictionaryDetailList4.length ==0){\n                  this.msgError(\"数据库连接异常或sql异常!\");\n                  return\n                }\n                this.form.costApportionmentDictionaryDetailList4 = response.data.costApportionmentDictionaryDetailList4;\n                if (response.data.exception) {\n                  this.style = {color: 'red',textAlign: 'right',fontSize: '18px'};\n                  this.form.exception = \"测试失败: \" + response.data.exception;\n                } else {\n                  this.form.exception = \"测试成功\"\n                }\n                this.openDialog2 = true; // 弹框点开\n              });\n              saveLoading.close();\n            }\n          }\n        });\n      },\n\n      /** 提交按钮 */\n      submitForm(type) {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            if(this.form.costApportionmentDictionaryDetailList1.length != 0||this.form.costApportionmentDictionaryDetailList4.length != 0){\n              let saveLoading = this.saveLoading();\n              if (this.form.exception != '测试成功') {\n                this.msgError(\"SQL测试失败\");\n                return\n              }\n              if (this.form.id != null) {\n                updateDictionary(this.form).then(response => {\n                  this.msgSuccess(\"修改成功\");\n                  if (!type) {\n                    this.reset();\n                    this.title = \"分摊比例字典管理-新增\";\n                  } else {\n                    this.$emit(\"success\", false);\n                  }\n                  saveLoading.close();\n                });\n              } else {\n                addDictionary(this.form).then(response => {\n                  this.msgSuccess(\"新增成功\");\n                  if (!type) {\n                    this.reset();\n                  } else {\n                    this.$emit(\"success\", false);\n                  }\n                  saveLoading.close();\n                });\n              }\n            }else{\n              this.msgError(\"SQL测试数据不能为空\");\n              return\n            }\n          }\n        });\n      },\n    }};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    min-height: 20%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}