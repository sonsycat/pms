{"remainingRequest":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\pms_oracle\\pms_UI\\src\\views\\bonus\\deptSortDetail\\index.vue?vue&type=style&index=0&id=4b47acc1&lang=scss&scoped=true&","dependencies":[{"path":"D:\\work\\pms_oracle\\pms_UI\\src\\views\\bonus\\deptSortDetail\\index.vue","mtime":1693362204000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC50b3AtcmlnaHQtYnRuIGJ1dHRvbjpmaXJzdC1jaGlsZHtkaXNwbGF5OiBub25lfQo6OnYtZGVlcCAuZWwtZGlhbG9nIHsKICBoZWlnaHQ6IDcwJTsKICBtaW4td2lkdGg6IDUwMHB4OwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLmVsLWRpYWxvZ19fYm9keSB7CiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/bonus/deptSortDetail","sourcesContent":["<template>\n  <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"40%\" custom-class=\"el-button--primary\" append-to-body\n             :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n\t<div ref=\"btns\">\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['bonus:deptSortDetail:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['bonus:deptSortDetail:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['bonus:deptSortDetail:remove']\"\n        >删除</el-button>\n      </el-col>\n      <right-toolbar @queryTable=\"getList\" style=\"margin-right: 20px;\"></right-toolbar>\n    </el-row>\n\t</div>\n\n    <el-table border stripe v-loading=\"loading\" :data=\"deptSortDetailList\" @selection-change=\"handleSelectionChange\" height=\"calc(70vh - 100px)\"\n              ref=\"multipleTable\" @row-click=\"rowClick\" :row-style=\"rowStyle\" :row-class-name=\"rowClassName\">\n      <el-table-column type=\"selection\" :selectable=\"selectableAllow\" width=\"55\" align=\"center\"></el-table-column>\n      <el-table-column sortable label=\"类别编码\" align=\"center\" prop=\"sortCode\" />\n      <el-table-column sortable label=\"类别名称\" align=\"center\" prop=\"sortName\" />\n    </el-table>\n\n    <addEdit v-if=\"openEdit\" :openEdit=\"openEdit\" :id=\"addEditId\" @cancel=\"cancelEdit\" @success=\"successSubmit\"></addEdit>\n  </el-dialog>\n</template>\n\n<script>\nimport { listDeptSortDetail, getDeptSortDetail, delDeptSortDetail, addDeptSortDetail, updateDeptSortDetail, exportDeptSortDetail } from \"@/api/bonus/deptSortDetail\";\nimport addEdit from \"./addEdit\";\n\nexport default {\n  name: \"DeptSortDetail\",\n  components: {\n    addEdit\n  },\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      openDialog: this.open,\n      // 遮罩层\n      loading: true,\n      // 导出遮罩层\n      exportLoading: false,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 核算单位类别表格数据\n      deptSortDetailList: [],\n      selectionRow: [],\n      // 弹出层标题\n      title: \"核算单位类别 / 类别设置\",\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 30,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n      },\n\n      //弹窗编辑\n      openEdit: false,\n      addEditId: ''\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询核算单位类别列表 */\n    getList() {\n      this.loading = true;\n      listDeptSortDetail(this.queryParams).then(response => {\n        this.deptSortDetailList = response;\n        this.loading = false;\n      });\n    },\n\tsuccessSubmit(flag) {\n      this.openEdit = flag;\n      this.getList();\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.single = selection.length!==1\n      this.multiple = !selection.length\n      this.selectionRow=selection\n    },\n    rowClick(row, column, event) {\n      if(row.editAllow == '1'){\n        return false;\n      }\n      let refsElTable = this.$refs.multipleTable;\n      let findRow = this.selectionRow.find(c => c.rowIndex == row.rowIndex);\n      if (findRow && this.selectionRow.length == 1) {\n        refsElTable.toggleRowSelection(row, false);\n        return;\n      }\n      refsElTable.clearSelection();\n      refsElTable.toggleRowSelection(row);\n    },\n    rowStyle({row, rowIndex}) {\n      Object.defineProperty(row, 'rowIndex', {\n        value: rowIndex,\n        writable: true,\n        enumerable: false\n      })\n    },\n    rowClassName({row, rowIndex}) {\n      let rowName = \"\",\n        findRow = this.selectionRow.find(c => c.rowIndex === row.rowIndex);\n      if (findRow) {\n        rowName = \"current-row \";\n      }\n      return rowName;\n    },\n    /** 新增按钮操作\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加核算单位类别\";\n    },\n     */\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.openEdit = true; // 弹框点开\n      this.addEditId = \"\"; // addEditId 是新增  去子组件方便区分新增编辑\n    },\n    handleUpdate(row) {\n      this.reset();\n      const id = row.id || this.ids[0];\n      this.openEdit = true;\n      this.addEditId = id; // id赋值\n      console.log(\"addEditId---\" + addEdit);\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.id != null) {\n            updateDeptSortDetail(this.form).then(response => {\n              this.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addDeptSortDetail(this.form).then(response => {\n              this.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const ids = row.id || this.ids;\n      this.$confirm('是否确认删除核算单位类别编号为\"' + ids + '\"的数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function() {\n          return delDeptSortDetail(ids);\n        }).then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      const queryParams = this.queryParams;\n      this.$confirm('是否确认导出所有核算单位类别数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(() => {\n          this.exportLoading = true;\n          return exportDeptSortDetail(queryParams);\n        }).then(response => {\n          this.download(response.msg);\n          this.exportLoading = false;\n        }).catch(() => {});\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit('cancel', false)\n    },\n    // 取消按钮\n    cancelEdit() {\n      this.openEdit = false\n      this.reset()\n    },\n    // 只能选择 末级节点\n    selectableAllow(row){\n      if(row.editAllow == '1'){\n        return false;\n      }\n      return true;\n    },\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n::v-deep .top-right-btn button:first-child{display: none}\n::v-deep .el-dialog {\n  height: 70%;\n  min-width: 500px;\n  overflow: hidden;\n}\n.el-dialog__body {\n  padding: 10px !important;\n}\n</style>\n"]}]}