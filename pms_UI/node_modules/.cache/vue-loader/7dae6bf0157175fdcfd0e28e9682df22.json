{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\views\\bonus\\accountDept\\addEdit.vue?vue&type=style&index=0&id=3408fdb4&lang=scss&scoped=true&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\views\\bonus\\accountDept\\addEdit.vue","mtime":1682043107205},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":1682058377861},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1682058382042},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":1682058378631},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1682058378517},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKOjp2LWRlZXAgLmVsLWRpYWxvZyB7CiAgaGVpZ2h0OiA0MCU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKICAuZWwtZGlhbG9nX19ib2R5IHsKICAgIGhlaWdodDogY2FsYygxMDAlIC0gMTAwcHgpOwogICAgb3ZlcmZsb3c6IGF1dG87CiAgfQp9Cg=="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/bonus/accountDept","sourcesContent":["<template>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"30%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"科室编码\" prop=\"deptRoomCode\">\n          <el-input v-model=\"form.deptRoomCode\" readonly placeholder=\"请输入科室编码\"  maxlength=\"50\" show-word-limit  />\n        </el-form-item>\n        <el-form-item label=\"科室名称\" prop=\"deptRoomName\">\n          <el-input v-model=\"form.deptRoomName\" readonly placeholder=\"请输入科室名称\"  maxlength=\"50\" show-word-limit  />\n        </el-form-item>\n        <el-form-item label=\"核算科室\" prop=\"parentCode\">\n          <el-select v-model=\"form.parentCode\" filterable placeholder=\"请选择科室\" @change=\"changeParentDept\" style=\"width: 100%\">\n            <el-option\n              v-for=\"room in accountDeptList\"\n              :key=\"room.deptRoomCode\"\n              :label=\"room.deptRoomName\"\n              :value=\"room.deptRoomCode\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"是否核算\" prop=\"isAccount\">\n          <el-select v-model=\"form.isAccount\" placeholder=\"请选择是否核算\" style=\"width: 100%\" disabled>\n            <el-option\n              v-for=\"dict in isAccountOptions\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saveLoading\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { validEmail } from'@/utils/validate'\nimport { listAccountDept, getAccountDept, editAccountDept} from \"@/api/bonus/accountDept\";\nimport {getYearMonth2} from \"@/utils/date\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    },\n    name: {\n      type: [String, Number],\n      default: \"\"\n    },\n    nowDate: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset();\n        if (val) {\n          this.id = val;\n          this.title = \"核算科室设置管理-编辑\";\n          this.getDetailInfo();\n        } else {\n          this.id = \"\";\n          this.title = \"核算科室设置管理-新增\";\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    name: {\n      handler(val) {\n        this.form.deptRoomName = val;\n        // this.deptRoomName = val;\n      },\n      deep: true,\n      immediate: true\n    },\n    open: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    },\n    nowDate: {\n      handler(val) {\n        this.nowDate = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n  },\n  data() {\n    return {\n      title: \"核算科室设置管理-新增\",\n      openDialog: this.open,\n      saveLoading: false,\n      parentCode: '',\n      deptRoomName: '',\n      accountDeptList: [],\n      isAccountOptions: [],\n      queryParams: {\n        compCode: this.$store.state.user.userInfo.deptId,\n        nowDate: getYearMonth2() + '-01',\n        dataType: 2\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        parentCode: [\n          { required: true, message: \"核算科室不能为空\", trigger: \"blur\" }\n        ],\n        isAccount: [\n          { required: true, message: \"是否核算不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getList();\n    this.getDicts(\"yes_or_no\").then(response => {\n      this.isAccountOptions = response.data;\n    });\n  },\n  methods: {\n  \tgetDetailInfo() {\n      getAccountDept(this.id, this.nowDate).then(response => {\n        if(response.data != null){\n          this.form.parentCode = response.data.parentCode;\n          this.form.isAccount = response.data.isAccount;\n        }\n        this.form.deptRoomCode = this.id;\n        this.form.nowDate = this.nowDate;\n      });\n    },\n    /** 查询核算科室设置列表 */\n    getList() {\n      this.loading = true;\n      this.queryParams.nowDate = this.nowDate;\n      listAccountDept(this.queryParams).then(response => {\n        this.accountDeptList = response;\n        this.loading = false;\n      });\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"cancel\", false);\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        parentCode: null,\n        deptRoomCode: null,\n        deptRoomName: null,\n        isAccount: null,\n        nowDate: null,\n        compCode: null,\n        accountCode: null\n      };\n      this.resetForm(\"form\");\n    },\n    changeParentDept(value){\n      if(value == this.form.deptRoomCode){\n        this.form.isAccount = '0';\n      }else{\n        this.form.isAccount = '1';\n      }\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          this.saveLoading = true;\n          editAccountDept(this.form).then(response => {\n            this.msgSuccess(\"修改成功\");\n            this.$emit(\"success\", false);\n            this.saveLoading = false;\n          }).catch((err)=>{\n            this.saveLoading = false;\n          });\n        }\n      });\n    },\n}};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    height: 40%;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px);\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}