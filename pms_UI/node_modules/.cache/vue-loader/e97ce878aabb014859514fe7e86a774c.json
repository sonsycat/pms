{"remainingRequest":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\pms_oracle\\pms_UI\\src\\views\\bonus\\deptSortDetail\\addEdit.vue?vue&type=style&index=0&id=a749f00c&lang=scss&scoped=true&","dependencies":[{"path":"D:\\work\\pms_oracle\\pms_UI\\src\\views\\bonus\\deptSortDetail\\addEdit.vue","mtime":1693362204000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\work\\pms_oracle\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo6OnYtZGVlcCAuZWwtZGlhbG9nIHsKICBoZWlnaHQ6IDIyMnB4IWltcG9ydGFudDsKICBvdmVyZmxvdzogaGlkZGVuOwogIC5lbC1kaWFsb2dfX2JvZHkgewogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMDBweCkhaW1wb3J0YW50OwogICAgb3ZlcmZsb3c6IGF1dG87CiAgfQp9Cg=="},{"version":3,"sources":["addEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addEdit.vue","sourceRoot":"src/views/bonus/deptSortDetail","sourcesContent":["<template>\n    <el-dialog :title=\"title\" :visible.sync=\"openDialog\" width=\"40%\" custom-class=\"el-button--primary\" append-to-body :close-on-click-modal=\"false\" @close=\"handleDialogClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <el-form-item label=\"类别编码\" prop=\"sortCode\">\n          <el-input v-model=\"form.sortCode\" placeholder=\"系统自动生成\" readonly maxlength=\"50\" show-word-limit  />\n        </el-form-item>\n        <el-form-item label=\"类别名称\" prop=\"sortName\">\n          <el-input v-model=\"form.sortName\" placeholder=\"请输入类别名称\" maxlength=\"50\" show-word-limit  />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"saveLoading\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n</template>\n\n<script>\nimport { validEmail } from'@/utils/validate'\nimport { listDeptSortDetail, getDeptSortDetail, delDeptSortDetail, addDeptSortDetail, updateDeptSortDetail, exportDeptSortDetail } from \"@/api/bonus/deptSortDetail\";\n\nexport default {\n  name: \"addEdit\",\n  props: {\n    openEdit: {\n      type: Boolean,\n      default: false\n    },\n    id: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  watch: {\n    id: {\n      handler(val) {\n        this.reset();\n        if (val) {\n          this.id = val;\n          this.title = \"核算单位类别管理-编辑\";\n          this.getDetailInfo();\n        } else {\n          this.id = \"\";\n          this.title = \"核算单位类别管理-新增\";\n        }\n      },\n      deep: true,\n      immediate: true\n    },\n    openEdit: {\n      handler(val) {\n        this.openDialog = val;\n      },\n      deep: true\n    }\n  },\n  components: {\n  },\n  data() {\n    return {\n      title: \"核算单位类别管理-新增\",\n      openDialog: this.openEdit,\n      saveLoading: false,\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n  \tgetDetailInfo() {\n      getDeptSortDetail(this.id).then(response => {\n        console.log(response);\n        this.form = response.data;\n      });\n    },\n    /** 查询核算单位类别列表 */\n    getList() {\n      this.loading = true;\n      listDeptSortDetail(this.queryParams).then(response => {\n        this.deptSortDetailList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 弹框关闭\n    handleDialogClose() {\n      this.$emit(\"cancel\", false);\n    },\n    // 取消\n    cancel() {\n      this.$emit(\"cancel\", false);\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        id: null,\n        sortCode: null,\n        sortName: null,\n        delFlag: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null,\n        remark: null\n      };\n      this.resetForm(\"form\");\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n        this.saveLoading = true;\n          if (this.form.id != null) {\n            updateDeptSortDetail(this.form).then(response => {\n              this.msgSuccess(\"修改成功\");\n              this.$emit(\"success\", false);\n              this.saveLoading = false;\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          } else {\n            addDeptSortDetail(this.form).then(response => {\n              this.msgSuccess(\"新增成功\");\n              this.$emit(\"success\", false);\n              this.saveLoading = false;\n            }).catch((err)=>{\n              this.saveLoading = false;\n            });\n          }\n        }\n      });\n    },\n}};\n</script>\n<style lang=\"scss\" scoped>\n  ::v-deep .el-dialog {\n    height: 222px!important;\n    overflow: hidden;\n    .el-dialog__body {\n      height: calc(100% - 100px)!important;\n      overflow: auto;\n    }\n  }\n</style>\n"]}]}