{"remainingRequest":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\components\\deptSearch\\index.vue?vue&type=style&index=0&id=6cf95dbf&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\src\\views\\components\\deptSearch\\index.vue","mtime":1693362205000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\css-loader\\dist\\cjs.js","mtime":1693361949000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1693362179000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\postcss-loader\\src\\index.js","mtime":1693362110000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1693362152000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924000},{"path":"D:\\Work\\oracle_java\\pms (2)\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZGVwdFNlYXJjaCB7DQogIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsNCn0NCi8vIOWNleS9jeW8ueahhuagt+W8j+abtOaUuQ0KI2RlcHREaWFsb2cgew0KICA6OnYtZGVlcCAuZWwtZGlhbG9nIHsNCiAgICBoZWlnaHQ6IDgwJTsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIC5lbC1kaWFsb2dfX2JvZHkgew0KICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA1NHB4KTsNCiAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICA+IGRpdiB7DQogICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgLmhlYWQtY29udGFpbmVyOmxhc3Qtb2YtdHlwZSB7DQogICAgICAgICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA1NHB4KTsNCiAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/components/deptSearch","sourcesContent":["<template>\r\n  <div class=\"deptSearch el-form-item\" >\r\n  \t\t<el-form-item :label=\"label\" :prop=\"deptName\">\r\n       \t<el-input :size=\"size\" :readonly=\"readonly\" :clearable=\"clearable\" @keyup.enter.native=\"handleQuery\" v-on:click.native=\"handleClickInput\" :placeholder=\"`请选择${label}`\" v-model=\"deptParams[deptName]\" @change=\"handleChange\" style=\"width:100%\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"\" :prop=\"deptId\" style=\"display:none\">\r\n\t      <el-input type=\"text\" v-model=\"deptParams[deptId]\" @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-dialog custom-class=\"el-button--primary\" :visible.sync=\"deptSearchFormDialog\" id=\"deptDialog\" :close-on-click-modal=\"false\" :title=\"`选择${label}`\" append-to-body\r\n               width=\"500px\" height=\"80%\">\r\n        <div>\r\n          <div class=\"head-container\">\r\n            <el-row>\r\n              <el-col :span=\"16\" class=\"pr5\">\r\n                <el-input\r\n                \t@input = \"deptNameForm2\"\r\n                    v-model=\"deptNameForm\"\r\n                    placeholder=\"请输入机构名称\"\r\n                    clearable\r\n                    size=\"small\"\r\n                    prefix-icon=\"el-icon-search\"\r\n                    style=\"margin-bottom: 20px;\"\r\n                  />\r\n              </el-col>\r\n              <el-col :span=\"8\">\r\n                  <el-button\r\n                      size=\"mini\"\r\n                      type=\"text\"\r\n                      icon=\"el-icon-refresh\"\r\n                      @click=\"handleRefresh\"\r\n                    >刷新</el-button>\r\n                    <el-button\r\n                      size=\"mini\"\r\n                      type=\"text\"\r\n                      icon=\"el-icon-arrow-down\"\r\n                      @click=\"handleExpand(true)\"\r\n                    >展开</el-button>\r\n                    <el-button\r\n                      size=\"mini\"\r\n                      type=\"text\"\r\n                      icon=\"el-icon-arrow-up\"\r\n                      @click=\"handleExpand(false)\"\r\n                    >折叠</el-button>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n          <div class=\"head-container\">\r\n            <el-tree\r\n            \t:lazy=\"lazy\"\r\n              node-key=\"id\"\r\n              v-loading=\"loading\"\r\n              :data=\"deptOptions\"\r\n              :load=\"getDeptDatas\"\r\n              :props=\"defaultProps\"\r\n              :filter-node-method=\"filterNode\"\r\n              :default-expand-all=\"defaultExpand\"\r\n              ref=\"treeForm\"\r\n              :default-expanded-keys=\"defaultShowNodes\"\r\n              @node-click=\"handleFormNodeClick\"\r\n            />\r\n          </div>\r\n        </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { treeselect,treeselect2,treeselect3 } from '@/api/system/dept'\r\nexport default {\r\n  name: \"index\",\r\n  props: {\r\n    queryParams: Object,\r\n    label: {\r\n      type: String,\r\n      default: \"单位\"\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: \"mini\"\r\n    },\r\n    clearable:{\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    readonly: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    deptId: {\r\n      type: String,\r\n      default: \"deptId\"\r\n    },\r\n    deptName: {\r\n      type: String,\r\n      default: \"deptName\"\r\n    },\r\n    // 需要清空类似 科室的值\r\n    deptCode: {\r\n      type: String,\r\n      default: \"deptCode\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n    \tlazy:false,\r\n      //定义点击次数,默认0次\r\n      treeClickCount: 0,\r\n      deptParams: this.queryParams,\r\n      deptSearchFormDialog: false,\r\n      deptNameForm: undefined,\r\n      deptOptions: undefined,\r\n      defaultShowNodes: [], \r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"label\"\r\n      },\r\n      open: false,\r\n      loading: false,\r\n      // 默认展开所有节点\r\n      defaultExpand: true\r\n    };\r\n  },\r\n  mounted() {\r\n       this.getTreeSelect();\r\n  },\r\n  watch: {\r\n//\tdeptOptions: {\r\n//\t\t\thandler () {\r\n//\t\t\t\tthis.deptOptions.forEach(item => {\r\n//\t\t\t\t\tif(item.children){\r\n//\t\t\t\t\t\titem.children.forEach(item2 => {\r\n//\t\t\t\t\t\t\tthis.defaultShowNodes.push(item2.id)\r\n//\t\t\t\t\t\t})\r\n//\t\t\t\t\t}\r\n//\t\t\t\t})\r\n//\t\t\t},\r\n////\t\t\tdeep: true,\r\n////\t\t\timmediate: true\r\n//\t\t},\r\n    // 根据名称筛选部门树\r\n//  deptNameForm(val) {\r\n//  \ttreeselect({deptName:val}).then(res => {\r\n//  \t\tconsole.log(res);\r\n//\t\t\t\tlet ress = res.data;\r\n//\t\t\t\tthis.deptOptions = ress;\r\n////\t      this.append(data,ress);\r\n//\t    });\r\n////  \tconsole.log(val);\r\n////    this.$refs.treeForm.filter(val);\r\n//  },\r\n    queryParams: {\r\n      handler(val) {\r\n        this.deptParams = val;\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n  \tdeptNameForm2() {\r\n  \t\tconsole.log(this.deptNameForm);\r\n  \t\tthis.loading = true;\r\n    \ttreeselect3({deptName:this.deptNameForm}).then(res => {\r\n    \t\tconsole.log(res);\r\n\t\t\t\tlet ress = res.data;\r\n\t\t\t\tthis.deptOptions = ress;\r\n\t\t\t\tthis.loading = false;\r\n\t    });\r\n    },\r\n    // 点击input\r\n    handleClickInput() {\r\n      if (!this.readonly) {\r\n        this.deptSearchFormDialog = true;\r\n      } else {\r\n        // this.msgError('禁止编辑')\r\n      }\r\n    },\r\n    getDeptDatas(node,resolve) {\r\n      var pId = \"\";\r\n      if (node.level === 0) {\r\n        pId = \"\";\r\n      } else {\r\n        pId = node.data.id;\r\n      }\r\n      setTimeout(() => {\r\n          this.loading = true;\r\n        treeselect({ parentId: pId }).then(res => {\r\n        \tconsole.log(res);\r\n          if (resolve) {\r\n            resolve(res.data);\r\n          } else {\r\n            this.deptOptions = res.data;\r\n          }\r\n          this.loading = false;\r\n        });\r\n      }, 100);\r\n    },\r\n    //获取单位树\r\n    getTreeSelect() {\r\n      this.loading = true;\r\n      treeselect2().then(response => {\r\n      \tconsole.log(response);\r\n        this.deptOptions = response.data;\r\n        this.loading = false;\r\n      });\r\n    },\r\n\tappend(data,res) {\r\n\t\tif(data.children){\r\n\t\t\tdata.children = [];\r\n\t\t}\r\n     \tfor(let i=0;i<res.length;i++){\r\n     \t\tlet newChild = { id: res[i].id, label:res[i].label, children: [] }\r\n\t      \tif (!data.children) {\r\n\t          this.$set(data,'children',[]);\r\n\t       \t}\r\n        \tdata.children.push(newChild);  \r\n     \t}\r\n  \t},\r\n    // form表单中search节点单击事件\r\n    handleFormNodeClick(data) {\r\n    \tif(data.children){\r\n    \t}else{\r\n    \t\tdelete data.children;\r\n    \t}\r\n\t\ttreeselect({ parentId: data.id }).then(res => {\r\n\t\t\tlet ress = res.data;\r\n\t      \tthis.append(data,ress);\r\n\t    });\r\n      //记录点击次数\r\n      this.treeClickCount++;\r\n      //单次点击次数超过2次不作处理,直接返回,也可以拓展成多击事件\r\n      if (this.treeClickCount >= 2) {\r\n        return;\r\n      }\r\n      //计时器,计算300毫秒为单位,可自行修改\r\n      this.timer = window.setTimeout(() => {\r\n        if (this.treeClickCount == 1) {\r\n          //把次数归零\r\n          this.treeClickCount = 0;\r\n          //单击事件处理\r\n          //\t\t\t\t\tconsole.log(\"单击事件\");\r\n        } else if (this.treeClickCount > 1) {\r\n          //把次数归零\r\n          this.treeClickCount = 0;\r\n          //双击事件\r\n          this.queryParams[this.deptCode] = null;\r\n          this.deptParams[this.deptId] = data.id;\r\n          this.deptParams[this.deptName] = data.label;\r\n          this.deptSearchFormDialog = false;\r\n          this.$emit(\"input\", this.deptParams);\r\n        }\r\n      }, 300);\r\n    },\r\n    // search筛选节点\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.label.indexOf(value) !== -1;\r\n    },\r\n    handleChange(value) {\r\n      if (!value) {\r\n        this.deptParams[this.deptId] = \"\";\r\n        this.$emit(\"input\", this.deptParams);\r\n      }\r\n    },\r\n    // 刷新树节点\r\n    handleRefresh() {\r\n    \tthis.deptNameForm = \"\";\r\n      this.getTreeSelect();\r\n//    this.getDeptDatas();\r\n    },\r\n    // 展开收缩树结点\r\n    handleExpand(flag) {\r\n      // 将没有转换成树的原数据\r\n      let treeList = this.deptOptions;\r\n      for (let i = 0; i < treeList.length; i++) {\r\n        this.$refs.treeForm.store.nodesMap[treeList[i].id].expanded = flag;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.deptSearch {\r\n  margin-bottom: 0 !important;\r\n}\r\n// 单位弹框样式更改\r\n#deptDialog {\r\n  ::v-deep .el-dialog {\r\n    height: 80%;\r\n    overflow: hidden;\r\n    .el-dialog__body {\r\n      height: calc(100% - 54px);\r\n      overflow: hidden;\r\n      > div {\r\n        height: 100%;\r\n        .head-container:last-of-type {\r\n          height: calc(100% - 54px);\r\n          overflow-y: auto;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}