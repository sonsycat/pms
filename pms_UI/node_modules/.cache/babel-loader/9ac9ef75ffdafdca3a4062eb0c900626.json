{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\skill\\topic\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\skill\\topic\\index.vue","mtime":1682043108716},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1682058377329},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}