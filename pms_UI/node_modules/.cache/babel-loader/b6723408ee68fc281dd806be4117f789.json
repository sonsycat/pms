{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\tool\\gen\\editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\tool\\gen\\editTable.vue","mtime":1693362206794},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\babel.config.js","mtime":1693361824517},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909992},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJFOi9IUlBfSkFWQV9wbXMvcG1zX1VJL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIpLmRlZmF1bHQ7Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyIpOwp2YXIgX2dlbiA9IHJlcXVpcmUoIkAvYXBpL3Rvb2wvZ2VuIik7CnZhciBfdHlwZSA9IHJlcXVpcmUoIkAvYXBpL3N5c3RlbS9kaWN0L3R5cGUiKTsKdmFyIF9tZW51ID0gcmVxdWlyZSgiQC9hcGkvc3lzdGVtL21lbnUiKTsKdmFyIF9iYXNpY0luZm9Gb3JtID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2Jhc2ljSW5mb0Zvcm0iKSk7CnZhciBfZ2VuSW5mb0Zvcm0gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vZ2VuSW5mb0Zvcm0iKSk7CnZhciBfc29ydGFibGVqcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgic29ydGFibGVqcyIpKTsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICdHZW5FZGl0JywKICBjb21wb25lbnRzOiB7CiAgICBiYXNpY0luZm9Gb3JtOiBfYmFzaWNJbmZvRm9ybS5kZWZhdWx0LAogICAgZ2VuSW5mb0Zvcm06IF9nZW5JbmZvRm9ybS5kZWZhdWx0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g6YCJ5Lit6YCJ6aG55Y2h55qEIG5hbWUKICAgICAgYWN0aXZlTmFtZTogJ2Nsb3VtJywKICAgICAgLy8g6KGo5qC855qE6auY5bqmCiAgICAgIHRhYmxlSGVpZ2h0OiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0IC0gMjQ1ICsgJ3B4JywKICAgICAgLy8g6KGo5L+h5oGvCiAgICAgIHRhYmxlczogW10sCiAgICAgIC8vIOihqOWIl+S/oeaBrwogICAgICBjbG91bW5zOiBbXSwKICAgICAgLy8g5a2X5YW45L+h5oGvCiAgICAgIGRpY3RPcHRpb25zOiBbXSwKICAgICAgLy8g6I+c5Y2V5L+h5oGvCiAgICAgIG1lbnVzOiBbXSwKICAgICAgLy8g6KGo6K+m57uG5L+h5oGvCiAgICAgIGluZm86IHt9LAogICAgICAvLyDlrZflhbhkaWFsb2cKICAgICAgZGljdFNlYXJjaERpYWxvZzogZmFsc2UsCiAgICAgIC8vIHNlbGVjdOe7keWumuWAvAogICAgICBkaWN0VHlwZTogJycsCiAgICAgIC8vIOihjOe0ouW8lQogICAgICByb3dJbmRleDogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHZhciB0YWJsZUlkID0gdGhpcy4kcm91dGUucGFyYW1zICYmIHRoaXMuJHJvdXRlLnBhcmFtcy50YWJsZUlkOwogICAgaWYgKHRhYmxlSWQpIHsKICAgICAgLy8g6I635Y+W6KGo6K+m57uG5L+h5oGvCiAgICAgICgwLCBfZ2VuLmdldEdlblRhYmxlKSh0YWJsZUlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5jbG91bW5zID0gcmVzLmRhdGEucm93czsKICAgICAgICBfdGhpcy5pbmZvID0gcmVzLmRhdGEuaW5mbzsKICAgICAgICBfdGhpcy50YWJsZXMgPSByZXMuZGF0YS50YWJsZXM7CiAgICAgIH0pOwogICAgICAvKiog5p+l6K+i5a2X5YW45LiL5ouJ5YiX6KGoICovCiAgICAgICgwLCBfdHlwZS5vcHRpb25zZWxlY3QpKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5kaWN0T3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgICAvKiog5p+l6K+i6I+c5Y2V5LiL5ouJ5YiX6KGoICovCiAgICAgICgwLCBfbWVudS5saXN0TWVudSkoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLm1lbnVzID0gX3RoaXMuaGFuZGxlVHJlZShyZXNwb25zZS5kYXRhLCAnbWVudUlkJyk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLyoqIOaPkOS6pOaMiemSriAqL3N1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB2YXIgYmFzaWNGb3JtID0gdGhpcy4kcmVmcy5iYXNpY0luZm8uJHJlZnMuYmFzaWNJbmZvRm9ybTsKICAgICAgdmFyIGdlbkZvcm0gPSB0aGlzLiRyZWZzLmdlbkluZm8uJHJlZnMuZ2VuSW5mb0Zvcm07CiAgICAgIFByb21pc2UuYWxsKFtiYXNpY0Zvcm0sIGdlbkZvcm1dLm1hcCh0aGlzLmdldEZvcm1Qcm9taXNlKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIHZhbGlkYXRlUmVzdWx0ID0gcmVzLmV2ZXJ5KGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gISFpdGVtOwogICAgICAgIH0pOwogICAgICAgIGlmICh2YWxpZGF0ZVJlc3VsdCkgewogICAgICAgICAgdmFyIGdlblRhYmxlID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzaWNGb3JtLm1vZGVsLCBnZW5Gb3JtLm1vZGVsKTsKICAgICAgICAgIGdlblRhYmxlLmNvbHVtbnMgPSBfdGhpczIuY2xvdW1uczsKICAgICAgICAgIGdlblRhYmxlLnBhcmFtcyA9IHsKICAgICAgICAgICAgdHJlZUNvZGU6IGdlblRhYmxlLnRyZWVDb2RlLAogICAgICAgICAgICB0cmVlTmFtZTogZ2VuVGFibGUudHJlZU5hbWUsCiAgICAgICAgICAgIHRyZWVQYXJlbnRDb2RlOiBnZW5UYWJsZS50cmVlUGFyZW50Q29kZSwKICAgICAgICAgICAgcGFyZW50TWVudUlkOiBnZW5UYWJsZS5wYXJlbnRNZW51SWQKICAgICAgICAgIH07CiAgICAgICAgICAoMCwgX2dlbi51cGRhdGVHZW5UYWJsZSkoZ2VuVGFibGUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBfdGhpczIubXNnU3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICBfdGhpczIuY2xvc2UoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5tc2dFcnJvcign6KGo5Y2V5qCh6aqM5pyq6YCa6L+H77yM6K+36YeN5paw5qOA5p+l5o+Q5Lqk5YaF5a65Jyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRGb3JtUHJvbWlzZTogZnVuY3Rpb24gZ2V0Rm9ybVByb21pc2UoZm9ybSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICBmb3JtLnZhbGlkYXRlKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJlc29sdmUocmVzKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLyoqIOWFs+mXreaMiemSriAqL2Nsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3RhZ3NWaWV3L2RlbFZpZXcnLCB0aGlzLiRyb3V0ZSk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL3Rvb2wvZ2VuJywKICAgICAgICBxdWVyeTogewogICAgICAgICAgdDogRGF0ZS5ub3coKQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy/liKnnlKjljZXlhYPmoLznmoQgY2xhc3NOYW1lIOeahOWbnuiwg+aWueazle+8jOe7meihjOWIl+e0ouW8lei1i+WAvAogICAgdGFibGVDZWxsQ2xhc3NOYW1lOiBmdW5jdGlvbiB0YWJsZUNlbGxDbGFzc05hbWUoX3JlZikgewogICAgICB2YXIgcm93ID0gX3JlZi5yb3csCiAgICAgICAgY29sdW1uID0gX3JlZi5jb2x1bW4sCiAgICAgICAgcm93SW5kZXggPSBfcmVmLnJvd0luZGV4LAogICAgICAgIGNvbHVtbkluZGV4ID0gX3JlZi5jb2x1bW5JbmRleDsKICAgICAgLy/ms6jmhI/ov5nph4zmmK/op6PmnoQKICAgICAgcm93LmluZGV4ID0gcm93SW5kZXg7CiAgICAgIGNvbHVtbi5pbmRleCA9IGNvbHVtbkluZGV4OwogICAgfSwKICAgIC8vIOS4i+aLieahhueCueWHu+S6i+S7tgogICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrKHJvdykgewogICAgICBjb25zb2xlLmxvZyhyb3cpOwogICAgICB0aGlzLiRzZXQodGhpcy5jbG91bW5zW3Jvdy5pbmRleF0sICdkaWN0T3B0aW9ucycsIHRoaXMuZGljdE9wdGlvbnMpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgdmFyIGVsID0gdGhpcy4kcmVmcy5kcmFnVGFibGUuJGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5lbC10YWJsZV9fYm9keS13cmFwcGVyID4gdGFibGUgPiB0Ym9keScpWzBdOwogICAgdmFyIHNvcnRhYmxlID0gX3NvcnRhYmxlanMuZGVmYXVsdC5jcmVhdGUoZWwsIHsKICAgICAgaGFuZGxlOiAnLmFsbG93RHJhZycsCiAgICAgIG9uRW5kOiBmdW5jdGlvbiBvbkVuZChldnQpIHsKICAgICAgICB2YXIgdGFyZ2V0Um93ID0gX3RoaXMzLmNsb3VtbnMuc3BsaWNlKGV2dC5vbGRJbmRleCwgMSlbMF07CiAgICAgICAgX3RoaXMzLmNsb3VtbnMuc3BsaWNlKGV2dC5uZXdJbmRleCwgMCwgdGFyZ2V0Um93KTsKICAgICAgICBmb3IgKHZhciBpbmRleCBpbiBfdGhpczMuY2xvdW1ucykgewogICAgICAgICAgX3RoaXMzLmNsb3VtbnNbaW5kZXhdLnNvcnQgPSBwYXJzZUludChpbmRleCkgKyAxOwogICAgICAgIH0KICAgICAgfQogICAgfSk7CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":";;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IAAA;IACA;IACA;MACA;MACA;QACA;QACA;QACA;MACA;MACA;MACA;QACA;MACA;MACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA,WACAC;MAAA;MACA;MACA;MACAC;QACA;UAAA;QAAA;QACA;UACA;UACAC;UACAA;YACAC;YACAC;YACAC;YACAC;UACA;UACA;YACA;YACA;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAC;UACAC;QACA;MACA;IACA;IACA,WACAC;MACA;MACA;QAAAC;QAAAC;UAAAC;QAAA;MAAA;IACA;IACA;IACAC;MAAA;QAAAC;QAAAlB;QAAAmB;MAAA;MACAC;MACAF;IACA;IACA;IACAG;MACAC;MACA;IACA;EACA;EACAC;IAAA;IACA;IACA;MACAC;MACAC;QACA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA;AAAA","names":["name","components","basicInfoForm","genInfoForm","data","activeName","tableHeight","tables","cloumns","dictOptions","menus","info","dictSearchDialog","dictType","rowIndex","created","methods","submitForm","Promise","genTable","treeCode","treeName","treeParentCode","parentMenuId","getFormPromise","form","resolve","close","path","query","t","tableCellClassName","column","columnIndex","row","handleClick","console","mounted","handle","onEnd"],"sourceRoot":"src/views/tool/gen","sources":["editTable.vue"],"sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-table border  ref=\"dragTable\" :data=\"cloumns\" row-key=\"columnId\" :max-height=\"tableHeight\"\n                  :cell-class-name=\"tableCellClassName\">\n          <el-table-column sortable label=\"序号\" type=\"index\" min-width=\"5%\" class-name=\"allowDrag\"/>\n          <el-table-column\n            label=\"字段列名\"\n            prop=\"columnName\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"字段描述\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"Java类型\" min-width=\"11%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.javaType\">\n                <el-option label=\"Long\" value=\"Long\"/>\n                <el-option label=\"String\" value=\"String\"/>\n                <el-option label=\"Integer\" value=\"Integer\"/>\n                <el-option label=\"Double\" value=\"Double\"/>\n                <el-option label=\"BigDecimal\" value=\"BigDecimal\"/>\n                <el-option label=\"Date\" value=\"Date\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"java属性\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.javaField\"></el-input>\n            </template>\n          </el-table-column>\n\n          <el-table-column sortable label=\"插入\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isInsert\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"编辑\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isEdit\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"列表\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isList\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isQuery\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询方式\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\"/>\n                <el-option label=\"!=\" value=\"NE\"/>\n                <el-option label=\">\" value=\"GT\"/>\n                <el-option label=\">=\" value=\"GTE\"/>\n                <el-option label=\"<\" value=\"LT\"/>\n                <el-option label=\"<=\" value=\"LTE\"/>\n                <el-option label=\"LIKE\" value=\"LIKE\"/>\n                <el-option label=\"BETWEEN\" value=\"BETWEEN\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"必填\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isRequired\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"显示类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\"/>\n                <el-option label=\"文本域\" value=\"textarea\"/>\n                <el-option label=\"下拉框\" value=\"select\"/>\n                <el-option label=\"单选框\" value=\"radio\"/>\n                <el-option label=\"复选框\" value=\"checkbox\"/>\n                <el-option label=\"日期控件\" value=\"datetime\"/>\n                <el-option label=\"图片上传\" value=\"imageUpload\"/>\n                <el-option label=\"文件上传\" value=\"fileUpload\"/>\n                <el-option label=\"富文本控件\" value=\"editor\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"字典类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select clearable filterable placeholder=\"请选择\" v-model=\"scope.row.dictType\"\n                         v-on:click.native=\"handleClick(scope.row)\">\n                <el-option\n                  v-for=\"dict in scope.row.dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\">\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" :tables=\"tables\" :menus=\"menus\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\n  import { getGenTable, updateGenTable } from '@/api/tool/gen'\n  import { optionselect as getDictOptionselect } from '@/api/system/dict/type'\n  import { listMenu as getMenuTreeselect } from '@/api/system/menu'\n  import basicInfoForm from './basicInfoForm'\n  import genInfoForm from './genInfoForm'\n  import Sortable from 'sortablejs'\n\n  export default {\n    name: 'GenEdit',\n    components: {\n      basicInfoForm,\n      genInfoForm\n    },\n    data() {\n      return {\n        // 选中选项卡的 name\n        activeName: 'cloum',\n        // 表格的高度\n        tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n        // 表信息\n        tables: [],\n        // 表列信息\n        cloumns: [],\n        // 字典信息\n        dictOptions: [],\n        // 菜单信息\n        menus: [],\n        // 表详细信息\n        info: {},\n        // 字典dialog\n        dictSearchDialog: false,\n        // select绑定值\n        dictType: '',\n        // 行索引\n        rowIndex: ''\n      }\n    },\n    created() {\n      const tableId = this.$route.params && this.$route.params.tableId\n      if (tableId) {\n        // 获取表详细信息\n        getGenTable(tableId).then(res => {\n          this.cloumns = res.data.rows\n          this.info = res.data.info\n          this.tables = res.data.tables\n        })\n        /** 查询字典下拉列表 */\n        getDictOptionselect().then(response => {\n          this.dictOptions = response.data\n        })\n        /** 查询菜单下拉列表 */\n        getMenuTreeselect().then(response => {\n          this.menus = this.handleTree(response.data, 'menuId')\n        })\n      }\n    },\n    methods: {\n      /** 提交按钮 */\n      submitForm() {\n        const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n        const genForm = this.$refs.genInfo.$refs.genInfoForm\n        Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n          const validateResult = res.every(item => !!item)\n          if (validateResult) {\n            const genTable = Object.assign({}, basicForm.model, genForm.model)\n            genTable.columns = this.cloumns\n            genTable.params = {\n              treeCode: genTable.treeCode,\n              treeName: genTable.treeName,\n              treeParentCode: genTable.treeParentCode,\n              parentMenuId: genTable.parentMenuId\n            }\n            updateGenTable(genTable).then(res => {\n              this.msgSuccess(res.msg)\n              if (res.code === 200) {\n                this.close()\n              }\n            })\n          } else {\n            this.msgError('表单校验未通过，请重新检查提交内容')\n          }\n        })\n      },\n      getFormPromise(form) {\n        return new Promise(resolve => {\n          form.validate(res => {\n            resolve(res)\n          })\n        })\n      },\n      /** 关闭按钮 */\n      close() {\n        this.$store.dispatch('tagsView/delView', this.$route)\n        this.$router.push({ path: '/tool/gen', query: { t: Date.now() } })\n      },\n      //利用单元格的 className 的回调方法，给行列索引赋值\n      tableCellClassName({ row, column, rowIndex, columnIndex }) {//注意这里是解构\n        row.index = rowIndex\n        column.index = columnIndex\n      },\n      // 下拉框点击事件\n      handleClick(row) {\n      \tconsole.log(row);\n        this.$set(this.cloumns[row.index], 'dictOptions', this.dictOptions)\n      }\n    },\n    mounted() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      const sortable = Sortable.create(el, {\n        handle: '.allowDrag',\n        onEnd: evt => {\n          const targetRow = this.cloumns.splice(evt.oldIndex, 1)[0]\n          this.cloumns.splice(evt.newIndex, 0, targetRow)\n          for (let index in this.cloumns) {\n            this.cloumns[index].sort = parseInt(index) + 1\n          }\n        }\n      })\n    }\n  }\n</script>\n"]}]}