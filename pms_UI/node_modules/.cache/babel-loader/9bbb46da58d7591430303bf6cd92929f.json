{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\components\\UserDefinedQuery\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\components\\UserDefinedQuery\\index.vue","mtime":1693362203463},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\babel.config.js","mtime":1693361824517},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909992},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;AAuGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAIA;EACAA;EACAC;EACAC;IACA;MACA;MACAC;QACAC;QAAA;QACAC;QACAC;QACAC;QAAA;QACAC;QAAA;QACAC;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;QACA;MACA;;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;QAAAC;QAAAC;MAAA;MACA;MACAR;MACA;MACAS;QAAAd;QAAAG;QAAAY;MAAA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;QAAAC;QAAAC;QAAAvB;QAAAC;MAAA;MACA;MACAuB;QACAF,YACA;UAAAG;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAC;IACA;IACAC;MACAvB;MACAwB;IACA;IACA;IACAlC;MACAU;MACAwB;IACA;IACA;IACAP;MACAjB;MACAwB;IACA;IACA;IACAC;MACAzB;MACAwB;IACA;IACA;IACAE;MACA1B;MACAwB;IACA;IACA;IACAG;MACA3B;MACAwB;IACA;IACA;IACAjC;MACAS;MACAwB;IACA;IACAhC;MACAQ;MACAwB;IACA;IACA;IACA/B;MACAO;MACAwB;IACA;EACA;EACAI;IAAA;IACA;IACA;MAAAtC;IAAA;MACA;MACAuC;QACA;UACA;QACA;MACA;IACA;IACA;IACA;;IAEA;IACA;MACA;IACA;IACA;IACA;MACA;IACA;IACA;MACA;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;QACAnC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IACA;IACA+B;MACA;MACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;QACA;UACA;UACA;YACA;UACA;YACA;UACA;YACA;YACA;YACA;YACA;cAAA;gBAAAC;gBAAAC;cACA;gBACAC;gBACA;kBACA;oBACA;oBACA;kBACA;oBACA;kBACA;kBACA;gBACA;cACA;YACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACAzC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACA;IACAqC;MAAA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;QACA;UACA;UACA;UACA;YACA;cACApB;cACApB;YACA;YACA;YACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;IACAyC;MAAA;MACA;QAAAxB;MAAA;QACA;MACA;IACA;IACA;IACAyB;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;QACAC;QACAC;QACA7C;MACA;QACA;MACA;QACA;QACA;QACA;MACA,sBACA;IACA;EACA;AACA;AAAA","names":["name","components","data","queryParams","tableName","pageNum","pageSize","checkDelFlag","filterCondition","queryRows","fieldName","fieldConnect","fieldValue","fieldType","type","fieldDictOptions","filterConditionOptions","fieldOptions","fieldConnectDatetimeIntBigintOptions","fieldConnectCharOptions","fieldConnectVarcharOptions","fieldConnectCharCheckboxOptions","dictValue","dictLabel","field","fieldLabel","queryId","userDefinedQueryData","userDefinedQueryDialog","userDefinedQueryForm","queryName","queryIndex","rules","required","message","trigger","props","showUserDefinedQuery","default","excludeFieldArr","dictCheckboxArr","dictFieldObj","created","response","methods","addRow","delRow","fieldChange","key","value","temp","resetQuery","handleQuery","openSaveUserDefinedQueryDialog","saveUserDefinedQuery","listUserDefinedQuery","rowClick","delUserDefinedQuery","confirmButtonText","cancelButtonText"],"sourceRoot":"src/components/UserDefinedQuery","sources":["index.vue"],"sourcesContent":["<template>\n  <div :inline=\"true\" v-show=\"showUserDefinedQuery\" style=\"border:1px dashed #000;margin-bottom: 20px;\">\n    <el-row :gutter=\"24\">\n      <el-col :span=\"18\">\n        <div v-for=\"(item, index) in queryParams.queryRows\" :key=\"index\" style=\"margin: 10px\">\n          <el-row :gutter=\"24\">\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldName\"\n                         @change=\"fieldChange(item,index)\" placeholder=\"请选择查询字段\">\n                <el-option v-for=\"field in fieldOptions\" :key=\"field.fieldName\" :label=\"field.fieldLabel\"\n                           :value=\"field.fieldName\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\"\n                         v-if=\"item.type === 'number' || item.type === 'datetime'\">\n                <el-option v-for=\"dict in fieldConnectDatetimeIntBigintOptions\" :key=\"dict.dictValue\"\n                           :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'dict'\">\n                <el-option v-for=\"dict in fieldConnectCharOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'dict_checkbox'\">\n                <el-option v-for=\"dict in fieldConnectCharCheckboxOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'input'\">\n                <el-option v-for=\"dict in fieldConnectVarcharOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldValue\" placeholder=\"请选择值\"\n                         v-if=\"item.type === 'dict' || item.type === 'dict_checkbox' \">\n                <el-option v-for=\"dict in item.fieldDictOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-input placeholder=\"请输入值\" clearable size=\"small\" v-model=\"item.fieldValue\"\n                        v-if=\"item.type === 'input'\"></el-input>\n              <!-- TODO 校验只能输入数字 -->\n              <el-input placeholder=\"请输入数值\" clearable size=\"small\" v-model=\"item.fieldValue\"\n                        v-if=\"item.type === 'number'\"></el-input>\n              <el-date-picker type=\"date\" v-model=\"item.fieldValue\" value-format=\"yyyy-MM-dd\"\n                              placeholder=\"请选择日期\" v-if=\"item.type === 'datetime'\"></el-date-picker>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-button icon=\"el-icon-plus\" @click=\"addRow\"/>\n              <el-button icon=\"el-icon-delete\" @click=\"delRow(index)\"/>\n            </el-col>\n          </el-row>\n        </div>\n        <div style=\"margin: 10px\">\n          <el-row :gutter=\"24\">\n            <el-col :span=\"16\">\n              <a>过滤条件匹配： </a>\n              <el-select clearable size=\"small\" v-model=\"queryParams.filterCondition\">\n                <el-option v-for=\"dict in filterConditionOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"8\">\n              <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery()\">搜索</el-button>\n              <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery()\">重置</el-button>\n              <el-button type=\"info\" icon=\"el-icon-plus\" size=\"mini\" @click=\"openSaveUserDefinedQueryDialog\">保存查询条件\n              </el-button>\n              <el-dialog :visible.sync=\"userDefinedQueryDialog\" :close-on-click-modal=\"true\" title=\"自定义查询名称\"\n                         append-to-body width=\"500px\">\n                <el-form ref=\"form\" :model=\"userDefinedQueryForm\" :rules=\"rules\" label-width=\"150px\">\n                  <el-row>\n                    <el-col :span=\"18\">\n                      <el-form-item label=\"自定义查询名称\" prop=\"queryName\">\n                        <el-input v-model=\"userDefinedQueryForm.queryName\" placeholder=\"请输入自定义查询名称\"/>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center\">\n                  <el-button type=\"primary\" @click=\"saveUserDefinedQuery('form')\">确定</el-button>\n                </div>\n              </el-dialog>\n            </el-col>\n          </el-row>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div style=\"margin: 10px\">\n          <el-table :data=\"userDefinedQueryData\" style=\"width: 100%\" @row-click=\"rowClick\">\n            <el-table-column prop=\"queryName\" label=\"保存的查询\" width=\"240px\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"60px\">\n              <template slot-scope=\"scope\">\n                <el-button icon=\"el-icon-delete\" @click=\"delUserDefinedQuery(scope.row)\"/>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n  import {\n    getUserDefinedQueryField, userDefinedQueryDataList, addUserDefinedQuery, listUserDefinedQuery, delUserDefinedQuery\n  } from '@/api/system/userDefinedQuery'\n\n  export default {\n    name: 'userDefinedQuery',\n    components: {},\n    data() {\n      return {\n        // 查询参数\n        queryParams: {\n          tableName: this.tableName, //自定义查询表名\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          checkDelFlag: this.checkDelFlag, // 是否值查询del_flag=0的数据\n          filterCondition: 'and', //过滤条件匹配\n          queryRows: [{\n            fieldName: '', //字段名\n            fieldConnect: 'eq', //字段连接符\n            fieldValue: '', //字段值\n            fieldType: '', //字段类型\n            type: 'input', //字符串输入框、数值输入框、下拉框、或者时间组件\n            fieldDictOptions: [] //字段字典Options\n          }]\n        },\n        // 过滤条件匹配Options\n        filterConditionOptions: [],\n        // 可查询字段Options\n        fieldOptions: [],\n        // 字段连接Options\n        fieldConnectDatetimeIntBigintOptions: [],\n        fieldConnectCharOptions: [],\n        fieldConnectVarcharOptions: [],\n        fieldConnectCharCheckboxOptions: [{ dictValue: 'like', dictLabel: '包含' }],\n        // char类型字典Options\n        fieldDictOptions: [],\n        // field对象与queryId无用，只是为了防止代码出现波浪线\n        field: { fieldName: '', fieldType: '', fieldLabel: '' },\n        queryId: '',\n        // 保存的查询table数据\n        userDefinedQueryData: [],\n        // 自定义查询保存Dialog\n        userDefinedQueryDialog: false,\n        // 待保存的自定义查询表单\n        userDefinedQueryForm: { queryName: '', queryIndex: this.queryIndex, filterCondition: '', queryRows: '' },\n        // 表单校验\n        rules: {\n          queryName: [\n            { required: true, message: '请输入自定义查询名称', trigger: 'blur' }\n          ]\n        }\n      }\n    },\n    props: {\n      // 是否展示自定义查询\n      showUserDefinedQuery: {\n        type: Boolean,\n        default: false\n      },\n      // 自定义查询表的表名\n      tableName: {\n        type: String,\n        default: ''\n      },\n      // 自定义查询索引\n      queryIndex: {\n        type: String,\n        default: ''\n      },\n      // 不需要自定义查询的字段数组\n      excludeFieldArr: {\n        type: Array,\n        default: []\n      },\n      // 多选框连接符只能选择包含\n      dictCheckboxArr: {\n        type: Array,\n        default: []\n      },\n      // 需要从字典中获取Options的自定义查询字段对象\n      dictFieldObj: {\n        type: Object,\n        default: {}\n      },\n      // 分页参数\n      pageNum: {\n        type: Number,\n        default: 1\n      },\n      pageSize: {\n        type: Number,\n        default: 10\n      },\n      // 是否添加del_flag=0作为查询条件\n      checkDelFlag: {\n        type: Boolean,\n        default: true\n      }\n    },\n    created() {\n      // 1.查询对象实例的字段\n      getUserDefinedQueryField({ tableName: this.tableName }).then(response => {\n        // 排除掉fieldOptions中excludeFieldArr中的\n        response.data.forEach((obj) => {\n          if (this.excludeFieldArr.indexOf(obj.fieldName) === -1) {\n            this.fieldOptions.push(obj)\n          }\n        })\n      })\n      // 2.查询保存的自定义查询条件\n      this.listUserDefinedQuery()\n\n      // 3.过滤条件匹配Options\n      this.getDicts('filter_condition').then(response => {\n        this.filterConditionOptions = response.data\n      })\n      // 4.字段连接条件Options\n      this.getDicts('field_connect_datetime_int_bigint').then(response => {\n        this.fieldConnectDatetimeIntBigintOptions = response.data\n      })\n      this.getDicts('field_connect_char').then(response => {\n        this.fieldConnectCharOptions = response.data\n      })\n      this.getDicts('field_connect_varchar').then(response => {\n        this.fieldConnectVarcharOptions = response.data\n      })\n    },\n    methods: {\n      // 1.增加一行\n      addRow() {\n        this.queryParams.queryRows.push({\n          fieldName: '',\n          fieldConnect: 'eq',\n          fieldValue: '',\n          fieldType: '',\n          type: 'input',\n          fieldDictOptions: []\n        })\n      },\n      // 2.减少一行\n      delRow(index) {\n        this.queryParams.queryRows.splice(index, 1)\n        if (this.queryParams.queryRows.length === 0) {\n          this.addRow()\n        }\n      },\n      // 3.查询字段下拉框改变\n      fieldChange(item, index) {\n        this.queryParams.queryRows[index].fieldValue = ''\n        this.queryParams.queryRows[index].fieldDictOptions = []\n        if (item.fieldName === '') {\n          this.queryParams.queryRows[index].fieldType = ''\n          this.queryParams.queryRows[index].type = 'input'\n          this.queryParams.queryRows[index].fieldConnect = 'eq'\n          return\n        }\n        // 查找出选中的字段所有属性\n        this.fieldOptions.forEach((obj) => {\n          if (obj.fieldName === item.fieldName) {\n            this.queryParams.queryRows[index].fieldType = obj.fieldType\n            if (obj.fieldType === 'datetime') {\n              this.queryParams.queryRows[index].type = 'datetime'\n            } else if (obj.fieldType === 'int' || obj.fieldType === 'bigint') {\n              this.queryParams.queryRows[index].type = 'number'\n            } else {\n              // 使用临时变量temp来解决时间组件和下拉组件向下拉组件过渡时出现输入框\n              let temp = 0\n              // 从字典中获取Options的自定义查询字段数组\n              for (let [key, value] of Object.entries(this.dictFieldObj)) {\n                if (key === item.fieldName) {\n                  temp++\n                  this.getDicts(value).then(response => {\n                    if (this.dictCheckboxArr.indexOf(item.fieldName) !== -1) {\n                      this.queryParams.queryRows[index].fieldConnect = 'like'\n                      this.queryParams.queryRows[index].type = 'dict_checkbox'\n                    } else {\n                      this.queryParams.queryRows[index].type = 'dict'\n                    }\n                    this.queryParams.queryRows[index].fieldDictOptions = response.data\n                  })\n                }\n              }\n              if (temp === 0) {\n                this.queryParams.queryRows[index].type = 'input'\n              }\n            }\n          }\n        })\n      },\n      // 4.重置查询\n      resetQuery() {\n        this.queryParams.queryRows = [{\n          fieldName: '',\n          fieldConnect: '=',\n          fieldValue: '',\n          fieldType: '',\n          type: 'input',\n          fieldDictOptions: []\n        }]\n        this.handleQuery()\n      },\n      // 5.搜索查询-自定义查询获取业务数据\n      handleQuery() {\n        userDefinedQueryDataList(this.queryParams).then(response => {\n          this.$emit('refreshData', response)\n        })\n      },\n      // 6.打开自定义查询\n      openSaveUserDefinedQueryDialog() {\n        this.userDefinedQueryForm.queryName = ''\n        this.userDefinedQueryDialog = true\n      },\n      // 7.保存自定义查询\n      saveUserDefinedQuery(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            this.userDefinedQueryForm.filterCondition = this.queryParams.filterCondition\n            this.userDefinedQueryForm.queryRows = JSON.stringify(this.queryParams.queryRows)\n            addUserDefinedQuery(this.userDefinedQueryForm).then(response => {\n              this.$message({\n                message: '保存成功',\n                type: 'success'\n              })\n              this.userDefinedQueryDialog = false\n              // 保存完成之后执行查询\n              this.listUserDefinedQuery()\n            })\n          } else {\n            return false\n          }\n        })\n      },\n      // 8.查询保存的自定义查询条件\n      listUserDefinedQuery() {\n        listUserDefinedQuery({ queryIndex: this.queryIndex }).then(response => {\n          this.userDefinedQueryData = response.data\n        })\n      },\n      // 9.右侧自定义查询表格某一行被点击时出发 渲染左侧数据\n      rowClick(row) {\n        this.queryParams.filterCondition = row.filterCondition\n        this.queryParams.queryRows = JSON.parse(row.queryRows)\n      },\n      // 10.删除自定义查询\n      delUserDefinedQuery(row) {\n        const queryIds = row.queryId\n        this.$confirm('是否确认删除用户编号为\"' + queryIds + '\"的数据项?', '警告', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function() {\n          return delUserDefinedQuery(queryIds)\n        }).then(() => {\n          // 删除完成之后执行查询\n          this.listUserDefinedQuery()\n          this.msgSuccess('删除成功')\n        }).catch(() => {\n        })\n      }\n    }\n  }\n</script>\n\n"]}]}