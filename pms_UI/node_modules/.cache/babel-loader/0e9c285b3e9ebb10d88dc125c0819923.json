{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hrp\\zjry-pms-ui\\src\\components\\UserDefinedQuery\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\components\\UserDefinedQuery\\index.vue","mtime":1682043102592},{"path":"D:\\hrp\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi9ocnAvempyeS1wbXMtdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIikuZGVmYXVsdDsKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnZhciBfc2xpY2VkVG9BcnJheTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkQ6L2hycC96anJ5LXBtcy11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzIikpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5lbnRyaWVzLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyIpOwp2YXIgX3VzZXJEZWZpbmVkUXVlcnkgPSByZXF1aXJlKCJAL2FwaS9zeXN0ZW0vdXNlckRlZmluZWRRdWVyeSIpOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQgPSB7CiAgbmFtZTogJ3VzZXJEZWZpbmVkUXVlcnknLAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDmn6Xor6Llj4LmlbAKICAgICAgcXVlcnlQYXJhbXM6IHsKICAgICAgICB0YWJsZU5hbWU6IHRoaXMudGFibGVOYW1lLAogICAgICAgIC8v6Ieq5a6a5LmJ5p+l6K+i6KGo5ZCNCiAgICAgICAgcGFnZU51bTogdGhpcy5wYWdlTnVtLAogICAgICAgIHBhZ2VTaXplOiB0aGlzLnBhZ2VTaXplLAogICAgICAgIGNoZWNrRGVsRmxhZzogdGhpcy5jaGVja0RlbEZsYWcsCiAgICAgICAgLy8g5piv5ZCm5YC85p+l6K+iZGVsX2ZsYWc9MOeahOaVsOaNrgogICAgICAgIGZpbHRlckNvbmRpdGlvbjogJ2FuZCcsCiAgICAgICAgLy/ov4fmu6TmnaHku7bljLnphY0KICAgICAgICBxdWVyeVJvd3M6IFt7CiAgICAgICAgICBmaWVsZE5hbWU6ICcnLAogICAgICAgICAgLy/lrZfmrrXlkI0KICAgICAgICAgIGZpZWxkQ29ubmVjdDogJ2VxJywKICAgICAgICAgIC8v5a2X5q616L+e5o6l56ymCiAgICAgICAgICBmaWVsZFZhbHVlOiAnJywKICAgICAgICAgIC8v5a2X5q615YC8CiAgICAgICAgICBmaWVsZFR5cGU6ICcnLAogICAgICAgICAgLy/lrZfmrrXnsbvlnosKICAgICAgICAgIHR5cGU6ICdpbnB1dCcsCiAgICAgICAgICAvL+Wtl+espuS4sui+k+WFpeahhuOAgeaVsOWAvOi+k+WFpeahhuOAgeS4i+aLieahhuOAgeaIluiAheaXtumXtOe7hOS7tgogICAgICAgICAgZmllbGREaWN0T3B0aW9uczogW10gLy/lrZfmrrXlrZflhbhPcHRpb25zCiAgICAgICAgfV0KICAgICAgfSwKCiAgICAgIC8vIOi/h+a7pOadoeS7tuWMuemFjU9wdGlvbnMKICAgICAgZmlsdGVyQ29uZGl0aW9uT3B0aW9uczogW10sCiAgICAgIC8vIOWPr+afpeivouWtl+autU9wdGlvbnMKICAgICAgZmllbGRPcHRpb25zOiBbXSwKICAgICAgLy8g5a2X5q616L+e5o6lT3B0aW9ucwogICAgICBmaWVsZENvbm5lY3REYXRldGltZUludEJpZ2ludE9wdGlvbnM6IFtdLAogICAgICBmaWVsZENvbm5lY3RDaGFyT3B0aW9uczogW10sCiAgICAgIGZpZWxkQ29ubmVjdFZhcmNoYXJPcHRpb25zOiBbXSwKICAgICAgZmllbGRDb25uZWN0Q2hhckNoZWNrYm94T3B0aW9uczogW3sKICAgICAgICBkaWN0VmFsdWU6ICdsaWtlJywKICAgICAgICBkaWN0TGFiZWw6ICfljIXlkKsnCiAgICAgIH1dLAogICAgICAvLyBjaGFy57G75Z6L5a2X5YW4T3B0aW9ucwogICAgICBmaWVsZERpY3RPcHRpb25zOiBbXSwKICAgICAgLy8gZmllbGTlr7nosaHkuI5xdWVyeUlk5peg55So77yM5Y+q5piv5Li65LqG6Ziy5q2i5Luj56CB5Ye6546w5rOi5rWq57q/CiAgICAgIGZpZWxkOiB7CiAgICAgICAgZmllbGROYW1lOiAnJywKICAgICAgICBmaWVsZFR5cGU6ICcnLAogICAgICAgIGZpZWxkTGFiZWw6ICcnCiAgICAgIH0sCiAgICAgIHF1ZXJ5SWQ6ICcnLAogICAgICAvLyDkv53lrZjnmoTmn6Xor6J0YWJsZeaVsOaNrgogICAgICB1c2VyRGVmaW5lZFF1ZXJ5RGF0YTogW10sCiAgICAgIC8vIOiHquWumuS5ieafpeivouS/neWtmERpYWxvZwogICAgICB1c2VyRGVmaW5lZFF1ZXJ5RGlhbG9nOiBmYWxzZSwKICAgICAgLy8g5b6F5L+d5a2Y55qE6Ieq5a6a5LmJ5p+l6K+i6KGo5Y2VCiAgICAgIHVzZXJEZWZpbmVkUXVlcnlGb3JtOiB7CiAgICAgICAgcXVlcnlOYW1lOiAnJywKICAgICAgICBxdWVyeUluZGV4OiB0aGlzLnF1ZXJ5SW5kZXgsCiAgICAgICAgZmlsdGVyQ29uZGl0aW9uOiAnJywKICAgICAgICBxdWVyeVJvd3M6ICcnCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleagoemqjAogICAgICBydWxlczogewogICAgICAgIHF1ZXJ5TmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeiHquWumuS5ieafpeivouWQjeensCcsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIC8vIOaYr+WQpuWxleekuuiHquWumuS5ieafpeivogogICAgc2hvd1VzZXJEZWZpbmVkUXVlcnk6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICAvLyDoh6rlrprkuYnmn6Xor6LooajnmoTooajlkI0KICAgIHRhYmxlTmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgLy8g6Ieq5a6a5LmJ5p+l6K+i57Si5byVCiAgICBxdWVyeUluZGV4OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvLyDkuI3pnIDopoHoh6rlrprkuYnmn6Xor6LnmoTlrZfmrrXmlbDnu4QKICAgIGV4Y2x1ZGVGaWVsZEFycjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogW10KICAgIH0sCiAgICAvLyDlpJrpgInmoYbov57mjqXnrKblj6rog73pgInmi6nljIXlkKsKICAgIGRpY3RDaGVja2JveEFycjogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogW10KICAgIH0sCiAgICAvLyDpnIDopoHku47lrZflhbjkuK3ojrflj5ZPcHRpb25z55qE6Ieq5a6a5LmJ5p+l6K+i5a2X5q615a+56LGhCiAgICBkaWN0RmllbGRPYmo6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiB7fQogICAgfSwKICAgIC8vIOWIhumhteWPguaVsAogICAgcGFnZU51bTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBwYWdlU2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEwCiAgICB9LAogICAgLy8g5piv5ZCm5re75YqgZGVsX2ZsYWc9MOS9nOS4uuafpeivouadoeS7tgogICAgY2hlY2tEZWxGbGFnOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgLy8gMS7mn6Xor6Llr7nosaHlrp7kvovnmoTlrZfmrrUKICAgICgwLCBfdXNlckRlZmluZWRRdWVyeS5nZXRVc2VyRGVmaW5lZFF1ZXJ5RmllbGQpKHsKICAgICAgdGFibGVOYW1lOiB0aGlzLnRhYmxlTmFtZQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgLy8g5o6S6Zmk5o6JZmllbGRPcHRpb25z5LitZXhjbHVkZUZpZWxkQXJy5Lit55qECiAgICAgIHJlc3BvbnNlLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgaWYgKF90aGlzLmV4Y2x1ZGVGaWVsZEFyci5pbmRleE9mKG9iai5maWVsZE5hbWUpID09PSAtMSkgewogICAgICAgICAgX3RoaXMuZmllbGRPcHRpb25zLnB1c2gob2JqKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSk7CiAgICAvLyAyLuafpeivouS/neWtmOeahOiHquWumuS5ieafpeivouadoeS7tgogICAgdGhpcy5saXN0VXNlckRlZmluZWRRdWVyeSgpOwoKICAgIC8vIDMu6L+H5ruk5p2h5Lu25Yy56YWNT3B0aW9ucwogICAgdGhpcy5nZXREaWN0cygnZmlsdGVyX2NvbmRpdGlvbicpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLmZpbHRlckNvbmRpdGlvbk9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgICAvLyA0LuWtl+autei/nuaOpeadoeS7tk9wdGlvbnMKICAgIHRoaXMuZ2V0RGljdHMoJ2ZpZWxkX2Nvbm5lY3RfZGF0ZXRpbWVfaW50X2JpZ2ludCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLmZpZWxkQ29ubmVjdERhdGV0aW1lSW50QmlnaW50T3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICB9KTsKICAgIHRoaXMuZ2V0RGljdHMoJ2ZpZWxkX2Nvbm5lY3RfY2hhcicpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLmZpZWxkQ29ubmVjdENoYXJPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogICAgdGhpcy5nZXREaWN0cygnZmllbGRfY29ubmVjdF92YXJjaGFyJykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgX3RoaXMuZmllbGRDb25uZWN0VmFyY2hhck9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyAxLuWinuWKoOS4gOihjAogICAgYWRkUm93OiBmdW5jdGlvbiBhZGRSb3coKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbXMucXVlcnlSb3dzLnB1c2goewogICAgICAgIGZpZWxkTmFtZTogJycsCiAgICAgICAgZmllbGRDb25uZWN0OiAnZXEnLAogICAgICAgIGZpZWxkVmFsdWU6ICcnLAogICAgICAgIGZpZWxkVHlwZTogJycsCiAgICAgICAgdHlwZTogJ2lucHV0JywKICAgICAgICBmaWVsZERpY3RPcHRpb25zOiBbXQogICAgICB9KTsKICAgIH0sCiAgICAvLyAyLuWHj+WwkeS4gOihjAogICAgZGVsUm93OiBmdW5jdGlvbiBkZWxSb3coaW5kZXgpIHsKICAgICAgdGhpcy5xdWVyeVBhcmFtcy5xdWVyeVJvd3Muc3BsaWNlKGluZGV4LCAxKTsKICAgICAgaWYgKHRoaXMucXVlcnlQYXJhbXMucXVlcnlSb3dzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuYWRkUm93KCk7CiAgICAgIH0KICAgIH0sCiAgICAvLyAzLuafpeivouWtl+auteS4i+aLieahhuaUueWPmAogICAgZmllbGRDaGFuZ2U6IGZ1bmN0aW9uIGZpZWxkQ2hhbmdlKGl0ZW0sIGluZGV4KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnF1ZXJ5Um93c1tpbmRleF0uZmllbGRWYWx1ZSA9ICcnOwogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnF1ZXJ5Um93c1tpbmRleF0uZmllbGREaWN0T3B0aW9ucyA9IFtdOwogICAgICBpZiAoaXRlbS5maWVsZE5hbWUgPT09ICcnKSB7CiAgICAgICAgdGhpcy5xdWVyeVBhcmFtcy5xdWVyeVJvd3NbaW5kZXhdLmZpZWxkVHlwZSA9ICcnOwogICAgICAgIHRoaXMucXVlcnlQYXJhbXMucXVlcnlSb3dzW2luZGV4XS50eXBlID0gJ2lucHV0JzsKICAgICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnF1ZXJ5Um93c1tpbmRleF0uZmllbGRDb25uZWN0ID0gJ2VxJzsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgLy8g5p+l5om+5Ye66YCJ5Lit55qE5a2X5q615omA5pyJ5bGe5oCnCiAgICAgIHRoaXMuZmllbGRPcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKG9iaikgewogICAgICAgIGlmIChvYmouZmllbGROYW1lID09PSBpdGVtLmZpZWxkTmFtZSkgewogICAgICAgICAgX3RoaXMyLnF1ZXJ5UGFyYW1zLnF1ZXJ5Um93c1tpbmRleF0uZmllbGRUeXBlID0gb2JqLmZpZWxkVHlwZTsKICAgICAgICAgIGlmIChvYmouZmllbGRUeXBlID09PSAnZGF0ZXRpbWUnKSB7CiAgICAgICAgICAgIF90aGlzMi5xdWVyeVBhcmFtcy5xdWVyeVJvd3NbaW5kZXhdLnR5cGUgPSAnZGF0ZXRpbWUnOwogICAgICAgICAgfSBlbHNlIGlmIChvYmouZmllbGRUeXBlID09PSAnaW50JyB8fCBvYmouZmllbGRUeXBlID09PSAnYmlnaW50JykgewogICAgICAgICAgICBfdGhpczIucXVlcnlQYXJhbXMucXVlcnlSb3dzW2luZGV4XS50eXBlID0gJ251bWJlcic7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDkvb/nlKjkuLTml7blj5jph490ZW1w5p2l6Kej5Yaz5pe26Ze057uE5Lu25ZKM5LiL5ouJ57uE5Lu25ZCR5LiL5ouJ57uE5Lu26L+H5rih5pe25Ye6546w6L6T5YWl5qGGCiAgICAgICAgICAgIHZhciB0ZW1wID0gMDsKICAgICAgICAgICAgLy8g5LuO5a2X5YW45Lit6I635Y+WT3B0aW9uc+eahOiHquWumuS5ieafpeivouWtl+auteaVsOe7hAogICAgICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9PYmplY3QkZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKF90aGlzMi5kaWN0RmllbGRPYmopOyBfaSA8IF9PYmplY3QkZW50cmllcy5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgICB2YXIgX09iamVjdCRlbnRyaWVzJF9pID0gKDAsIF9zbGljZWRUb0FycmF5Mi5kZWZhdWx0KShfT2JqZWN0JGVudHJpZXNbX2ldLCAyKSwKICAgICAgICAgICAgICAgIGtleSA9IF9PYmplY3QkZW50cmllcyRfaVswXSwKICAgICAgICAgICAgICAgIHZhbHVlID0gX09iamVjdCRlbnRyaWVzJF9pWzFdOwogICAgICAgICAgICAgIGlmIChrZXkgPT09IGl0ZW0uZmllbGROYW1lKSB7CiAgICAgICAgICAgICAgICB0ZW1wKys7CiAgICAgICAgICAgICAgICBfdGhpczIuZ2V0RGljdHModmFsdWUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIGlmIChfdGhpczIuZGljdENoZWNrYm94QXJyLmluZGV4T2YoaXRlbS5maWVsZE5hbWUpICE9PSAtMSkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMi5xdWVyeVBhcmFtcy5xdWVyeVJvd3NbaW5kZXhdLmZpZWxkQ29ubmVjdCA9ICdsaWtlJzsKICAgICAgICAgICAgICAgICAgICBfdGhpczIucXVlcnlQYXJhbXMucXVlcnlSb3dzW2luZGV4XS50eXBlID0gJ2RpY3RfY2hlY2tib3gnOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIF90aGlzMi5xdWVyeVBhcmFtcy5xdWVyeVJvd3NbaW5kZXhdLnR5cGUgPSAnZGljdCc7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3RoaXMyLnF1ZXJ5UGFyYW1zLnF1ZXJ5Um93c1tpbmRleF0uZmllbGREaWN0T3B0aW9ucyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKHRlbXAgPT09IDApIHsKICAgICAgICAgICAgICBfdGhpczIucXVlcnlQYXJhbXMucXVlcnlSb3dzW2luZGV4XS50eXBlID0gJ2lucHV0JzsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8gNC7ph43nva7mn6Xor6IKICAgIHJlc2V0UXVlcnk6IGZ1bmN0aW9uIHJlc2V0UXVlcnkoKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbXMucXVlcnlSb3dzID0gW3sKICAgICAgICBmaWVsZE5hbWU6ICcnLAogICAgICAgIGZpZWxkQ29ubmVjdDogJz0nLAogICAgICAgIGZpZWxkVmFsdWU6ICcnLAogICAgICAgIGZpZWxkVHlwZTogJycsCiAgICAgICAgdHlwZTogJ2lucHV0JywKICAgICAgICBmaWVsZERpY3RPcHRpb25zOiBbXQogICAgICB9XTsKICAgICAgdGhpcy5oYW5kbGVRdWVyeSgpOwogICAgfSwKICAgIC8vIDUu5pCc57Si5p+l6K+iLeiHquWumuS5ieafpeivouiOt+WPluS4muWKoeaVsOaNrgogICAgaGFuZGxlUXVlcnk6IGZ1bmN0aW9uIGhhbmRsZVF1ZXJ5KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgKDAsIF91c2VyRGVmaW5lZFF1ZXJ5LnVzZXJEZWZpbmVkUXVlcnlEYXRhTGlzdCkodGhpcy5xdWVyeVBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczMuJGVtaXQoJ3JlZnJlc2hEYXRhJywgcmVzcG9uc2UpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyA2LuaJk+W8gOiHquWumuS5ieafpeivogogICAgb3BlblNhdmVVc2VyRGVmaW5lZFF1ZXJ5RGlhbG9nOiBmdW5jdGlvbiBvcGVuU2F2ZVVzZXJEZWZpbmVkUXVlcnlEaWFsb2coKSB7CiAgICAgIHRoaXMudXNlckRlZmluZWRRdWVyeUZvcm0ucXVlcnlOYW1lID0gJyc7CiAgICAgIHRoaXMudXNlckRlZmluZWRRdWVyeURpYWxvZyA9IHRydWU7CiAgICB9LAogICAgLy8gNy7kv53lrZjoh6rlrprkuYnmn6Xor6IKICAgIHNhdmVVc2VyRGVmaW5lZFF1ZXJ5OiBmdW5jdGlvbiBzYXZlVXNlckRlZmluZWRRdWVyeShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUoZnVuY3Rpb24gKHZhbGlkKSB7CiAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICBfdGhpczQudXNlckRlZmluZWRRdWVyeUZvcm0uZmlsdGVyQ29uZGl0aW9uID0gX3RoaXM0LnF1ZXJ5UGFyYW1zLmZpbHRlckNvbmRpdGlvbjsKICAgICAgICAgIF90aGlzNC51c2VyRGVmaW5lZFF1ZXJ5Rm9ybS5xdWVyeVJvd3MgPSBKU09OLnN0cmluZ2lmeShfdGhpczQucXVlcnlQYXJhbXMucXVlcnlSb3dzKTsKICAgICAgICAgICgwLCBfdXNlckRlZmluZWRRdWVyeS5hZGRVc2VyRGVmaW5lZFF1ZXJ5KShfdGhpczQudXNlckRlZmluZWRRdWVyeUZvcm0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgbWVzc2FnZTogJ+S/neWtmOaIkOWKnycsCiAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfdGhpczQudXNlckRlZmluZWRRdWVyeURpYWxvZyA9IGZhbHNlOwogICAgICAgICAgICAvLyDkv53lrZjlrozmiJDkuYvlkI7miafooYzmn6Xor6IKICAgICAgICAgICAgX3RoaXM0Lmxpc3RVc2VyRGVmaW5lZFF1ZXJ5KCk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8gOC7mn6Xor6Lkv53lrZjnmoToh6rlrprkuYnmn6Xor6LmnaHku7YKICAgIGxpc3RVc2VyRGVmaW5lZFF1ZXJ5OiBmdW5jdGlvbiBsaXN0VXNlckRlZmluZWRRdWVyeSgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgICgwLCBfdXNlckRlZmluZWRRdWVyeS5saXN0VXNlckRlZmluZWRRdWVyeSkoewogICAgICAgIHF1ZXJ5SW5kZXg6IHRoaXMucXVlcnlJbmRleAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzNS51c2VyRGVmaW5lZFF1ZXJ5RGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIDku5Y+z5L6n6Ieq5a6a5LmJ5p+l6K+i6KGo5qC85p+Q5LiA6KGM6KKr54K55Ye75pe25Ye65Y+RIOa4suafk+W3puS+p+aVsOaNrgogICAgcm93Q2xpY2s6IGZ1bmN0aW9uIHJvd0NsaWNrKHJvdykgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLmZpbHRlckNvbmRpdGlvbiA9IHJvdy5maWx0ZXJDb25kaXRpb247CiAgICAgIHRoaXMucXVlcnlQYXJhbXMucXVlcnlSb3dzID0gSlNPTi5wYXJzZShyb3cucXVlcnlSb3dzKTsKICAgIH0sCiAgICAvLyAxMC7liKDpmaToh6rlrprkuYnmn6Xor6IKICAgIGRlbFVzZXJEZWZpbmVkUXVlcnk6IGZ1bmN0aW9uIGRlbFVzZXJEZWZpbmVkUXVlcnkocm93KSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICB2YXIgcXVlcnlJZHMgPSByb3cucXVlcnlJZDsKICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm56Gu6K6k5Yig6Zmk55So5oi357yW5Y+35Li6IicgKyBxdWVyeUlkcyArICci55qE5pWw5o2u6aG5PycsICforablkYonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gKDAsIF91c2VyRGVmaW5lZFF1ZXJ5LmRlbFVzZXJEZWZpbmVkUXVlcnkpKHF1ZXJ5SWRzKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8g5Yig6Zmk5a6M5oiQ5LmL5ZCO5omn6KGM5p+l6K+iCiAgICAgICAgX3RoaXM2Lmxpc3RVc2VyRGVmaW5lZFF1ZXJ5KCk7CiAgICAgICAgX3RoaXM2Lm1zZ1N1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICB9CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":";;;;;;;;;;;;;;AAuGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAIA;EACAA;EACAC;EACAC;IACA;MACA;MACAC;QACAC;QAAA;QACAC;QACAC;QACAC;QAAA;QACAC;QAAA;QACAC;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;QACA;MACA;;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;QAAAC;QAAAC;MAAA;MACA;MACAR;MACA;MACAS;QAAAd;QAAAG;QAAAY;MAAA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;QAAAC;QAAAC;QAAAvB;QAAAC;MAAA;MACA;MACAuB;QACAF,YACA;UAAAG;UAAAC;UAAAC;QAAA;MAEA;IACA;EACA;EACAC;IACA;IACAC;MACAvB;MACAwB;IACA;IACA;IACAlC;MACAU;MACAwB;IACA;IACA;IACAP;MACAjB;MACAwB;IACA;IACA;IACAC;MACAzB;MACAwB;IACA;IACA;IACAE;MACA1B;MACAwB;IACA;IACA;IACAG;MACA3B;MACAwB;IACA;IACA;IACAjC;MACAS;MACAwB;IACA;IACAhC;MACAQ;MACAwB;IACA;IACA;IACA/B;MACAO;MACAwB;IACA;EACA;EACAI;IAAA;IACA;IACA;MAAAtC;IAAA;MACA;MACAuC;QACA;UACA;QACA;MACA;IACA;IACA;IACA;;IAEA;IACA;MACA;IACA;IACA;IACA;MACA;IACA;IACA;MACA;IACA;IACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MACA;QACAnC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IACA;IACA+B;MACA;MACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;QACA;UACA;UACA;YACA;UACA;YACA;UACA;YACA;YACA;YACA;YACA;cAAA;gBAAAC;gBAAAC;cACA;gBACAC;gBACA;kBACA;oBACA;oBACA;kBACA;oBACA;kBACA;kBACA;gBACA;cACA;YACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACAzC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;IACA;IACAqC;MAAA;MACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;QACA;UACA;UACA;UACA;YACA;cACApB;cACApB;YACA;YACA;YACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;IACAyC;MAAA;MACA;QAAAxB;MAAA;QACA;MACA;IACA;IACA;IACAyB;MACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;QACAC;QACAC;QACA7C;MACA;QACA;MACA;QACA;QACA;QACA;MACA,sBACA;IACA;EACA;AACA;AAAA","names":["name","components","data","queryParams","tableName","pageNum","pageSize","checkDelFlag","filterCondition","queryRows","fieldName","fieldConnect","fieldValue","fieldType","type","fieldDictOptions","filterConditionOptions","fieldOptions","fieldConnectDatetimeIntBigintOptions","fieldConnectCharOptions","fieldConnectVarcharOptions","fieldConnectCharCheckboxOptions","dictValue","dictLabel","field","fieldLabel","queryId","userDefinedQueryData","userDefinedQueryDialog","userDefinedQueryForm","queryName","queryIndex","rules","required","message","trigger","props","showUserDefinedQuery","default","excludeFieldArr","dictCheckboxArr","dictFieldObj","created","response","methods","addRow","delRow","fieldChange","key","value","temp","resetQuery","handleQuery","openSaveUserDefinedQueryDialog","saveUserDefinedQuery","listUserDefinedQuery","rowClick","delUserDefinedQuery","confirmButtonText","cancelButtonText"],"sourceRoot":"src/components/UserDefinedQuery","sources":["index.vue"],"sourcesContent":["<template>\n  <div :inline=\"true\" v-show=\"showUserDefinedQuery\" style=\"border:1px dashed #000;margin-bottom: 20px;\">\n    <el-row :gutter=\"24\">\n      <el-col :span=\"18\">\n        <div v-for=\"(item, index) in queryParams.queryRows\" :key=\"index\" style=\"margin: 10px\">\n          <el-row :gutter=\"24\">\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldName\"\n                         @change=\"fieldChange(item,index)\" placeholder=\"请选择查询字段\">\n                <el-option v-for=\"field in fieldOptions\" :key=\"field.fieldName\" :label=\"field.fieldLabel\"\n                           :value=\"field.fieldName\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\"\n                         v-if=\"item.type === 'number' || item.type === 'datetime'\">\n                <el-option v-for=\"dict in fieldConnectDatetimeIntBigintOptions\" :key=\"dict.dictValue\"\n                           :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'dict'\">\n                <el-option v-for=\"dict in fieldConnectCharOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'dict_checkbox'\">\n                <el-option v-for=\"dict in fieldConnectCharCheckboxOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-select clearable size=\"small\" v-model=\"item.fieldConnect\" v-if=\"item.type === 'input'\">\n                <el-option v-for=\"dict in fieldConnectVarcharOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-select clearable size=\"small\" v-model=\"item.fieldValue\" placeholder=\"请选择值\"\n                         v-if=\"item.type === 'dict' || item.type === 'dict_checkbox' \">\n                <el-option v-for=\"dict in item.fieldDictOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n              <el-input placeholder=\"请输入值\" clearable size=\"small\" v-model=\"item.fieldValue\"\n                        v-if=\"item.type === 'input'\"></el-input>\n              <!-- TODO 校验只能输入数字 -->\n              <el-input placeholder=\"请输入数值\" clearable size=\"small\" v-model=\"item.fieldValue\"\n                        v-if=\"item.type === 'number'\"></el-input>\n              <el-date-picker type=\"date\" v-model=\"item.fieldValue\" value-format=\"yyyy-MM-dd\"\n                              placeholder=\"请选择日期\" v-if=\"item.type === 'datetime'\"></el-date-picker>\n            </el-col>\n            <el-col :span=\"6\">\n              <el-button icon=\"el-icon-plus\" @click=\"addRow\"/>\n              <el-button icon=\"el-icon-delete\" @click=\"delRow(index)\"/>\n            </el-col>\n          </el-row>\n        </div>\n        <div style=\"margin: 10px\">\n          <el-row :gutter=\"24\">\n            <el-col :span=\"16\">\n              <a>过滤条件匹配： </a>\n              <el-select clearable size=\"small\" v-model=\"queryParams.filterCondition\">\n                <el-option v-for=\"dict in filterConditionOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                           :value=\"dict.dictValue\"/>\n              </el-select>\n            </el-col>\n            <el-col :span=\"8\">\n              <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery()\">搜索</el-button>\n              <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery()\">重置</el-button>\n              <el-button type=\"info\" icon=\"el-icon-plus\" size=\"mini\" @click=\"openSaveUserDefinedQueryDialog\">保存查询条件\n              </el-button>\n              <el-dialog :visible.sync=\"userDefinedQueryDialog\" :close-on-click-modal=\"true\" title=\"自定义查询名称\"\n                         append-to-body width=\"500px\">\n                <el-form ref=\"form\" :model=\"userDefinedQueryForm\" :rules=\"rules\" label-width=\"150px\">\n                  <el-row>\n                    <el-col :span=\"18\">\n                      <el-form-item label=\"自定义查询名称\" prop=\"queryName\">\n                        <el-input v-model=\"userDefinedQueryForm.queryName\" placeholder=\"请输入自定义查询名称\"/>\n                      </el-form-item>\n                    </el-col>\n                  </el-row>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center\">\n                  <el-button type=\"primary\" @click=\"saveUserDefinedQuery('form')\">确定</el-button>\n                </div>\n              </el-dialog>\n            </el-col>\n          </el-row>\n        </div>\n      </el-col>\n      <el-col :span=\"6\">\n        <div style=\"margin: 10px\">\n          <el-table :data=\"userDefinedQueryData\" style=\"width: 100%\" @row-click=\"rowClick\">\n            <el-table-column prop=\"queryName\" label=\"保存的查询\" width=\"240px\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"60px\">\n              <template slot-scope=\"scope\">\n                <el-button icon=\"el-icon-delete\" @click=\"delUserDefinedQuery(scope.row)\"/>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n  import {\n    getUserDefinedQueryField, userDefinedQueryDataList, addUserDefinedQuery, listUserDefinedQuery, delUserDefinedQuery\n  } from '@/api/system/userDefinedQuery'\n\n  export default {\n    name: 'userDefinedQuery',\n    components: {},\n    data() {\n      return {\n        // 查询参数\n        queryParams: {\n          tableName: this.tableName, //自定义查询表名\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          checkDelFlag: this.checkDelFlag, // 是否值查询del_flag=0的数据\n          filterCondition: 'and', //过滤条件匹配\n          queryRows: [{\n            fieldName: '', //字段名\n            fieldConnect: 'eq', //字段连接符\n            fieldValue: '', //字段值\n            fieldType: '', //字段类型\n            type: 'input', //字符串输入框、数值输入框、下拉框、或者时间组件\n            fieldDictOptions: [] //字段字典Options\n          }]\n        },\n        // 过滤条件匹配Options\n        filterConditionOptions: [],\n        // 可查询字段Options\n        fieldOptions: [],\n        // 字段连接Options\n        fieldConnectDatetimeIntBigintOptions: [],\n        fieldConnectCharOptions: [],\n        fieldConnectVarcharOptions: [],\n        fieldConnectCharCheckboxOptions: [{ dictValue: 'like', dictLabel: '包含' }],\n        // char类型字典Options\n        fieldDictOptions: [],\n        // field对象与queryId无用，只是为了防止代码出现波浪线\n        field: { fieldName: '', fieldType: '', fieldLabel: '' },\n        queryId: '',\n        // 保存的查询table数据\n        userDefinedQueryData: [],\n        // 自定义查询保存Dialog\n        userDefinedQueryDialog: false,\n        // 待保存的自定义查询表单\n        userDefinedQueryForm: { queryName: '', queryIndex: this.queryIndex, filterCondition: '', queryRows: '' },\n        // 表单校验\n        rules: {\n          queryName: [\n            { required: true, message: '请输入自定义查询名称', trigger: 'blur' }\n          ]\n        }\n      }\n    },\n    props: {\n      // 是否展示自定义查询\n      showUserDefinedQuery: {\n        type: Boolean,\n        default: false\n      },\n      // 自定义查询表的表名\n      tableName: {\n        type: String,\n        default: ''\n      },\n      // 自定义查询索引\n      queryIndex: {\n        type: String,\n        default: ''\n      },\n      // 不需要自定义查询的字段数组\n      excludeFieldArr: {\n        type: Array,\n        default: []\n      },\n      // 多选框连接符只能选择包含\n      dictCheckboxArr: {\n        type: Array,\n        default: []\n      },\n      // 需要从字典中获取Options的自定义查询字段对象\n      dictFieldObj: {\n        type: Object,\n        default: {}\n      },\n      // 分页参数\n      pageNum: {\n        type: Number,\n        default: 1\n      },\n      pageSize: {\n        type: Number,\n        default: 10\n      },\n      // 是否添加del_flag=0作为查询条件\n      checkDelFlag: {\n        type: Boolean,\n        default: true\n      }\n    },\n    created() {\n      // 1.查询对象实例的字段\n      getUserDefinedQueryField({ tableName: this.tableName }).then(response => {\n        // 排除掉fieldOptions中excludeFieldArr中的\n        response.data.forEach((obj) => {\n          if (this.excludeFieldArr.indexOf(obj.fieldName) === -1) {\n            this.fieldOptions.push(obj)\n          }\n        })\n      })\n      // 2.查询保存的自定义查询条件\n      this.listUserDefinedQuery()\n\n      // 3.过滤条件匹配Options\n      this.getDicts('filter_condition').then(response => {\n        this.filterConditionOptions = response.data\n      })\n      // 4.字段连接条件Options\n      this.getDicts('field_connect_datetime_int_bigint').then(response => {\n        this.fieldConnectDatetimeIntBigintOptions = response.data\n      })\n      this.getDicts('field_connect_char').then(response => {\n        this.fieldConnectCharOptions = response.data\n      })\n      this.getDicts('field_connect_varchar').then(response => {\n        this.fieldConnectVarcharOptions = response.data\n      })\n    },\n    methods: {\n      // 1.增加一行\n      addRow() {\n        this.queryParams.queryRows.push({\n          fieldName: '',\n          fieldConnect: 'eq',\n          fieldValue: '',\n          fieldType: '',\n          type: 'input',\n          fieldDictOptions: []\n        })\n      },\n      // 2.减少一行\n      delRow(index) {\n        this.queryParams.queryRows.splice(index, 1)\n        if (this.queryParams.queryRows.length === 0) {\n          this.addRow()\n        }\n      },\n      // 3.查询字段下拉框改变\n      fieldChange(item, index) {\n        this.queryParams.queryRows[index].fieldValue = ''\n        this.queryParams.queryRows[index].fieldDictOptions = []\n        if (item.fieldName === '') {\n          this.queryParams.queryRows[index].fieldType = ''\n          this.queryParams.queryRows[index].type = 'input'\n          this.queryParams.queryRows[index].fieldConnect = 'eq'\n          return\n        }\n        // 查找出选中的字段所有属性\n        this.fieldOptions.forEach((obj) => {\n          if (obj.fieldName === item.fieldName) {\n            this.queryParams.queryRows[index].fieldType = obj.fieldType\n            if (obj.fieldType === 'datetime') {\n              this.queryParams.queryRows[index].type = 'datetime'\n            } else if (obj.fieldType === 'int' || obj.fieldType === 'bigint') {\n              this.queryParams.queryRows[index].type = 'number'\n            } else {\n              // 使用临时变量temp来解决时间组件和下拉组件向下拉组件过渡时出现输入框\n              let temp = 0\n              // 从字典中获取Options的自定义查询字段数组\n              for (let [key, value] of Object.entries(this.dictFieldObj)) {\n                if (key === item.fieldName) {\n                  temp++\n                  this.getDicts(value).then(response => {\n                    if (this.dictCheckboxArr.indexOf(item.fieldName) !== -1) {\n                      this.queryParams.queryRows[index].fieldConnect = 'like'\n                      this.queryParams.queryRows[index].type = 'dict_checkbox'\n                    } else {\n                      this.queryParams.queryRows[index].type = 'dict'\n                    }\n                    this.queryParams.queryRows[index].fieldDictOptions = response.data\n                  })\n                }\n              }\n              if (temp === 0) {\n                this.queryParams.queryRows[index].type = 'input'\n              }\n            }\n          }\n        })\n      },\n      // 4.重置查询\n      resetQuery() {\n        this.queryParams.queryRows = [{\n          fieldName: '',\n          fieldConnect: '=',\n          fieldValue: '',\n          fieldType: '',\n          type: 'input',\n          fieldDictOptions: []\n        }]\n        this.handleQuery()\n      },\n      // 5.搜索查询-自定义查询获取业务数据\n      handleQuery() {\n        userDefinedQueryDataList(this.queryParams).then(response => {\n          this.$emit('refreshData', response)\n        })\n      },\n      // 6.打开自定义查询\n      openSaveUserDefinedQueryDialog() {\n        this.userDefinedQueryForm.queryName = ''\n        this.userDefinedQueryDialog = true\n      },\n      // 7.保存自定义查询\n      saveUserDefinedQuery(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            this.userDefinedQueryForm.filterCondition = this.queryParams.filterCondition\n            this.userDefinedQueryForm.queryRows = JSON.stringify(this.queryParams.queryRows)\n            addUserDefinedQuery(this.userDefinedQueryForm).then(response => {\n              this.$message({\n                message: '保存成功',\n                type: 'success'\n              })\n              this.userDefinedQueryDialog = false\n              // 保存完成之后执行查询\n              this.listUserDefinedQuery()\n            })\n          } else {\n            return false\n          }\n        })\n      },\n      // 8.查询保存的自定义查询条件\n      listUserDefinedQuery() {\n        listUserDefinedQuery({ queryIndex: this.queryIndex }).then(response => {\n          this.userDefinedQueryData = response.data\n        })\n      },\n      // 9.右侧自定义查询表格某一行被点击时出发 渲染左侧数据\n      rowClick(row) {\n        this.queryParams.filterCondition = row.filterCondition\n        this.queryParams.queryRows = JSON.parse(row.queryRows)\n      },\n      // 10.删除自定义查询\n      delUserDefinedQuery(row) {\n        const queryIds = row.queryId\n        this.$confirm('是否确认删除用户编号为\"' + queryIds + '\"的数据项?', '警告', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function() {\n          return delUserDefinedQuery(queryIds)\n        }).then(() => {\n          // 删除完成之后执行查询\n          this.listUserDefinedQuery()\n          this.msgSuccess('删除成功')\n        }).catch(() => {\n        })\n      }\n    }\n  }\n</script>\n\n"]}]}