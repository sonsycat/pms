{"remainingRequest":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\thread-loader\\dist\\cjs.js!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\revenue\\apport\\addEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\HRP_JAVA_pms\\pms_UI\\src\\views\\revenue\\apport\\addEdit.vue","mtime":1693362205847},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\babel.config.js","mtime":1693361824517},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1693362167329},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909992},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"E:\\HRP_JAVA_pms\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgppbXBvcnQgeyByZXNvbHZlR2VuZXJhdGVDaGVjazEsIHJlc29sdmVHZW5lcmF0ZUNoZWNrMiwgcmVzb2x2ZUdlbmVyYXRlMSwgcmVzb2x2ZUdlbmVyYXRlMiwgcmVzb2x2ZUdlbmVyYXRlMywgcmVzb2x2ZUdlbmVyYXRlNCB9IGZyb20gIkAvYXBpL3JldmVudWUvYXBwb3J0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhZGRFZGl0IiwKICBwcm9wczogewogICAgb3BlbjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIG9wZW46IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwpIHsKICAgICAgICB0aGlzLm9wZW5EaWFsb2cgPSB2YWw7CiAgICAgIH0sCiAgICAgIGRlZXA6IHRydWUKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogIuaUtuWFpeaVsOaNrueUn+aIkC3mlLblhaXnlJ/miJAiLAogICAgICBvcGVuRGlhbG9nOiB0aGlzLm9wZW4sCiAgICAgIHVuQWxsb3dBZGQ6IHRydWUsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBwcm9ncmVzc1Nob3c6IGZhbHNlLAogICAgICBhY3Rpdml0aWVzOiBbXSwKICAgICAgcGVyY2VudGFnZTogMCwKICAgICAgLy8g6KGo5Y2V5Y+C5pWwCiAgICAgIGZvcm06IHsKICAgICAgICBjb21wQ29kZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlci5hY2NvdW50SW5mby5kZXB0SWQsCiAgICAgICAgb2NjdXJlVGltZTogJycKICAgICAgfSwKICAgICAgLy8g6KGo5Y2V5qCh6aqMCiAgICAgIHJ1bGVzOiB7fQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RPY2N1cmVUaW1lOiBmdW5jdGlvbiBzZWxlY3RPY2N1cmVUaW1lKHZhbCkgewogICAgICBpZiAoIXZhbCkgewogICAgICAgIHRoaXMudW5BbGxvd0FkZCA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy51bkFsbG93QWRkID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAvLyDlvLnmoYblhbPpl60KICAgIGhhbmRsZURpYWxvZ0Nsb3NlOiBmdW5jdGlvbiBoYW5kbGVEaWFsb2dDbG9zZSgpIHsKICAgICAgdGhpcy4kZW1pdCgiY2FuY2VsIiwgZmFsc2UpOwogICAgfSwKICAgIC8vIOWPlua2iAogICAgY2FuY2VsOiBmdW5jdGlvbiBjYW5jZWwoKSB7CiAgICAgIHRoaXMuJGVtaXQoImNhbmNlbCIsIGZhbHNlKTsKICAgIH0sCiAgICAvKiog5o+Q5Lqk5oyJ6ZKuICovc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdGhpcy4kcmVmc1siZm9ybSJdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICBfdGhpcy5hY3Rpdml0aWVzID0gW107CiAgICAgICAgICBfdGhpcy5wcm9ncmVzc1Nob3cgPSB0cnVlOwogICAgICAgICAgX3RoaXMuc2F2ZVN0ZXBPbmUoX3RoaXMuZm9ybSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zYXZlU3RlcE9uZTEoX3RoaXMuZm9ybSk7CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLnNhdmVTdGVwT25lMihfdGhpcy5mb3JtKTsKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMuc2F2ZVN0ZXBPbmUzKF90aGlzLmZvcm0pOwogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5zYXZlU3RlcFRvdyhfdGhpcy5mb3JtKTsKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMuc2F2ZVN0ZXBUb3cxKF90aGlzLmZvcm0pOwogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBzYXZlU3RlcE9uZTogZnVuY3Rpb24gc2F2ZVN0ZXBPbmUoZGF0YSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNsb3ZlLCByZWplY3QpIHsKICAgICAgICByZXNvbHZlR2VuZXJhdGVDaGVjazEoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgICBfdGhpczIucGVyY2VudGFnZSA9IDE1OwogICAgICAgICAgICBfdGhpczIuYWN0aXZpdGllcy5wdXNoKHsKICAgICAgICAgICAgICBjb250ZW50OiAn6aqM6K+B5piv5ZCm5pyJ5b2T5YmN5pyI5pWw5o2uJywKICAgICAgICAgICAgICB0aW1lc3RhbXA6ICdvaycsCiAgICAgICAgICAgICAgc2l6ZTogJ2xhcmdlJywKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgaWNvbjogJ2VsLWljb24tY2hlY2snLAogICAgICAgICAgICAgIGZsYWc6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJlc2xvdmUoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlamVjdChyZXNwb25zZSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXMyLnBlcmNlbnRhZ2UgPSAxMDsKICAgICAgICAgIF90aGlzMi5hY3Rpdml0aWVzLnB1c2goewogICAgICAgICAgICBjb250ZW50OiAn6aqM6K+B5piv5ZCm5pyJ5b2T5YmN5pyI5pWw5o2uJywKICAgICAgICAgICAgdGltZXN0YW1wOiAnRXJyb3InLAogICAgICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJywKICAgICAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgICAgICBpY29uOiAnZWwtaWNvbi1jbG9zZScsCiAgICAgICAgICAgIGZsYWc6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICAgIHJlamVjdChyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlU3RlcE9uZTE6IGZ1bmN0aW9uIHNhdmVTdGVwT25lMShkYXRhKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc2xvdmUsIHJlamVjdCkgewogICAgICAgIHJlc29sdmVHZW5lcmF0ZUNoZWNrMihkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzMy5wZXJjZW50YWdlID0gMzA7CiAgICAgICAgICAgIF90aGlzMy5hY3Rpdml0aWVzLnB1c2goewogICAgICAgICAgICAgIGNvbnRlbnQ6ICfpqozor4HlvZPliY3mmK/lkKbmnInlr7nlupTmlrnmoYgnLAogICAgICAgICAgICAgIHRpbWVzdGFtcDogJ29rJywKICAgICAgICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBpY29uOiAnZWwtaWNvbi1jaGVjaycsCiAgICAgICAgICAgICAgZmxhZzogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzbG92ZSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczMucGVyY2VudGFnZSA9IDIwOwogICAgICAgICAgX3RoaXMzLmFjdGl2aXRpZXMucHVzaCh7CiAgICAgICAgICAgIGNvbnRlbnQ6ICfpqozor4HlvZPliY3mmK/lkKbmnInlr7nlupTmlrnmoYgnLAogICAgICAgICAgICB0aW1lc3RhbXA6ICdFcnJvcicsCiAgICAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInLAogICAgICAgICAgICBjb2xvcjogInJlZCIsCiAgICAgICAgICAgIGljb246ICdlbC1pY29uLWNsb3NlJywKICAgICAgICAgICAgZmxhZzogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgICAgcmVqZWN0KHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVTdGVwT25lMjogZnVuY3Rpb24gc2F2ZVN0ZXBPbmUyKGRhdGEpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzbG92ZSwgcmVqZWN0KSB7CiAgICAgICAgcmVzb2x2ZUdlbmVyYXRlMShkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzNC5wZXJjZW50YWdlID0gNDU7CiAgICAgICAgICAgIF90aGlzNC5hY3Rpdml0aWVzLnB1c2goewogICAgICAgICAgICAgIGNvbnRlbnQ6ICfpl6jor4rmlLblhaXliIbop6MnLAogICAgICAgICAgICAgIHRpbWVzdGFtcDogJ29rJywKICAgICAgICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBpY29uOiAnZWwtaWNvbi1jaGVjaycsCiAgICAgICAgICAgICAgZmxhZzogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzbG92ZSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczQucGVyY2VudGFnZSA9IDMwOwogICAgICAgICAgX3RoaXM0LmFjdGl2aXRpZXMucHVzaCh7CiAgICAgICAgICAgIGNvbnRlbnQ6ICfpl6jor4rmlLblhaXliIbop6MnLAogICAgICAgICAgICB0aW1lc3RhbXA6ICdFcnJvcicsCiAgICAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInLAogICAgICAgICAgICBjb2xvcjogInJlZCIsCiAgICAgICAgICAgIGljb246ICdlbC1pY29uLWNsb3NlJywKICAgICAgICAgICAgZmxhZzogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgICAgcmVqZWN0KHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVTdGVwT25lMzogZnVuY3Rpb24gc2F2ZVN0ZXBPbmUzKGRhdGEpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzbG92ZSwgcmVqZWN0KSB7CiAgICAgICAgcmVzb2x2ZUdlbmVyYXRlMihkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgIF90aGlzNS5wZXJjZW50YWdlID0gNjA7CiAgICAgICAgICAgIF90aGlzNS5hY3Rpdml0aWVzLnB1c2goewogICAgICAgICAgICAgIGNvbnRlbnQ6ICfpl6jor4rmlLblhaXpmYTliqDliIbop6MnLAogICAgICAgICAgICAgIHRpbWVzdGFtcDogJ29rJywKICAgICAgICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBpY29uOiAnZWwtaWNvbi1jaGVjaycsCiAgICAgICAgICAgICAgZmxhZzogdHJ1ZQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmVzbG92ZSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczUucGVyY2VudGFnZSA9IDQwOwogICAgICAgICAgX3RoaXM1LmFjdGl2aXRpZXMucHVzaCh7CiAgICAgICAgICAgIGNvbnRlbnQ6ICfpl6jor4rmlLblhaXpmYTliqDliIbop6MnLAogICAgICAgICAgICB0aW1lc3RhbXA6ICdFcnJvcicsCiAgICAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAgICAgICAgIHR5cGU6ICdkYW5nZXInLAogICAgICAgICAgICBjb2xvcjogInJlZCIsCiAgICAgICAgICAgIGljb246ICdlbC1pY29uLWNsb3NlJywKICAgICAgICAgICAgZmxhZzogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgICAgcmVqZWN0KHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIHNhdmVTdGVwVG93OiBmdW5jdGlvbiBzYXZlU3RlcFRvdyhkYXRhKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc2xvdmUsIHJlamVjdCkgewogICAgICAgIHJlc29sdmVHZW5lcmF0ZTMoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgICBfdGhpczYucGVyY2VudGFnZSA9IDc1OwogICAgICAgICAgICBfdGhpczYuYWN0aXZpdGllcy5wdXNoKHsKICAgICAgICAgICAgICBjb250ZW50OiAn5L2P6Zmi5pS25YWl5YiG6KejJywKICAgICAgICAgICAgICB0aW1lc3RhbXA6ICdvaycsCiAgICAgICAgICAgICAgc2l6ZTogJ2xhcmdlJywKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgaWNvbjogJ2VsLWljb24tY2hlY2snLAogICAgICAgICAgICAgIGZsYWc6IHRydWUKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJlc2xvdmUoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlamVjdChyZXNwb25zZSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXM2LnBlcmNlbnRhZ2UgPSA3MDsKICAgICAgICAgIF90aGlzNi5hY3Rpdml0aWVzLnB1c2goewogICAgICAgICAgICBjb250ZW50OiAn5L2P6Zmi5pS25YWl5YiG6KejJywKICAgICAgICAgICAgdGltZXN0YW1wOiAnRXJyb3InLAogICAgICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgICAgICAgICB0eXBlOiAnZGFuZ2VyJywKICAgICAgICAgICAgY29sb3I6ICJyZWQiLAogICAgICAgICAgICBpY29uOiAnZWwtaWNvbi1jbG9zZScsCiAgICAgICAgICAgIGZsYWc6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICAgIHJlamVjdChyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlU3RlcFRvdzE6IGZ1bmN0aW9uIHNhdmVTdGVwVG93MShkYXRhKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc2xvdmUsIHJlamVjdCkgewogICAgICAgIHJlc29sdmVHZW5lcmF0ZTQoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgICBfdGhpczcucGVyY2VudGFnZSA9IDEwMDsKICAgICAgICAgICAgX3RoaXM3LmFjdGl2aXRpZXMucHVzaCh7CiAgICAgICAgICAgICAgY29udGVudDogJ+S9j+mZoumZhOWKoOaUtuWFpeWIhuinoycsCiAgICAgICAgICAgICAgdGltZXN0YW1wOiAnb2snLAogICAgICAgICAgICAgIC8vIGlkZWExOiAn5L2P6Zmi6ZmE5Yqg5pS25YWl5pWw5o2u6K6h566X5a6M5oiQJywKICAgICAgICAgICAgICAvLyBpZGVhMjogJ+WIhuino+WJjemHkeminScrdGhpcy5mb3JtLmZvcndhcmQsCiAgICAgICAgICAgICAgLy8gaWRlYTM6ICfliIbop6PlkI7ph5Hpop0nK3RoaXMuZm9ybS5iYWNrLAogICAgICAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgIGljb246ICdlbC1pY29uLWNoZWNrJywKICAgICAgICAgICAgICBmbGFnOiB0cnVlCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXNsb3ZlKCk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZWplY3QocmVzcG9uc2UpOwogICAgICAgICAgfQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzNy5wZXJjZW50YWdlID0gOTA7CiAgICAgICAgICBfdGhpczcuYWN0aXZpdGllcy5wdXNoKHsKICAgICAgICAgICAgY29udGVudDogJ+S9j+mZoumZhOWKoOaUtuWFpeWIhuinoycsCiAgICAgICAgICAgIHRpbWVzdGFtcDogJ0Vycm9yJywKICAgICAgICAgICAgc2l6ZTogJ2xhcmdlJywKICAgICAgICAgICAgdHlwZTogJ2RhbmdlcicsCiAgICAgICAgICAgIGNvbG9yOiAicmVkIiwKICAgICAgICAgICAgaWNvbjogJ2VsLWljb24tY2xvc2UnLAogICAgICAgICAgICBmbGFnOiBmYWxzZQogICAgICAgICAgfSk7CiAgICAgICAgICByZWplY3QocmVzKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9IC8vIHNhdmVTdGVwVG93MihkYXRhKXsKICAgIC8vICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNsb3ZlLHJlamVjdCk9PnsKICAgIC8vICAgICBhZGRBcHBvcnRFamZ0anMoZGF0YSkudGhlbihyZXNwb25zZSA9PnsKICAgIC8vICAgICAgIHRoaXMuZm9ybSA9IHJlc3BvbnNlLmRhdGE7CiAgICAvLyAgICAgICBpZihyZXNwb25zZS5jb2RlID09IDIwMCl7CiAgICAvLyAgICAgICAgIHRoaXMucGVyY2VudGFnZSA9IDkwCiAgICAvLyAgICAgICAgIHRoaXMuYWN0aXZpdGllcy5wdXNoKHsKICAgIC8vICAgICAgICAgICBjb250ZW50OiAn5oqY566X5oiQ5pysJywKICAgIC8vICAgICAgICAgICB0aW1lc3RhbXA6ICdvaycsCiAgICAvLyAgICAgICAgICAgaWRlYTE6ICfmipjnrpfmiJDmnKzmlbDmja7orqHnrpflrozmiJAnLAogICAgLy8gICAgICAgICAgIC8vIGlkZWEyOiAn5YiG6Kej5YmN6YeR6aKdJyt0aGlzLmZvcm0uZm9yd2FyZCwKICAgIC8vICAgICAgICAgICAvLyBpZGVhMzogJ+WIhuino+WQjumHkeminScrdGhpcy5mb3JtLmJhY2ssCiAgICAvLyAgICAgICAgICAgc2l6ZTogJ2xhcmdlJywKICAgIC8vICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAvLyAgICAgICAgICAgaWNvbjogJ2VsLWljb24tY2hlY2snLAogICAgLy8gICAgICAgICAgIGZsYWc6dHJ1ZQogICAgLy8gICAgICAgICB9KQogICAgLy8gICAgICAgICByZXNsb3ZlKCkKICAgIC8vICAgICAgIH1lbHNlewogICAgLy8gICAgICAgICByZWplY3QocmVzcG9uc2UpCiAgICAvLyAgICAgICB9CiAgICAvLyAgICAgfSkuY2F0Y2goKHJlcyk9PnsKICAgIC8vICAgICAgIHRoaXMucGVyY2VudGFnZSA9IDcwCiAgICAvLyAgICAgICB0aGlzLmFjdGl2aXRpZXMucHVzaCh7CiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICfmipjnrpfmiJDmnKwnLAogICAgLy8gICAgICAgICB0aW1lc3RhbXA6ICdFcnJvcicsCiAgICAvLyAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAvLyAgICAgICAgIHR5cGU6ICdkYW5nZXInLAogICAgLy8gICAgICAgICBjb2xvcjoicmVkIiwKICAgIC8vICAgICAgICAgaWNvbjogJ2VsLWljb24tY2xvc2UnLAogICAgLy8gICAgICAgICBmbGFnOmZhbHNlCiAgICAvLyAgICAgICB9KQogICAgLy8gICAgICAgcmVqZWN0KHJlcykKICAgIC8vICAgICB9KQogICAgLy8gICB9KQogICAgLy8gfSwKICAgIC8vIHNhdmVTdGVwVG93MyhkYXRhKXsKICAgIC8vICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNsb3ZlLHJlamVjdCk9PnsKICAgIC8vICAgICBhZGRBcHBvcnRTamZ0anMoZGF0YSkudGhlbihyZXNwb25zZSA9PnsKICAgIC8vICAgICAgIHRoaXMuZm9ybSA9IHJlc3BvbnNlLmRhdGE7CiAgICAvLyAgICAgICBpZihyZXNwb25zZS5jb2RlID09IDIwMCl7CiAgICAvLyAgICAgICAgIHRoaXMucGVyY2VudGFnZSA9IDEwMAogICAgLy8gICAgICAgICB0aGlzLmFjdGl2aXRpZXMucHVzaCh7CiAgICAvLyAgICAgICAgICAgY29udGVudDogJ+WujOaIkOeUn+aIkCcsCiAgICAvLyAgICAgICAgICAgdGltZXN0YW1wOiAnb2snLAogICAgLy8gICAgICAgICAgIGlkZWExOiAn5pWw5o2u6K6h566X5a6M5oiQJywKICAgIC8vICAgICAgICAgICAvLyBpZGVhMjogJ+WIhuino+WJjemHkeminScrdGhpcy5mb3JtLmZvcndhcmQsCiAgICAvLyAgICAgICAgICAgLy8gaWRlYTM6ICfliIbop6PlkI7ph5Hpop0nK3RoaXMuZm9ybS5iYWNrLAogICAgLy8gICAgICAgICAgIHNpemU6ICdsYXJnZScsCiAgICAvLyAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgLy8gICAgICAgICAgIGljb246ICdlbC1pY29uLWNoZWNrJywKICAgIC8vICAgICAgICAgICBmbGFnOnRydWUKICAgIC8vICAgICAgICAgfSkKICAgIC8vICAgICAgICAgcmVzbG92ZSgpCiAgICAvLyAgICAgICB9ZWxzZXsKICAgIC8vICAgICAgICAgcmVqZWN0KHJlc3BvbnNlKQogICAgLy8gICAgICAgfQogICAgLy8gICAgIH0pLmNhdGNoKChyZXMpPT57CiAgICAvLyAgICAgICB0aGlzLnBlcmNlbnRhZ2UgPSA4MAogICAgLy8gICAgICAgdGhpcy5hY3Rpdml0aWVzLnB1c2goewogICAgLy8gICAgICAgICBjb250ZW50OiAn5a6M5oiQ55Sf5oiQJywKICAgIC8vICAgICAgICAgdGltZXN0YW1wOiAnRXJyb3InLAogICAgLy8gICAgICAgICBzaXplOiAnbGFyZ2UnLAogICAgLy8gICAgICAgICB0eXBlOiAnZGFuZ2VyJywKICAgIC8vICAgICAgICAgY29sb3I6InJlZCIsCiAgICAvLyAgICAgICAgIGljb246ICdlbC1pY29uLWNsb3NlJywKICAgIC8vICAgICAgICAgZmxhZzpmYWxzZQogICAgLy8gICAgICAgfSkKICAgIC8vICAgICAgIHJlamVjdChyZXMpCiAgICAvLyAgICAgfSkKICAgIC8vICAgfSkKICAgIC8vIH0sCiAgfQp9Ow=="},null]}