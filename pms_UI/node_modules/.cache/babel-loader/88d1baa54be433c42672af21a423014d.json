{"remainingRequest":"D:\\hrp\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\hrp\\zjry-pms-ui\\src\\utils\\zjry.js","dependencies":[{"path":"D:\\hrp\\zjry-pms-ui\\src\\utils\\zjry.js","mtime":1682043101237},{"path":"D:\\hrp\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1682058377329},{"path":"D:\\hrp\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}