{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\tool\\gen\\editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\tool\\gen\\editTable.vue","mtime":1682043106629},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi95cytqeC95cytqeC96anJ5LXBtcy11aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiKTsKdmFyIF9nZW4gPSByZXF1aXJlKCJAL2FwaS90b29sL2dlbiIpOwp2YXIgX3R5cGUgPSByZXF1aXJlKCJAL2FwaS9zeXN0ZW0vZGljdC90eXBlIik7CnZhciBfbWVudSA9IHJlcXVpcmUoIkAvYXBpL3N5c3RlbS9tZW51Iik7CnZhciBfYmFzaWNJbmZvRm9ybSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9iYXNpY0luZm9Gb3JtIikpOwp2YXIgX2dlbkluZm9Gb3JtID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2dlbkluZm9Gb3JtIikpOwp2YXIgX3NvcnRhYmxlanMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInNvcnRhYmxlanMiKSk7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfZGVmYXVsdCA9IHsKICBuYW1lOiAnR2VuRWRpdCcsCiAgY29tcG9uZW50czogewogICAgYmFzaWNJbmZvRm9ybTogX2Jhc2ljSW5mb0Zvcm0uZGVmYXVsdCwKICAgIGdlbkluZm9Gb3JtOiBfZ2VuSW5mb0Zvcm0uZGVmYXVsdAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIOmAieS4remAiemhueWNoeeahCBuYW1lCiAgICAgIGFjdGl2ZU5hbWU6ICdjbG91bScsCiAgICAgIC8vIOihqOagvOeahOmrmOW6pgogICAgICB0YWJsZUhlaWdodDogZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCAtIDI0NSArICdweCcsCiAgICAgIC8vIOihqOS/oeaBrwogICAgICB0YWJsZXM6IFtdLAogICAgICAvLyDooajliJfkv6Hmga8KICAgICAgY2xvdW1uczogW10sCiAgICAgIC8vIOWtl+WFuOS/oeaBrwogICAgICBkaWN0T3B0aW9uczogW10sCiAgICAgIC8vIOiPnOWNleS/oeaBrwogICAgICBtZW51czogW10sCiAgICAgIC8vIOihqOivpue7huS/oeaBrwogICAgICBpbmZvOiB7fSwKICAgICAgLy8g5a2X5YW4ZGlhbG9nCiAgICAgIGRpY3RTZWFyY2hEaWFsb2c6IGZhbHNlLAogICAgICAvLyBzZWxlY3Tnu5HlrprlgLwKICAgICAgZGljdFR5cGU6ICcnLAogICAgICAvLyDooYzntKLlvJUKICAgICAgcm93SW5kZXg6ICcnCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICB2YXIgdGFibGVJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcyAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMudGFibGVJZDsKICAgIGlmICh0YWJsZUlkKSB7CiAgICAgIC8vIOiOt+WPluihqOivpue7huS/oeaBrwogICAgICAoMCwgX2dlbi5nZXRHZW5UYWJsZSkodGFibGVJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuY2xvdW1ucyA9IHJlcy5kYXRhLnJvd3M7CiAgICAgICAgX3RoaXMuaW5mbyA9IHJlcy5kYXRhLmluZm87CiAgICAgICAgX3RoaXMudGFibGVzID0gcmVzLmRhdGEudGFibGVzOwogICAgICB9KTsKICAgICAgLyoqIOafpeivouWtl+WFuOS4i+aLieWIl+ihqCAqLwogICAgICAoMCwgX3R5cGUub3B0aW9uc2VsZWN0KSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuZGljdE9wdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgICAgLyoqIOafpeivouiPnOWNleS4i+aLieWIl+ihqCAqLwogICAgICAoMCwgX21lbnUubGlzdE1lbnUpKCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5tZW51cyA9IF90aGlzLmhhbmRsZVRyZWUocmVzcG9uc2UuZGF0YSwgJ21lbnVJZCcpOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKiDmj5DkuqTmjInpkq4gKi9zdWJtaXRGb3JtOiBmdW5jdGlvbiBzdWJtaXRGb3JtKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdmFyIGJhc2ljRm9ybSA9IHRoaXMuJHJlZnMuYmFzaWNJbmZvLiRyZWZzLmJhc2ljSW5mb0Zvcm07CiAgICAgIHZhciBnZW5Gb3JtID0gdGhpcy4kcmVmcy5nZW5JbmZvLiRyZWZzLmdlbkluZm9Gb3JtOwogICAgICBQcm9taXNlLmFsbChbYmFzaWNGb3JtLCBnZW5Gb3JtXS5tYXAodGhpcy5nZXRGb3JtUHJvbWlzZSkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciB2YWxpZGF0ZVJlc3VsdCA9IHJlcy5ldmVyeShmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuICEhaXRlbTsKICAgICAgICB9KTsKICAgICAgICBpZiAodmFsaWRhdGVSZXN1bHQpIHsKICAgICAgICAgIHZhciBnZW5UYWJsZSA9IE9iamVjdC5hc3NpZ24oe30sIGJhc2ljRm9ybS5tb2RlbCwgZ2VuRm9ybS5tb2RlbCk7CiAgICAgICAgICBnZW5UYWJsZS5jb2x1bW5zID0gX3RoaXMyLmNsb3VtbnM7CiAgICAgICAgICBnZW5UYWJsZS5wYXJhbXMgPSB7CiAgICAgICAgICAgIHRyZWVDb2RlOiBnZW5UYWJsZS50cmVlQ29kZSwKICAgICAgICAgICAgdHJlZU5hbWU6IGdlblRhYmxlLnRyZWVOYW1lLAogICAgICAgICAgICB0cmVlUGFyZW50Q29kZTogZ2VuVGFibGUudHJlZVBhcmVudENvZGUsCiAgICAgICAgICAgIHBhcmVudE1lbnVJZDogZ2VuVGFibGUucGFyZW50TWVudUlkCiAgICAgICAgICB9OwogICAgICAgICAgKDAsIF9nZW4udXBkYXRlR2VuVGFibGUpKGdlblRhYmxlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgX3RoaXMyLm1zZ1N1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgX3RoaXMyLmNsb3NlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIubXNnRXJyb3IoJ+ihqOWNleagoemqjOacqumAmui/h++8jOivt+mHjeaWsOajgOafpeaPkOS6pOWGheWuuScpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0Rm9ybVByb21pc2U6IGZ1bmN0aW9uIGdldEZvcm1Qcm9taXNlKGZvcm0pIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgZm9ybS52YWxpZGF0ZShmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXNvbHZlKHJlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDlhbPpl63mjInpkq4gKi9jbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCd0YWdzVmlldy9kZWxWaWV3JywgdGhpcy4kcm91dGUpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy90b29sL2dlbicsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHQ6IERhdGUubm93KCkKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIC8v5Yip55So5Y2V5YWD5qC855qEIGNsYXNzTmFtZSDnmoTlm57osIPmlrnms5XvvIznu5nooYzliJfntKLlvJXotYvlgLwKICAgIHRhYmxlQ2VsbENsYXNzTmFtZTogZnVuY3Rpb24gdGFibGVDZWxsQ2xhc3NOYW1lKF9yZWYpIHsKICAgICAgdmFyIHJvdyA9IF9yZWYucm93LAogICAgICAgIGNvbHVtbiA9IF9yZWYuY29sdW1uLAogICAgICAgIHJvd0luZGV4ID0gX3JlZi5yb3dJbmRleCwKICAgICAgICBjb2x1bW5JbmRleCA9IF9yZWYuY29sdW1uSW5kZXg7CiAgICAgIC8v5rOo5oSP6L+Z6YeM5piv6Kej5p6ECiAgICAgIHJvdy5pbmRleCA9IHJvd0luZGV4OwogICAgICBjb2x1bW4uaW5kZXggPSBjb2x1bW5JbmRleDsKICAgIH0sCiAgICAvLyDkuIvmi4nmoYbngrnlh7vkuovku7YKICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVDbGljayhyb3cpIHsKICAgICAgY29uc29sZS5sb2cocm93KTsKICAgICAgdGhpcy4kc2V0KHRoaXMuY2xvdW1uc1tyb3cuaW5kZXhdLCAnZGljdE9wdGlvbnMnLCB0aGlzLmRpY3RPcHRpb25zKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgIHZhciBlbCA9IHRoaXMuJHJlZnMuZHJhZ1RhYmxlLiRlbC5xdWVyeVNlbGVjdG9yQWxsKCcuZWwtdGFibGVfX2JvZHktd3JhcHBlciA+IHRhYmxlID4gdGJvZHknKVswXTsKICAgIHZhciBzb3J0YWJsZSA9IF9zb3J0YWJsZWpzLmRlZmF1bHQuY3JlYXRlKGVsLCB7CiAgICAgIGhhbmRsZTogJy5hbGxvd0RyYWcnLAogICAgICBvbkVuZDogZnVuY3Rpb24gb25FbmQoZXZ0KSB7CiAgICAgICAgdmFyIHRhcmdldFJvdyA9IF90aGlzMy5jbG91bW5zLnNwbGljZShldnQub2xkSW5kZXgsIDEpWzBdOwogICAgICAgIF90aGlzMy5jbG91bW5zLnNwbGljZShldnQubmV3SW5kZXgsIDAsIHRhcmdldFJvdyk7CiAgICAgICAgZm9yICh2YXIgaW5kZXggaW4gX3RoaXMzLmNsb3VtbnMpIHsKICAgICAgICAgIF90aGlzMy5jbG91bW5zW2luZGV4XS5zb3J0ID0gcGFyc2VJbnQoaW5kZXgpICsgMTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogIH0KfTsKZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7"},{"version":3,"mappings":";;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IAAA;IACA;IACA;MACA;MACA;QACA;QACA;QACA;MACA;MACA;MACA;QACA;MACA;MACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA,WACAC;MAAA;MACA;MACA;MACAC;QACA;UAAA;QAAA;QACA;UACA;UACAC;UACAA;YACAC;YACAC;YACAC;YACAC;UACA;UACA;YACA;YACA;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAC;UACAC;QACA;MACA;IACA;IACA,WACAC;MACA;MACA;QAAAC;QAAAC;UAAAC;QAAA;MAAA;IACA;IACA;IACAC;MAAA;QAAAC;QAAAlB;QAAAmB;MAAA;MACAC;MACAF;IACA;IACA;IACAG;MACAC;MACA;IACA;EACA;EACAC;IAAA;IACA;IACA;MACAC;MACAC;QACA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA;AAAA","names":["name","components","basicInfoForm","genInfoForm","data","activeName","tableHeight","tables","cloumns","dictOptions","menus","info","dictSearchDialog","dictType","rowIndex","created","methods","submitForm","Promise","genTable","treeCode","treeName","treeParentCode","parentMenuId","getFormPromise","form","resolve","close","path","query","t","tableCellClassName","column","columnIndex","row","handleClick","console","mounted","handle","onEnd"],"sourceRoot":"src/views/tool/gen","sources":["editTable.vue"],"sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-table border  ref=\"dragTable\" :data=\"cloumns\" row-key=\"columnId\" :max-height=\"tableHeight\"\n                  :cell-class-name=\"tableCellClassName\">\n          <el-table-column sortable label=\"序号\" type=\"index\" min-width=\"5%\" class-name=\"allowDrag\"/>\n          <el-table-column\n            label=\"字段列名\"\n            prop=\"columnName\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"字段描述\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"Java类型\" min-width=\"11%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.javaType\">\n                <el-option label=\"Long\" value=\"Long\"/>\n                <el-option label=\"String\" value=\"String\"/>\n                <el-option label=\"Integer\" value=\"Integer\"/>\n                <el-option label=\"Double\" value=\"Double\"/>\n                <el-option label=\"BigDecimal\" value=\"BigDecimal\"/>\n                <el-option label=\"Date\" value=\"Date\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"java属性\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.javaField\"></el-input>\n            </template>\n          </el-table-column>\n\n          <el-table-column sortable label=\"插入\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isInsert\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"编辑\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isEdit\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"列表\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isList\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isQuery\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询方式\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\"/>\n                <el-option label=\"!=\" value=\"NE\"/>\n                <el-option label=\">\" value=\"GT\"/>\n                <el-option label=\">=\" value=\"GTE\"/>\n                <el-option label=\"<\" value=\"LT\"/>\n                <el-option label=\"<=\" value=\"LTE\"/>\n                <el-option label=\"LIKE\" value=\"LIKE\"/>\n                <el-option label=\"BETWEEN\" value=\"BETWEEN\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"必填\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isRequired\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"显示类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\"/>\n                <el-option label=\"文本域\" value=\"textarea\"/>\n                <el-option label=\"下拉框\" value=\"select\"/>\n                <el-option label=\"单选框\" value=\"radio\"/>\n                <el-option label=\"复选框\" value=\"checkbox\"/>\n                <el-option label=\"日期控件\" value=\"datetime\"/>\n                <el-option label=\"图片上传\" value=\"imageUpload\"/>\n                <el-option label=\"文件上传\" value=\"fileUpload\"/>\n                <el-option label=\"富文本控件\" value=\"editor\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"字典类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select clearable filterable placeholder=\"请选择\" v-model=\"scope.row.dictType\"\n                         v-on:click.native=\"handleClick(scope.row)\">\n                <el-option\n                  v-for=\"dict in scope.row.dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\">\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" :tables=\"tables\" :menus=\"menus\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\n  import { getGenTable, updateGenTable } from '@/api/tool/gen'\n  import { optionselect as getDictOptionselect } from '@/api/system/dict/type'\n  import { listMenu as getMenuTreeselect } from '@/api/system/menu'\n  import basicInfoForm from './basicInfoForm'\n  import genInfoForm from './genInfoForm'\n  import Sortable from 'sortablejs'\n\n  export default {\n    name: 'GenEdit',\n    components: {\n      basicInfoForm,\n      genInfoForm\n    },\n    data() {\n      return {\n        // 选中选项卡的 name\n        activeName: 'cloum',\n        // 表格的高度\n        tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n        // 表信息\n        tables: [],\n        // 表列信息\n        cloumns: [],\n        // 字典信息\n        dictOptions: [],\n        // 菜单信息\n        menus: [],\n        // 表详细信息\n        info: {},\n        // 字典dialog\n        dictSearchDialog: false,\n        // select绑定值\n        dictType: '',\n        // 行索引\n        rowIndex: ''\n      }\n    },\n    created() {\n      const tableId = this.$route.params && this.$route.params.tableId\n      if (tableId) {\n        // 获取表详细信息\n        getGenTable(tableId).then(res => {\n          this.cloumns = res.data.rows\n          this.info = res.data.info\n          this.tables = res.data.tables\n        })\n        /** 查询字典下拉列表 */\n        getDictOptionselect().then(response => {\n          this.dictOptions = response.data\n        })\n        /** 查询菜单下拉列表 */\n        getMenuTreeselect().then(response => {\n          this.menus = this.handleTree(response.data, 'menuId')\n        })\n      }\n    },\n    methods: {\n      /** 提交按钮 */\n      submitForm() {\n        const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n        const genForm = this.$refs.genInfo.$refs.genInfoForm\n        Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n          const validateResult = res.every(item => !!item)\n          if (validateResult) {\n            const genTable = Object.assign({}, basicForm.model, genForm.model)\n            genTable.columns = this.cloumns\n            genTable.params = {\n              treeCode: genTable.treeCode,\n              treeName: genTable.treeName,\n              treeParentCode: genTable.treeParentCode,\n              parentMenuId: genTable.parentMenuId\n            }\n            updateGenTable(genTable).then(res => {\n              this.msgSuccess(res.msg)\n              if (res.code === 200) {\n                this.close()\n              }\n            })\n          } else {\n            this.msgError('表单校验未通过，请重新检查提交内容')\n          }\n        })\n      },\n      getFormPromise(form) {\n        return new Promise(resolve => {\n          form.validate(res => {\n            resolve(res)\n          })\n        })\n      },\n      /** 关闭按钮 */\n      close() {\n        this.$store.dispatch('tagsView/delView', this.$route)\n        this.$router.push({ path: '/tool/gen', query: { t: Date.now() } })\n      },\n      //利用单元格的 className 的回调方法，给行列索引赋值\n      tableCellClassName({ row, column, rowIndex, columnIndex }) {//注意这里是解构\n        row.index = rowIndex\n        column.index = columnIndex\n      },\n      // 下拉框点击事件\n      handleClick(row) {\n      \tconsole.log(row);\n        this.$set(this.cloumns[row.index], 'dictOptions', this.dictOptions)\n      }\n    },\n    mounted() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      const sortable = Sortable.create(el, {\n        handle: '.allowDrag',\n        onEnd: evt => {\n          const targetRow = this.cloumns.splice(evt.oldIndex, 1)[0]\n          this.cloumns.splice(evt.newIndex, 0, targetRow)\n          for (let index in this.cloumns) {\n            this.cloumns[index].sort = parseInt(index) + 1\n          }\n        }\n      })\n    }\n  }\n</script>\n"]}]}