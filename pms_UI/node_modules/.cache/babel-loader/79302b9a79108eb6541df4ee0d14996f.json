{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\revenue\\apport\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\revenue\\apport\\index.vue","mtime":1682043106217},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1682058377329},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDoveXMrangveXMrangvempyeS1wbXMtdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovLyBsaXN0QXBwb3J0LCBnZXRBcHBvcnQsIGRlbEFwcG9ydCwgYWRkQXBwb3J0LCB1cGRhdGVBcHBvcnQsIGV4cG9ydEFwcG9ydCwKaW1wb3J0IHsgZ2V0UHJlTGlzdCBhcyBfZ2V0UHJlTGlzdCwgZ2V0QWZ0ZXJMaXN0IGFzIF9nZXRBZnRlckxpc3QgfSBmcm9tICJAL2FwaS9yZXZlbnVlL2FwcG9ydCI7CmltcG9ydCBhZGRFZGl0IGZyb20gIi4vYWRkRWRpdCI7CmltcG9ydCBkZXRhaWwgZnJvbSAiLi9kZXRhaWwiOwppbXBvcnQgeyBnZXRZZWFyTW9udGgyIH0gZnJvbSAiQC91dGlscy9kYXRlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHBvcnQiLAogIGNvbXBvbmVudHM6IHsKICAgIGFkZEVkaXQ6IGFkZEVkaXQsCiAgICBkZXRhaWw6IGRldGFpbAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFjdGl2ZU5hbWU6ICdyZXNvbHZlUHJlJywKICAgICAgcHJlTG9hZGluZzogZmFsc2UsCiAgICAgIGFmdGVyTG9hZGluZzogZmFsc2UsCiAgICAgIHNpbmdsZTogdHJ1ZSwKICAgICAgLy8g5a+85Ye66YGu572p5bGCCiAgICAgIGV4cG9ydExvYWRpbmc6IGZhbHNlLAogICAgICAvLyDmmL7npLrmkJzntKLmnaHku7YKICAgICAgc2hvd1NlYXJjaDogdHJ1ZSwKICAgICAgLy8g5oC75p2h5pWwCiAgICAgIHRvdGFsOiAwLAogICAgICBhZnRlclRvdGFsOiAwLAogICAgICAvLyDmlLblhaXnlJ/miJDooajmoLzmlbDmja4KICAgICAgYXBwb3J0TGlzdDogW10sCiAgICAgIGFwcG9ydExpc3ROZXh0OiBbXSwKICAgICAgc2VsZWN0aW9uUm93OiBbXSwKICAgICAgZWNoYXJ0c1ByZUxpc3Q6IFtdLAogICAgICBlY2hhcnRzQWZ0ZXJMaXN0OiBbXSwKICAgICAgLy8g5by55Ye65bGC5qCH6aKYCiAgICAgIHRpdGxlOiAiIiwKICAgICAgLy8g5piv5ZCm5pi+56S65by55Ye65bGCCiAgICAgIG9wZW46IGZhbHNlLAogICAgICBkZXRhaWxPcGVuOiBmYWxzZSwKICAgICAgdHlwZTogJ3Jlc29sdmVCZWZvcmUnLAogICAgICAvLyDnu5PnrpfmoIfor4YoMSzmraPluLgsMumZhOWKoOaUtuWFpSnlrZflhbgKICAgICAgc2V0dGxlVHlwZU9wdGlvbnM6IFtdLAogICAgICAvLyDmn6Xor6Llj4LmlbAKICAgICAgcXVlcnlQYXJhbXM6IHsKICAgICAgICBwYWdlTnVtOiAxLAogICAgICAgIHBhZ2VTaXplOiAzMCwKICAgICAgICBjb21wQ29kZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlci5hY2NvdW50SW5mby5kZXB0SWQsCiAgICAgICAgYWNjb3VudENvZGU6IG51bGwsCiAgICAgICAgcmV2ZW51ZUNvZGU6IG51bGwsCiAgICAgICAgcmVjZWl2ZU51bTogbnVsbCwKICAgICAgICBhY3R1YWxOdW06IG51bGwsCiAgICAgICAgZHBldENvZGU6IG51bGwsCiAgICAgICAgb2NjdXJlVGltZTogZ2V0WWVhck1vbnRoMigpLAogICAgICAgIHJldmVudWVUeXBlOiBudWxsLAogICAgICAgIHJldmVudWVLaW5kOiBudWxsLAogICAgICAgIHNldHRsZVR5cGU6IG51bGwsCiAgICAgICAgc2V0dGxlTWFyazogbnVsbAogICAgICB9LAogICAgICAvLyDooajljZXlj4LmlbAKICAgICAgZm9ybToge30sCiAgICAgIC8vIOihqOWNleagoemqjAogICAgICBydWxlczoge30KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHRoaXMuZ2V0UHJlTGlzdCgpOwogICAgdGhpcy5nZXREaWN0cygicG1zX2pzYnNfdHlwZSIpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzLnNldHRsZVR5cGVPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgIH0pOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNsaWNrVGFibGVOYW1lOiBmdW5jdGlvbiBoYW5kbGVDbGlja1RhYmxlTmFtZShyb3cpIHsKICAgICAgaWYgKHRoaXMuYWN0aXZlTmFtZSA9PSAicmVzb2x2ZVByZSIpIHsKICAgICAgICB0aGlzLnJvd0NsaWNrQmVmb3JlKHJvdyk7CiAgICAgICAgdGhpcy5oYW5kbGVVcGRhdGUocm93KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnJvd0NsaWNrQWZ0ZXIocm93KTsKICAgICAgICB0aGlzLmhhbmRsZVVwZGF0ZShyb3cpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrKHRhYiwgZXZlbnQpIHsKICAgICAgaWYgKHRhYi5sYWJlbCA9PSAi5YiG6Kej5ZCOIikgewogICAgICAgIHRoaXMuZ2V0QWZ0ZXJMaXN0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5nZXRQcmVMaXN0KCk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRQcmVMaXN0OiBmdW5jdGlvbiBnZXRQcmVMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdGhpcy5wcmVMb2FkaW5nID0gdHJ1ZTsKICAgICAgX2dldFByZUxpc3QodGhpcy5xdWVyeVBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuY29kZSA9PSAyMDApIHsKICAgICAgICAgIF90aGlzMi5hcHBvcnRMaXN0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXNwb25zZS5yb3dzKSk7CiAgICAgICAgICBfdGhpczIudG90YWwgPSByZXNwb25zZS50b3RhbDsKICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2Uucm93cy5tYXAoZnVuY3Rpb24gKF8pIHsKICAgICAgICAgICAgXy5uYW1lID0gXy5uYW1lICsgJyDvv6UnICsgXy52YWx1ZTsKICAgICAgICAgICAgcmV0dXJuIF87CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzMi5lY2hhcnRzUHJlTGlzdCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZGF0YSkpOwogICAgICAgICAgX3RoaXMyLmVjaGFydHNQcmVMaXN0LnBvcCgpOwogICAgICAgICAgX3RoaXMyLmluaXRDaGFydHMoKTsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMyLmFwcG9ydExpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgZm9yICh2YXIgaiBpbiBfdGhpczIuYXBwb3J0TGlzdFtpXSkgewogICAgICAgICAgICAgIGlmICh0eXBlb2YgX3RoaXMyLmFwcG9ydExpc3RbaV1bal0gPT0gIm51bWJlciIgJiYgX3RoaXMyLmFwcG9ydExpc3RbaV1bal0gIT0gMCAmJiBqICE9ICJpZCIpIHsKICAgICAgICAgICAgICAgIF90aGlzMi5hcHBvcnRMaXN0W2ldW2pdID0gX3RoaXMyLm1vbmV5Rm9ybWF0KF90aGlzMi5hcHBvcnRMaXN0W2ldW2pdKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIF90aGlzMi5wcmVMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRBZnRlckxpc3Q6IGZ1bmN0aW9uIGdldEFmdGVyTGlzdCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHRoaXMuYWZ0ZXJMb2FkaW5nID0gdHJ1ZTsKICAgICAgX2dldEFmdGVyTGlzdCh0aGlzLnF1ZXJ5UGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5jb2RlID09IDIwMCkgewogICAgICAgICAgX3RoaXMzLmFwcG9ydExpc3ROZXh0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXNwb25zZS5yb3dzKSk7CiAgICAgICAgICBfdGhpczMuYWZ0ZXJUb3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5yb3dzLm1hcChmdW5jdGlvbiAoXykgewogICAgICAgICAgICBfLm5hbWUgPSBfLm5hbWUgKyAnIO+/pScgKyBfLnZhbHVlOwogICAgICAgICAgICByZXR1cm4gXzsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMzLmVjaGFydHNBZnRlckxpc3QgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgICAgIF90aGlzMy5lY2hhcnRzQWZ0ZXJMaXN0LnBvcCgpOwogICAgICAgICAgX3RoaXMzLmluaXRDaGFydHNOZXh0KCk7CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IF90aGlzMy5hcHBvcnRMaXN0TmV4dC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBmb3IgKHZhciBqIGluIF90aGlzMy5hcHBvcnRMaXN0TmV4dFtpXSkgewogICAgICAgICAgICAgIGlmICh0eXBlb2YgX3RoaXMzLmFwcG9ydExpc3ROZXh0W2ldW2pdID09ICJudW1iZXIiICYmIF90aGlzMy5hcHBvcnRMaXN0TmV4dFtpXVtqXSAhPSAwICYmIGogIT0gImlkIikgewogICAgICAgICAgICAgICAgX3RoaXMzLmFwcG9ydExpc3ROZXh0W2ldW2pdID0gX3RoaXMzLm1vbmV5Rm9ybWF0KF90aGlzMy5hcHBvcnRMaXN0TmV4dFtpXVtqXSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBfdGhpczMuYWZ0ZXJMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvL+abtOaWsOihqOagvOaVsOaNrgogICAgZnJlc2hUYWJsZTogZnVuY3Rpb24gZnJlc2hUYWJsZSgpIHsKICAgICAgaWYgKHRoaXMuYWN0aXZlTmFtZSA9PSAicmVzb2x2ZVByZSIpIHsKICAgICAgICB0aGlzLmdldFByZUxpc3QoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmdldEFmdGVyTGlzdCgpOwogICAgICB9CiAgICB9LAogICAgLy8g5aSa6YCJ5qGG6YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2VCZWZvcmU6IGZ1bmN0aW9uIGhhbmRsZVNlbGVjdGlvbkNoYW5nZUJlZm9yZShzZWxlY3Rpb24pIHsKICAgICAgaWYgKHNlbGVjdGlvblswXSAmJiBzZWxlY3Rpb25bMF0ubmFtZSA9PSAn5ZCI6K6hJykgewogICAgICAgIHRoaXMuc2luZ2xlID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNpbmdsZSA9IHNlbGVjdGlvbi5sZW5ndGggIT09IDE7CiAgICAgICAgdGhpcy5zZWxlY3Rpb25Sb3cgPSBzZWxlY3Rpb247CiAgICAgIH0KICAgIH0sCiAgICByb3dDbGlja0JlZm9yZTogZnVuY3Rpb24gcm93Q2xpY2tCZWZvcmUocm93LCBjb2x1bW4sIGV2ZW50KSB7CiAgICAgIHZhciByZWZzRWxUYWJsZSA9IHRoaXMuJHJlZnMubXVsdGlwbGVUYWJsZVByZTsKICAgICAgdmFyIGZpbmRSb3cgPSB0aGlzLnNlbGVjdGlvblJvdy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgcmV0dXJuIGMucm93SW5kZXggPT0gcm93LnJvd0luZGV4OwogICAgICB9KTsKICAgICAgaWYgKGZpbmRSb3cgJiYgdGhpcy5zZWxlY3Rpb25Sb3cubGVuZ3RoID09IDEpIHsKICAgICAgICByZWZzRWxUYWJsZS50b2dnbGVSb3dTZWxlY3Rpb24ocm93LCBmYWxzZSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHJlZnNFbFRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHJlZnNFbFRhYmxlLnRvZ2dsZVJvd1NlbGVjdGlvbihyb3cpOwogICAgfSwKICAgIGhhbmRsZVNlbGVjdGlvbkNoYW5nZUFmdGVyOiBmdW5jdGlvbiBoYW5kbGVTZWxlY3Rpb25DaGFuZ2VBZnRlcihzZWxlY3Rpb24pIHsKICAgICAgaWYgKHNlbGVjdGlvblswXSAmJiBzZWxlY3Rpb25bMF0ubmFtZSA9PSAn5ZCI6K6hJykgewogICAgICAgIHRoaXMuc2luZ2xlID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNpbmdsZSA9IHNlbGVjdGlvbi5sZW5ndGggIT09IDE7CiAgICAgICAgdGhpcy5zZWxlY3Rpb25Sb3cgPSBzZWxlY3Rpb247CiAgICAgIH0KICAgIH0sCiAgICByb3dDbGlja0FmdGVyOiBmdW5jdGlvbiByb3dDbGlja0FmdGVyKHJvdywgY29sdW1uLCBldmVudCkgewogICAgICB2YXIgcmVmc0VsVGFibGUgPSB0aGlzLiRyZWZzLm11bHRpcGxlVGFibGVBZnRlcjsKICAgICAgdmFyIGZpbmRSb3cgPSB0aGlzLnNlbGVjdGlvblJvdy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgcmV0dXJuIGMucm93SW5kZXggPT0gcm93LnJvd0luZGV4OwogICAgICB9KTsKICAgICAgaWYgKGZpbmRSb3cgJiYgdGhpcy5zZWxlY3Rpb25Sb3cubGVuZ3RoID09IDEpIHsKICAgICAgICByZWZzRWxUYWJsZS50b2dnbGVSb3dTZWxlY3Rpb24ocm93LCBmYWxzZSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHJlZnNFbFRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHJlZnNFbFRhYmxlLnRvZ2dsZVJvd1NlbGVjdGlvbihyb3cpOwogICAgfSwKICAgIC8vIOe7k+eul+agh+ivhigxLOato+W4uCwy6ZmE5Yqg5pS25YWlKeWtl+WFuOe/u+ivkQogICAgc2V0dGxlVHlwZUZvcm1hdDogZnVuY3Rpb24gc2V0dGxlVHlwZUZvcm1hdChyb3csIGNvbHVtbikgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3REaWN0TGFiZWwodGhpcy5zZXR0bGVUeXBlT3B0aW9ucywgcm93LnNldHRsZVR5cGUpOwogICAgfSwKICAgIGluaXRDaGFydHM6IGZ1bmN0aW9uIGluaXRDaGFydHMoKSB7CiAgICAgIHZhciBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuY2hhcnQpOwogICAgICAvLyDnu5jliLblm77ooagKICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAnJywKICAgICAgICAgIHN1YnRleHQ6ICcnLAogICAgICAgICAgbGVmdDogJ2NlbnRlcicKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgIGZvcm1hdHRlcjogJ3tifScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgbGVmdDogJ2xlZnQnLAogICAgICAgICAgYm90dG9tOiAwCiAgICAgICAgfSwKICAgICAgICBjb2xvckJ5OiAnc2VyaWVzJywKICAgICAgICBjb2xvcjogWycjNjZiM2ZmJywgJyM5MWNjNzUnLCAnI2ZhYzg1OCcsICcjZWU2NjY2JywgJyM3M2MwZGUnLCAnIzNiYTI3MicsICcjZmM4NDUyJywgJyM5YTYwYjQnLCAnI2VhN2NjYyddLAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIG5hbWU6ICcnLAogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICByYWRpdXM6ICc2MCUnLAogICAgICAgICAgZGF0YTogdGhpcy5lY2hhcnRzUHJlTGlzdCwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9KTsKICAgIH0sCiAgICBpbml0Q2hhcnRzTmV4dDogZnVuY3Rpb24gaW5pdENoYXJ0c05leHQoKSB7CiAgICAgIHZhciBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuY2hhcnROZXh0KTsKICAgICAgLy8g57uY5Yi25Zu+6KGoCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJycsCiAgICAgICAgICBzdWJ0ZXh0OiAnJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7Yn0nCiAgICAgICAgfSwKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6ICdsZWZ0JywKICAgICAgICAgIGJvdHRvbTogMAogICAgICAgIH0sCiAgICAgICAgY29sb3JCeTogJ3NlcmllcycsCiAgICAgICAgY29sb3I6IFsnIzY2YjNmZicsICcjOTFjYzc1JywgJyNmYWM4NTgnLCAnI2VlNjY2NicsICcjNzNjMGRlJywgJyMzYmEyNzInLCAnI2ZjODQ1MicsICcjOWE2MGI0JywgJyNlYTdjY2MnXSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiAnNjAlJywKICAgICAgICAgIGRhdGE6IHRoaXMuZWNoYXJ0c0FmdGVyTGlzdCwKICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9KTsKICAgIH0sCiAgICBzdWNjZXNzU3VibWl0OiBmdW5jdGlvbiBzdWNjZXNzU3VibWl0KGZsYWcpIHsKICAgICAgdGhpcy5vcGVuID0gZmxhZzsKICAgICAgdGhpcy5mcmVzaFRhYmxlKCk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbCgpIHsKICAgICAgdGhpcy5vcGVuID0gZmFsc2U7CiAgICAgIHRoaXMuZnJlc2hUYWJsZSgpOwogICAgfSwKICAgIHN1Y2Nlc3NTdWJtaXREZXRhaWw6IGZ1bmN0aW9uIHN1Y2Nlc3NTdWJtaXREZXRhaWwoZmxhZykgewogICAgICB0aGlzLmRldGFpbE9wZW4gPSBmbGFnOwogICAgICB0aGlzLmZyZXNoVGFibGUoKTsKICAgIH0sCiAgICAvLyDlj5bmtojmjInpkq4KICAgIGNhbmNlbERldGFpbDogZnVuY3Rpb24gY2FuY2VsRGV0YWlsKCkgewogICAgICB0aGlzLmRldGFpbE9wZW4gPSBmYWxzZTsKICAgICAgdGhpcy5mcmVzaFRhYmxlKCk7CiAgICB9LAogICAgLy8g6KGo5Y2V6YeN572uCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHRoaXMuZm9ybSA9IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICBjb21wQ29kZTogbnVsbCwKICAgICAgICBhY2NvdW50Q29kZTogbnVsbCwKICAgICAgICByZXZlbnVlQ29kZTogbnVsbCwKICAgICAgICByZWNlaXZlTnVtOiBudWxsLAogICAgICAgIGFjdHVhbE51bTogbnVsbCwKICAgICAgICBkcGV0Q29kZTogbnVsbCwKICAgICAgICBvY2N1cmVUaW1lOiBnZXRZZWFyTW9udGgyKCksCiAgICAgICAgcmV2ZW51ZVR5cGU6IG51bGwsCiAgICAgICAgcmV2ZW51ZUtpbmQ6IG51bGwsCiAgICAgICAgZGVsRmxhZzogbnVsbCwKICAgICAgICBjcmVhdGVCeTogbnVsbCwKICAgICAgICBjcmVhdGVUaW1lOiBudWxsLAogICAgICAgIHVwZGF0ZUJ5OiBudWxsLAogICAgICAgIHVwZGF0ZVRpbWU6IG51bGwsCiAgICAgICAgcmVtYXJrOiBudWxsLAogICAgICAgIHNldHRsZVR5cGU6IG51bGwKICAgICAgfTsKICAgIH0sCiAgICAvKiog5pCc57Si5oyJ6ZKu5pON5L2cICovaGFuZGxlUXVlcnk6IGZ1bmN0aW9uIGhhbmRsZVF1ZXJ5KCkgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnBhZ2VOdW0gPSAxOwogICAgICB0aGlzLmZyZXNoVGFibGUoKTsKICAgIH0sCiAgICAvKiog6YeN572u5oyJ6ZKu5pON5L2cICovcmVzZXRRdWVyeTogZnVuY3Rpb24gcmVzZXRRdWVyeSgpIHsKICAgICAgdGhpcy5yZXNldEZvcm0oInF1ZXJ5Rm9ybSIpOwogICAgICB0aGlzLmFjdGl2ZU5hbWUgPSAncmVzb2x2ZVByZSc7CiAgICAgIHRoaXMuZnJlc2hUYWJsZSgpOwogICAgfSwKICAgIHJvd1N0eWxlOiBmdW5jdGlvbiByb3dTdHlsZShfcmVmKSB7CiAgICAgIHZhciByb3cgPSBfcmVmLnJvdywKICAgICAgICByb3dJbmRleCA9IF9yZWYucm93SW5kZXg7CiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyb3csICdyb3dJbmRleCcsIHsKICAgICAgICB2YWx1ZTogcm93SW5kZXgsCiAgICAgICAgd3JpdGFibGU6IHRydWUsCiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgcm93Q2xhc3NOYW1lOiBmdW5jdGlvbiByb3dDbGFzc05hbWUoX3JlZjIpIHsKICAgICAgdmFyIHJvdyA9IF9yZWYyLnJvdywKICAgICAgICByb3dJbmRleCA9IF9yZWYyLnJvd0luZGV4OwogICAgICB2YXIgcm93TmFtZSA9ICIiLAogICAgICAgIGZpbmRSb3cgPSB0aGlzLnNlbGVjdGlvblJvdy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICByZXR1cm4gYy5yb3dJbmRleCA9PT0gcm93LnJvd0luZGV4OwogICAgICAgIH0pOwogICAgICBpZiAoZmluZFJvdykgewogICAgICAgIHJvd05hbWUgPSAiY3VycmVudC1yb3cgIjsKICAgICAgfQogICAgICByZXR1cm4gcm93TmFtZTsKICAgIH0sCiAgICAvKiog5paw5aKe5oyJ6ZKu5pON5L2cICovaGFuZGxlQWRkOiBmdW5jdGlvbiBoYW5kbGVBZGQoKSB7CiAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgIHRoaXMudGl0bGUgPSAi5re75Yqg5pS25YWl55Sf5oiQIjsKICAgIH0sCiAgICAvL+aYjue7hgogICAgaGFuZGxlVXBkYXRlOiBmdW5jdGlvbiBoYW5kbGVVcGRhdGUocm93KSB7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgdmFyIG9iaiA9IHt9OwogICAgICBzd2l0Y2ggKHRoaXMuc2VsZWN0aW9uUm93WzBdLm5hbWUpIHsKICAgICAgICBjYXNlICfpl6jor4rmlLblhaUnOgogICAgICAgICAgb2JqID0gewogICAgICAgICAgICByZXZlbnVlVHlwZTogMSwKICAgICAgICAgICAgcmV2ZW51ZUtpbmQ6IDEKICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICfpl6jor4rpmYTliqDmlLblhaUnOgogICAgICAgICAgb2JqID0gewogICAgICAgICAgICByZXZlbnVlVHlwZTogMSwKICAgICAgICAgICAgcmV2ZW51ZUtpbmQ6IDIKICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICfkvY/pmaLmlLblhaUnOgogICAgICAgICAgb2JqID0gewogICAgICAgICAgICByZXZlbnVlVHlwZTogMiwKICAgICAgICAgICAgcmV2ZW51ZUtpbmQ6IDEKICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICfkvY/pmaLpmYTliqDmlLblhaUnOgogICAgICAgICAgb2JqID0gewogICAgICAgICAgICByZXZlbnVlVHlwZTogMiwKICAgICAgICAgICAgcmV2ZW51ZUtpbmQ6IDIKICAgICAgICAgIH07CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgb2JqID0ge307CiAgICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHRoaXMuYWN0aXZlTmFtZSA9PSAicmVzb2x2ZU5leHQiKSB7CiAgICAgICAgdGhpcy50eXBlID0gJ3Jlc29sdmVBZnRlcic7CiAgICAgICAgdGhpcy5mb3JtID0gX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBwYWdlTnVtOiAxLAogICAgICAgICAgcGFnZVNpemU6IDMwLAogICAgICAgICAgY29tcENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuYWNjb3VudEluZm8uZGVwdElkLAogICAgICAgICAgb1RpbWU6IHRoaXMucXVlcnlQYXJhbXMub2NjdXJlVGltZSwKICAgICAgICAgIHNldHRsZVR5cGU6IHRoaXMucXVlcnlQYXJhbXMuc2V0dGxlVHlwZQogICAgICAgIH0sIG9iaik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50eXBlID0gJ3Jlc29sdmVCZWZvcmUnOwogICAgICAgIHRoaXMuZm9ybSA9IF9vYmplY3RTcHJlYWQoewogICAgICAgICAgcGFnZU51bTogMSwKICAgICAgICAgIHBhZ2VTaXplOiAzMCwKICAgICAgICAgIGNvbXBDb2RlOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLmFjY291bnRJbmZvLmRlcHRJZCwKICAgICAgICAgIG9jY3VyZVQ6IHRoaXMucXVlcnlQYXJhbXMub2NjdXJlVGltZSwKICAgICAgICAgIHNldHRsZU1hcms6IHRoaXMucXVlcnlQYXJhbXMuc2V0dGxlVHlwZQogICAgICAgIH0sIG9iaik7CiAgICAgIH0KICAgICAgdGhpcy5kZXRhaWxPcGVuID0gdHJ1ZTsKICAgIH0KICB9Cn07"},null]}