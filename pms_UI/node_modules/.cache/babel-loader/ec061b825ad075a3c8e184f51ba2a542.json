{"remainingRequest":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\basic\\relationStore\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\src\\views\\basic\\relationStore\\index.vue","mtime":1682043104338},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\babel.config.js","mtime":1682043101067},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1682058380827},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1682058377348},{"path":"D:\\ys+jx\\ys+jx\\zjry-pms-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1682058381348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;AAmJA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACA;MACAC;MACAC;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAxB;QACAyB;MACA;MACA;MACAC;QACAL;QACAC;QACAtB;QACAH;QACAC;QACA6B;QACAJ;QACAE;MACA;MACA;MACAG;QACAP;QACAC;QACAtB;QACAH;QACAC;QACA6B;QACAJ;QACAE;MACA;MACA;MACAI;MACA;MACAC;MACAC;MACAC;QAAAC;QAAAC;MAAA;MACAC;QAAAF;QAAAC;MAAA;MACAE;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACAD;MACA;MACAE;QACAC;MACA;IACA;IACA3B;MACA;IACA;IACAD;MACA;IACA;EACA;EACA6B;IAAA;IACA;IACA;MACA;IACA;EACA;EACAC;IAAA;IACA;MACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACAC;MACA;MACA;MACA;MACAC;MACA;IACA;IACAC;MAAA;QAAAC;MACAC;IACA;IACA,iBACAC;MAAA;MACA;MACA;QACA;UACA;UACA;QACA;UACA;QACA;QACA;MACA;IACA;IACA,eACAC;MAAA;MACA;MACA;QACA;UACA;UACA;QACA;UACA;QACA;QACA;MACA;IACA;IACA,oBACAC;MAAA;MACA;MACA;QACA;QACA;UACA;YACA;YACAC;YACA;YACA;UAEA;YACA;UACA;QACA;MACA;IACA;IACA,mBACAC;MAAA;MACA;MACA;QACA;QACA;UACA;YACA;YACAD;YACA;YACA;UACA;YACA;UACA;QACA;MACA;IACA;IACAE;MACA;MACA;IACA;IAEA,iBACAC;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IAEA,iBACAC;MACA;MACA;IACA;IACA,kBACAC;MACA;MACA;IACA;IACA,iBACAC;MACA;MACA;IACA;IACA,aACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QAAA;MAAA;MACA;QACAC;QACA;MACA;MACAA;MACAA;IACA;IACA;IACAC;MACA;MACA;QACAD;QACAA,mCACAE,iCACA,KACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;MACA;MACA;MACA;QAAA;MAAA;MACA;MACA;MAEA;QACA;MACA;QACA;QACA;QACA;MACA;MAEA;QACA;MACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;QACAC;QACAA;QACAH;MACA;QACAA;MACA;QACAA;MACA;MACA;MACA;MACAd;MAEA;QACA,kBAMAc;UALA3E;UACAC;UACAC;UACAE;UACAD;QAEA;UACAH;UACAC;UACAC;UACAE;UACAD;QACA;QACA;UAAA;QAAA;QACA;MACA;IACA;IACA;IACA4E;MACA;IACA;IACAC;IACA;IACAC;MACA;MACA;QACAC;QACAA,wCACAP,iCACA,KACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;MAEA;QACA,mBAMAA;UALA3E;UACAC;UACAC;UACAE;UACAD;QAEA;UACAH;UACAC;UACAC;UACAE;UACAD;QACA;QACA,uDACA;UAAA;QAAA,EACA;QAEA0D;MACA;IACA;IACA,aACAsB;MAAA;MACA;MACA,cACA,sCACA,MACA;QACAC;QACAC;QACAC;MACA,EACA;QACA;UACAC;UACAC;QACA;QACA;UACA;YACA;YACA;UACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA;AAAA","names":["name","components","addEdit","data","loading","storeListRelationLoading","storeListLoading","exportLoading","idsRelation","storeCode","storeName","storeType","compCode","compName","addEditId","relationCodePost","storeCodeList","singleRelation","multiple","showSearch","showSearchRelation","showSearchStore","showSearchStoreRelation","totalRelation","totalStore","totalStoreRelation","relationStoreList","relationList","storeList","storeListRelation","title","open","queryParamsRelation","pageNum","pageSize","relaCode","relaName","queryCode","queryParamsStore","isRelation","queryParamsStoreRelation","form","rules","storeTypeOptions","defaultSortRelation","prop","order","defaultSort","selectionRelationRow","tableHeight","stableHeight","selectionTopRow","computed","listData","watch","setTimeout","that","created","mounted","window","methods","resizeHandler","h","sh","tableRowClassName","rowIndex","row","getList","getListRelation","getListStore","console","getListStoreRelation","successSubmit","handleAddRelation","storeTypeFormat","cancel","handleQueryRelation","handleQueryStore","handleQueryStoreRelation","resetQuery","handleSortChangeRelation","handleRowClickRelation","relationListRef","handleSelectionChangeRelation","selection","handleSelectionChangeStore","selectionStore","storeListRef","handleSelectionChangeStoreRelation","handleTopSortChange","selectionStoreRelation","storeListRelationRef","handleAdd","confirmButtonText","cancelButtonText","type","relationCode","assetsBasicStoreList"],"sourceRoot":"src/views/basic/relationStore","sources":["index.vue"],"sourcesContent":["<template>\n<!-- 仓库关系设置 -->\n    <div class=\"app-container\">\n      <div ref=\"btns\">\n          <el-row :gutter=\"10\" class=\"mb8\">\n            <el-col :span=\"1.5\">\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-box\"\n                size=\"mini\"\n                @click=\"handleAdd\"\n                :disabled=\"singleRelation\"\n                v-hasPermi=\"['basic:relationStore:add']\"\n              >保存</el-button>\n            </el-col>\n            <el-col :span=\"1.5\">\n              <el-button\n                icon=\"el-icon-refresh\"\n                size=\"mini\"\n                @click=\"resetQuery\">重置</el-button>\n            </el-col>\n            <el-col :span=\"1.5\">\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-plus\"\n                size=\"mini\"\n                @click=\"handleAddRelation\"\n                v-hasPermi=\"['basic:relationStore:add']\"\n              >关系分类</el-button>\n            </el-col>\n            <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getListRelation\"></right-toolbar>\n          </el-row>\n      </div>\n\n\n      <el-row :gutter=\"15\">\n        <el-col :span=\"12\" >\n          <el-card>\n          <div ref=\"search\">\n            <el-form :model=\"queryParamsRelation\" ref=\"queryFormRelation\" :inline=\"true\" v-show=\"showSearchRelation\" label-width=\"68px\">\n              <el-form-item label=\"\" prop=\"queryCode\" >\n                <el-input\n                  v-model=\"queryParamsRelation.queryCode\"\n                  placeholder=\"输入信息（关系、单位）\"\n                  clearable\n                  size=\"small\"\n                  @input=\"handleQueryRelation\"\n                  @keyup.enter.native=\"handleQueryRelation\"\n                />\n              </el-form-item>\n            </el-form>\n          </div>\n\n          <el-table v-loading=\"loading\" :height=\"tableHeight\"  ref=\"relationListRef\" :data=\"relationList\" @selection-change=\"handleSelectionChangeRelation\" stripe :default-sort=\"defaultSortRelation\" @sort-change=\"handleSortChangeRelation\"  highlight-current-row @row-click=\"handleRowClickRelation\">\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n            <el-table-column label=\"对应关系编码\" align=\"left\" key=\"relaCode\" prop=\"relaCode\" />\n            <el-table-column label=\"对应关系名称\" align=\"left\" key=\"relaName\" prop=\"relaName\" />\n            <el-table-column label=\"单位\" align=\"left\" key=\"compName\" prop=\"compName\"/>\n          </el-table>\n          <pagination\n            v-show=\"totalRelation>0\"\n            :total=\"totalRelation\"\n            :page.sync=\"queryParamsRelation.pageNum\"\n            :limit.sync=\"queryParamsRelation.pageSize\"\n            @pagination=\"getListRelation\"\n          />\n        </el-card>\n        </el-col>\n        <el-col :span=\"12\" >\n          <el-col :span=\"24\" class=\"mb10\">\n            <el-card>\n            <div ref=\"ssearch\">\n             <el-form :model=\"queryParamsStoreRelation\" ref=\"queryFormStoreRelation\" :inline=\"true\" v-show=\"showSearchStoreRelation\" label-width=\"68px\" row-class-name=\"tableRowClassName\">\n              <el-col :span=\"24\">\n                <el-form-item  label=\"已选仓库\" prop=\"\">\n                </el-form-item>\n              </el-col>\n              <el-form-item  label=\"\" prop=\"queryCode\">\n                <el-input\n                  v-model=\"queryParamsStoreRelation.queryCode\"\n                  placeholder=\"输入信息（仓库、单位）\"\n                  clearable\n                  size=\"small\"\n                  @keyup.enter.native=\"handleQueryStoreRelation\"\n                  @input=\"handleQueryStoreRelation\"\n                />\n              </el-form-item>\n            </el-form>\n            </div>\n            <el-table v-loading=\"storeListRelationLoading\"  :data=\"storeListRelation\" :height=\"stableHeight\" ref=\"storeListRelationRef\"  @selection-change=\"handleSelectionChangeStoreRelation\" @select=\"selectionStoreRelation\" stripe :default-sort=\"defaultSort\" @sort-change=\"handleTopSortChange\"  highlight-current-row>\n              <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n              <el-table-column label=\"仓库编码\" align=\"center\" prop=\"storeCode\" />\n              <el-table-column label=\"仓库名称\" align=\"left\" prop=\"storeName\" show-overflow-tooltip/>\n              <el-table-column label=\"库房分类\" align=\"center\" prop=\"storeType\" :formatter=\"storeTypeFormat\" />\n              <el-table-column label=\"单位\" align=\"left\" prop=\"compName\" show-overflow-tooltip/>\n            </el-table>\n            <pagination\n              v-show=\"totalStoreRelation>0\"\n              :total=\"totalStoreRelation\"\n              :page.sync=\"queryParamsStoreRelation.pageNum\"\n              :limit.sync=\"queryParamsStoreRelation.pageSize\"\n              @pagination=\"getListStoreRelation\"\n            />\n            </el-card>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-card>\n            <el-form :model=\"queryParamsStore\" ref=\"queryFormStore\" :inline=\"true\" v-show=\"showSearchStore\" label-width=\"68px\" row-class-name=\"tableRowClassName\">\n              <el-col :span=\"24\">\n                <el-form-item  label=\"待选仓库\" prop=\"\">\n                </el-form-item>\n              </el-col>\n              <el-form-item  label=\"\" prop=\"queryCode\">\n                <el-input\n                  v-model=\"queryParamsStore.queryCode\"\n                  placeholder=\"输入信息（仓库、单位）\"\n                  clearable\n                  size=\"small\"\n                  @keyup.enter.native=\"handleQueryStore\"\n                  @input=\"handleQueryStore\"\n                />\n              </el-form-item>\n            </el-form>\n            <el-table  v-loading=\"storeListLoading\" :data=\"storeList\" :height=\"stableHeight\" ref=\"storeListRef\"  @selection-change=\"handleSelectionChangeStore\" @select=\"selectionStore\" stripe>\n              <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n              <el-table-column label=\"仓库编码\" align=\"left\" prop=\"storeCode\" />\n              <el-table-column label=\"仓库名称\" align=\"left\" prop=\"storeName\" show-overflow-tooltip/>\n              <el-table-column label=\"库房分类\" align=\"left\" prop=\"storeType\" :formatter=\"storeTypeFormat\" />\n              <el-table-column label=\"单位\" align=\"left\" prop=\"compName\" show-overflow-tooltip/>\n            </el-table>\n            <pagination\n              v-show=\"totalStore>0\"\n              :total=\"totalStore\"\n              :page.sync=\"queryParamsStore.pageNum\"\n              :limit.sync=\"queryParamsStore.pageSize\"\n              @pagination=\"getListStore\"\n            />\n          </el-card>\n          </el-col>\n        </el-col>\n\n      </el-row>\n      <addEdit v-if=\"open\" :open=\"open\" :id=\"addEditId\"  @cancel=\"cancel\" @success=\"successSubmit\"></addEdit>\n    </div>\n</template>\n\n<script>\nimport { listRelationStore, addRelationStore } from \"@/api/basic/relationStore\";\nimport { listStoreRelation } from \"@/api/basic/store\";\nimport { listRelation } from \"@/api/basic/relation\";\nimport addEdit from \"@/views/basic/relation/indexAdd\";\nimport { truncate } from 'fs';\n\nexport default {\n  name: \"RelationStore\",\n  components: {\n    addEdit // 新增修改\n  },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      storeListRelationLoading:false,\n      storeListLoading:false,\n      // 导出遮罩层\n      exportLoading: false,\n      // 关系分类选中数组\n      idsRelation: [],\n      // 仓库编码\n      storeCode: [],\n      // 仓库名称\n      storeName: [],\n      // 仓库分类\n      storeType: [],\n      // 单位编码\n      compCode: [],\n      // 单位\n      compName: [],\n      //分类关系传参ID\n      addEditId: \"\",\n      // 选择关系分类编码\n      relationCodePost: [],\n      // 选择关联仓库列表\n      storeCodeList: [],\n      // 非单个禁用\n      singleRelation: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 显示关系分类搜索条件\n      showSearchRelation: true,\n      // 显示未关联仓库搜索条件\n      showSearchStore: true,\n      // 显示用户关联仓库搜索条件\n      showSearchStoreRelation: true,\n      // 用户总条数\n      totalRelation: 0,\n      // 未关联仓库总条数\n      totalStore: 0,\n      // 用户关联仓库总条数\n      totalStoreRelation: 0,\n      // 用户仓库关联表格数据\n      relationStoreList: [],\n      // 关系分类数据\n      relationList: [],\n      // 用户未关联仓库数据\n      storeList: [],\n      // 用户关联仓库数据\n      storeListRelation: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      //关系分类查询参数\n      queryParamsRelation: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        relaCode: null,\n        relaName: null,\n        compCode: null,\n        queryCode: null\n      },\n      //用户未关联仓库查询参数\n      queryParamsStore: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        compCode: null,\n        storeCode: null,\n        storeName: null,\n        isRelation: null,\n        relaCode: null,\n        queryCode: null\n      },\n      //用户关联关系分类查询参数\n      queryParamsStoreRelation: {\n        pageNum: 1,\n        pageSize: this.$store.state.settings.pageSize,\n        compCode: null,\n        storeCode: null,\n        storeName: null,\n        isRelation: null,\n        relaCode: null,\n        queryCode: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {},\n      storeTypeOptions: [],\n      defaultSortRelation: { prop: \"createTime\", order: \"descending\" },\n      defaultSort: { prop: \"createTime\", order: \"descending\" },\n      selectionRelationRow: [],\n      tableHeight: \"auto\",\n      stableHeight: \"auto\",\n      selectionTopRow: []\n    };\n  },\n  computed: {\n    listData() {\n      return this.$store.state.app.sidebar.opened;\n    }\n  },\n  watch: {\n    listData(val) {\n      var that = this;\n      setTimeout(function() {\n        that.resizeHandler();\n      }, 300);\n    },\n    storeListRelation(val) {\n      this.totalStoreRelation = val.length;\n    },\n    storeList(val) {\n      this.totalStore = val.length;\n    }\n  },\n  created() {\n    this.getListRelation();\n    this.getDicts(\"basic_store_type\").then(response => {\n      this.storeTypeOptions = response.data;\n    });\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.resizeHandler();\n      window.addEventListener(\"resize\", this.resizeHandler);\n    });\n  },\n  methods: {\n    resizeHandler() {\n      let a = this.$refs.search.offsetHeight;\n      let b = this.$refs.btns.offsetHeight;\n      let h = a + b + this.$store.state.settings.tableHeight + 24;\n      h = h + \"px\";\n      this.tableHeight = `calc(100vh - ${h})`;\n      let c = this.$refs.ssearch.offsetHeight;\n      let sh = b + c + this.$store.state.settings.tableHeight + 160;\n      sh = sh + \"px\";\n      this.stableHeight = `calc((100vh - ${sh})/2)`;\n    },\n    tableRowClassName({ row, rowIndex }) {\n      row.row_index = rowIndex;\n    },\n    /** 查询仓库关系设置列表 */\n    getList() {\n      this.loading = true;\n      listRelationStore(this.queryParams).then(response => {\n        if (response.code == 200) {\n          this.relationStoreList = response.rows;\n          this.total = response.total;\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    /** 查询关系分类列表 */\n    getListRelation() {\n      this.loading = true;\n      listRelation(this.queryParamsRelation).then(response => {\n        if (response.code == 200) {\n          this.relationList = response.rows;\n          this.totalRelation = response.total;\n        } else {\n          this.msgError(response.msg);\n        }\n        this.loading = false;\n      });\n    },\n    /** 查询非关系分类关联仓库列表 */\n    getListStore() {\n      this.queryParamsStore.isRelation = \"2\";\n      if (this.queryParamsStore.relaCode != null) {\n        this.storeListLoading = true\n        listStoreRelation(this.queryParamsStore).then(response => {\n          if (response.code == 200) {\n            this.storeList = response.rows;\n            console.log(this.storeList, \"store\");\n            this.totalStore = response.total;\n            this.storeListLoading = false            \n\n          } else {\n            this.msgError(response.msg);\n          }\n        });\n      }\n    },\n    /** 查询关系分类关联仓库列表 */\n    getListStoreRelation() {\n      this.queryParamsStoreRelation.isRelation = \"1\";\n      if (this.queryParamsStoreRelation.relaCode != null) {\n        this.storeListRelationLoading = true\n        listStoreRelation(this.queryParamsStoreRelation).then(response => {\n          if (response.code == 200) {\n            this.storeListRelation = response.rows;\n            console.log(this.storeListRelation, \"storeRelation\");\n            this.totalStoreRelation = response.total;\n            this.storeListRelationLoading = false            \n          } else {\n            this.msgError(response.msg);\n          }\n        });\n      }\n    },\n    successSubmit(flag) {\n      this.open = flag;\n      this.getListRelation();\n    },\n\n    /** 新增关系分类按钮操作 */\n    handleAddRelation() {\n      this.open = true; // 弹框点开\n      this.addEditId = \"\"; // addEditId 是新增  去子组件方便区分新增编辑\n    },\n\n    // 库房分类字典翻译\n    storeTypeFormat(row, column) {\n      return this.selectDictLabel(this.storeTypeOptions, row.storeType);\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.getListRelation();\n    },\n\n    /** 关系分类搜索按钮操作 */\n    handleQueryRelation() {\n      this.queryParamsRelation.pageNum = 1;\n      this.getListRelation();\n    },\n    /** 未关联仓库搜索按钮操作 */\n    handleQueryStore() {\n      this.queryParamsStore.pageNum = 1;\n      this.getListStore();\n    },\n    /** 关联仓库搜索按钮操作 */\n    handleQueryStoreRelation() {\n      this.queryParamsStoreRelation.pageNum = 1;\n      this.getListStoreRelation();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryFormRelation\");\n      this.resetForm(\"queryFormStore\");\n      this.resetForm(\"queryFormStoreRelation\");\n      this.handleQuery();\n    },\n    handleSortChangeRelation(column, prop, order) {\n      this.queryParams.orderByColumn = column.prop;\n      this.queryParams.isAsc = column.order;\n      this.getList();\n    },\n    handleRowClickRelation(row) {\n      let relationListRef = this.$refs.relationListRef;\n      let findRow = this.selectionRelationRow.find(c => c.id == row.id);\n      if (findRow) {\n        relationListRef.toggleRowSelection(row, false);\n        return;\n      }\n      relationListRef.clearSelection(); //清空列表的选中\n      relationListRef.toggleRowSelection(row, true);\n    },\n    // 多选框选中数据\n    handleSelectionChangeRelation(selection) {\n      let relationListRef = this.$refs.relationListRef;\n      if (selection.length > 1) {\n        relationListRef.clearSelection(); //清空列表的选中\n        relationListRef.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRelationRow = selection;\n      this.idsRelation = selection.map(item => item.relaCode);\n      this.singleRelation = selection.length !== 1;\n      this.multiple = !selection.length;\n\n      if (selection.length !== 1) {\n        this.storeList = [];\n      } else {\n        this.queryParamsStore.relaCode = this.idsRelation[0];\n        this.relationCodePost = this.idsRelation[0];\n        this.getListStore();\n      }\n\n      if (selection.length !== 1) {\n        this.storeListRelation = [];\n      } else {\n        this.queryParamsStoreRelation.relaCode = this.idsRelation[0];\n        this.getListStoreRelation();\n      }\n    },\n    // 仓库多选框选中数据\n    handleSelectionChangeStore(selection) {\n      /*this.idsStore = selection.map(item => item.storeCode)*/\n    },\n\n    // 仓库多选框选中数据\n    selectionStore(selection, row) {\n      let storeListRef = this.$refs.storeListRef;\n      if (selection.length > 1) {\n        storeListRef.clearSelection(); //清空列表的选中\n        storeListRef.toggleRowSelection(selection[selection.length - 1], true); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n      // 方便点击行取消选中\n      this.selectionRow = selection;\n      console.log(this.selectionRow, \"this.selectionRow\");\n\n      if (selection.length == 1) {\n        let {\n          storeCode,\n          storeName,\n          storeType,\n          compName,\n          compCode\n        } = selection[0];\n        this.storeListRelation.push({\n          storeCode,\n          storeName,\n          storeType,\n          compName,\n          compCode\n        });\n        this.storeList = this.storeList.filter(el => el.id != selection[0].id);\n        // this.storeList.splice(row.row_index, 1);\n      }\n    },\n    // 关联关系分类仓库多选框选中数据\n    handleSelectionChangeStoreRelation(selection) {\n      /* this.idsStoreRelation = selection.map(item => item.storeCode)*/\n    },\n    handleTopSortChange() {},\n    // 关联用户仓库多选框选中数据\n    selectionStoreRelation(selection, row) {\n      let storeListRelationRef = this.$refs.storeListRelationRef;\n      if (selection.length > 1) {\n        storeListRelationRef.clearSelection(); //清空列表的选中\n        storeListRelationRef.toggleRowSelection(\n          selection[selection.length - 1],\n          true\n        ); //只显示选中最后一个 这时selection还是多选的列表(就是你选中的几个数据)\n        selection = Array(selection[selection.length - 1]);\n      } else if (selection.length === 1) {\n        selection = Array(selection[selection.length - 1]);\n      } else {\n        selection = [];\n      }\n\n      if (selection.length == 1) {\n        let {\n          storeCode,\n          storeName,\n          storeType,\n          compName,\n          compCode\n        } = selection[0];\n        this.storeList.push({\n          storeCode,\n          storeName,\n          storeType,\n          compName,\n          compCode\n        });\n        this.storeListRelation = this.storeListRelation.filter(\n          el => el.storeCode != selection[0].storeCode\n        );\n\n        console.log(this.storeListRelation);\n      }\n    },\n    /** 保存按钮操作 */\n    handleAdd(row) {\n      const ids = this.idsRelation[0];\n      this.$confirm(\n        '是否确认保存关系分类编码为\"' + ids + '\"的关联仓库数据?',\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).then(() => {\n        let data = {\n          relationCode: this.relationCodePost,\n          assetsBasicStoreList: this.storeListRelation\n        };\n        addRelationStore(data).then(response => {\n          if (response.code == 200) {\n            this.getListRelation();\n            this.msgSuccess(\"保存成功\");\n          } else {\n            this.msgError(response.msg);\n          }\n        });\n      });\n    }\n  }\n};\n</script>\n"]}]}