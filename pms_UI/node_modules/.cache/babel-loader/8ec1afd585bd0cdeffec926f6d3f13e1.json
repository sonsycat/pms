{"remainingRequest":"F:\\pms_UI\\node_modules\\babel-loader\\lib\\index.js!F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\pms_UI\\src\\views\\tool\\gen\\editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\pms_UI\\src\\views\\tool\\gen\\editTable.vue","mtime":1693362206794},{"path":"F:\\pms_UI\\babel.config.js","mtime":1693361824517},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\babel-loader\\lib\\index.js","mtime":1693361909992},{"path":"F:\\pms_UI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1693361924439},{"path":"F:\\pms_UI\\node_modules\\vue-loader\\lib\\index.js","mtime":1693362179279}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJGOi9wbXNfVUkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzIikuZGVmYXVsdDsKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIik7CnZhciBfZ2VuID0gcmVxdWlyZSgiQC9hcGkvdG9vbC9nZW4iKTsKdmFyIF90eXBlID0gcmVxdWlyZSgiQC9hcGkvc3lzdGVtL2RpY3QvdHlwZSIpOwp2YXIgX21lbnUgPSByZXF1aXJlKCJAL2FwaS9zeXN0ZW0vbWVudSIpOwp2YXIgX2Jhc2ljSW5mb0Zvcm0gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vYmFzaWNJbmZvRm9ybSIpKTsKdmFyIF9nZW5JbmZvRm9ybSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9nZW5JbmZvRm9ybSIpKTsKdmFyIF9zb3J0YWJsZWpzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJzb3J0YWJsZWpzIikpOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQgPSB7CiAgbmFtZTogJ0dlbkVkaXQnLAogIGNvbXBvbmVudHM6IHsKICAgIGJhc2ljSW5mb0Zvcm06IF9iYXNpY0luZm9Gb3JtLmRlZmF1bHQsCiAgICBnZW5JbmZvRm9ybTogX2dlbkluZm9Gb3JtLmRlZmF1bHQKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDpgInkuK3pgInpobnljaHnmoQgbmFtZQogICAgICBhY3RpdmVOYW1lOiAnY2xvdW0nLAogICAgICAvLyDooajmoLznmoTpq5jluqYKICAgICAgdGFibGVIZWlnaHQ6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQgLSAyNDUgKyAncHgnLAogICAgICAvLyDooajkv6Hmga8KICAgICAgdGFibGVzOiBbXSwKICAgICAgLy8g6KGo5YiX5L+h5oGvCiAgICAgIGNsb3VtbnM6IFtdLAogICAgICAvLyDlrZflhbjkv6Hmga8KICAgICAgZGljdE9wdGlvbnM6IFtdLAogICAgICAvLyDoj5zljZXkv6Hmga8KICAgICAgbWVudXM6IFtdLAogICAgICAvLyDooajor6bnu4bkv6Hmga8KICAgICAgaW5mbzoge30sCiAgICAgIC8vIOWtl+WFuGRpYWxvZwogICAgICBkaWN0U2VhcmNoRGlhbG9nOiBmYWxzZSwKICAgICAgLy8gc2VsZWN057uR5a6a5YC8CiAgICAgIGRpY3RUeXBlOiAnJywKICAgICAgLy8g6KGM57Si5byVCiAgICAgIHJvd0luZGV4OiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgdmFyIHRhYmxlSWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMgJiYgdGhpcy4kcm91dGUucGFyYW1zLnRhYmxlSWQ7CiAgICBpZiAodGFibGVJZCkgewogICAgICAvLyDojrflj5booajor6bnu4bkv6Hmga8KICAgICAgKDAsIF9nZW4uZ2V0R2VuVGFibGUpKHRhYmxlSWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLmNsb3VtbnMgPSByZXMuZGF0YS5yb3dzOwogICAgICAgIF90aGlzLmluZm8gPSByZXMuZGF0YS5pbmZvOwogICAgICAgIF90aGlzLnRhYmxlcyA9IHJlcy5kYXRhLnRhYmxlczsKICAgICAgfSk7CiAgICAgIC8qKiDmn6Xor6LlrZflhbjkuIvmi4nliJfooaggKi8KICAgICAgKDAsIF90eXBlLm9wdGlvbnNlbGVjdCkoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmRpY3RPcHRpb25zID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSk7CiAgICAgIC8qKiDmn6Xor6Loj5zljZXkuIvmi4nliJfooaggKi8KICAgICAgKDAsIF9tZW51Lmxpc3RNZW51KSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubWVudXMgPSBfdGhpcy5oYW5kbGVUcmVlKHJlc3BvbnNlLmRhdGEsICdtZW51SWQnKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKiog5o+Q5Lqk5oyJ6ZKuICovc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHZhciBiYXNpY0Zvcm0gPSB0aGlzLiRyZWZzLmJhc2ljSW5mby4kcmVmcy5iYXNpY0luZm9Gb3JtOwogICAgICB2YXIgZ2VuRm9ybSA9IHRoaXMuJHJlZnMuZ2VuSW5mby4kcmVmcy5nZW5JbmZvRm9ybTsKICAgICAgUHJvbWlzZS5hbGwoW2Jhc2ljRm9ybSwgZ2VuRm9ybV0ubWFwKHRoaXMuZ2V0Rm9ybVByb21pc2UpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgdmFsaWRhdGVSZXN1bHQgPSByZXMuZXZlcnkoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiAhIWl0ZW07CiAgICAgICAgfSk7CiAgICAgICAgaWYgKHZhbGlkYXRlUmVzdWx0KSB7CiAgICAgICAgICB2YXIgZ2VuVGFibGUgPSBPYmplY3QuYXNzaWduKHt9LCBiYXNpY0Zvcm0ubW9kZWwsIGdlbkZvcm0ubW9kZWwpOwogICAgICAgICAgZ2VuVGFibGUuY29sdW1ucyA9IF90aGlzMi5jbG91bW5zOwogICAgICAgICAgZ2VuVGFibGUucGFyYW1zID0gewogICAgICAgICAgICB0cmVlQ29kZTogZ2VuVGFibGUudHJlZUNvZGUsCiAgICAgICAgICAgIHRyZWVOYW1lOiBnZW5UYWJsZS50cmVlTmFtZSwKICAgICAgICAgICAgdHJlZVBhcmVudENvZGU6IGdlblRhYmxlLnRyZWVQYXJlbnRDb2RlLAogICAgICAgICAgICBwYXJlbnRNZW51SWQ6IGdlblRhYmxlLnBhcmVudE1lbnVJZAogICAgICAgICAgfTsKICAgICAgICAgICgwLCBfZ2VuLnVwZGF0ZUdlblRhYmxlKShnZW5UYWJsZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIF90aGlzMi5tc2dTdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgIF90aGlzMi5jbG9zZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLm1zZ0Vycm9yKCfooajljZXmoKHpqozmnKrpgJrov4fvvIzor7fph43mlrDmo4Dmn6Xmj5DkuqTlhoXlrrknKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGdldEZvcm1Qcm9taXNlOiBmdW5jdGlvbiBnZXRGb3JtUHJvbWlzZShmb3JtKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIGZvcm0udmFsaWRhdGUoZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmVzb2x2ZShyZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvKiog5YWz6Zet5oyJ6ZKuICovY2xvc2U6IGZ1bmN0aW9uIGNsb3NlKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndGFnc1ZpZXcvZGVsVmlldycsIHRoaXMuJHJvdXRlKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6ICcvdG9vbC9nZW4nLAogICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICB0OiBEYXRlLm5vdygpCiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvL+WIqeeUqOWNleWFg+agvOeahCBjbGFzc05hbWUg55qE5Zue6LCD5pa55rOV77yM57uZ6KGM5YiX57Si5byV6LWL5YC8CiAgICB0YWJsZUNlbGxDbGFzc05hbWU6IGZ1bmN0aW9uIHRhYmxlQ2VsbENsYXNzTmFtZShfcmVmKSB7CiAgICAgIHZhciByb3cgPSBfcmVmLnJvdywKICAgICAgICBjb2x1bW4gPSBfcmVmLmNvbHVtbiwKICAgICAgICByb3dJbmRleCA9IF9yZWYucm93SW5kZXgsCiAgICAgICAgY29sdW1uSW5kZXggPSBfcmVmLmNvbHVtbkluZGV4OwogICAgICAvL+azqOaEj+i/memHjOaYr+ino+aehAogICAgICByb3cuaW5kZXggPSByb3dJbmRleDsKICAgICAgY29sdW1uLmluZGV4ID0gY29sdW1uSW5kZXg7CiAgICB9LAogICAgLy8g5LiL5ouJ5qGG54K55Ye75LqL5Lu2CiAgICBoYW5kbGVDbGljazogZnVuY3Rpb24gaGFuZGxlQ2xpY2socm93KSB7CiAgICAgIGNvbnNvbGUubG9nKHJvdyk7CiAgICAgIHRoaXMuJHNldCh0aGlzLmNsb3VtbnNbcm93LmluZGV4XSwgJ2RpY3RPcHRpb25zJywgdGhpcy5kaWN0T3B0aW9ucyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICB2YXIgZWwgPSB0aGlzLiRyZWZzLmRyYWdUYWJsZS4kZWwucXVlcnlTZWxlY3RvckFsbCgnLmVsLXRhYmxlX19ib2R5LXdyYXBwZXIgPiB0YWJsZSA+IHRib2R5JylbMF07CiAgICB2YXIgc29ydGFibGUgPSBfc29ydGFibGVqcy5kZWZhdWx0LmNyZWF0ZShlbCwgewogICAgICBoYW5kbGU6ICcuYWxsb3dEcmFnJywKICAgICAgb25FbmQ6IGZ1bmN0aW9uIG9uRW5kKGV2dCkgewogICAgICAgIHZhciB0YXJnZXRSb3cgPSBfdGhpczMuY2xvdW1ucy5zcGxpY2UoZXZ0Lm9sZEluZGV4LCAxKVswXTsKICAgICAgICBfdGhpczMuY2xvdW1ucy5zcGxpY2UoZXZ0Lm5ld0luZGV4LCAwLCB0YXJnZXRSb3cpOwogICAgICAgIGZvciAodmFyIGluZGV4IGluIF90aGlzMy5jbG91bW5zKSB7CiAgICAgICAgICBfdGhpczMuY2xvdW1uc1tpbmRleF0uc29ydCA9IHBhcnNlSW50KGluZGV4KSArIDE7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9Cn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;AAiIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IAAA;IACA;IACA;MACA;MACA;QACA;QACA;QACA;MACA;MACA;MACA;QACA;MACA;MACA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA,WACAC;MAAA;MACA;MACA;MACAC;QACA;UAAA;QAAA;QACA;UACA;UACAC;UACAA;YACAC;YACAC;YACAC;YACAC;UACA;UACA;YACA;YACA;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;QACAC;UACAC;QACA;MACA;IACA;IACA,WACAC;MACA;MACA;QAAAC;QAAAC;UAAAC;QAAA;MAAA;IACA;IACA;IACAC;MAAA;QAAAC;QAAAlB;QAAAmB;MAAA;MACAC;MACAF;IACA;IACA;IACAG;MACAC;MACA;IACA;EACA;EACAC;IAAA;IACA;IACA;MACAC;MACAC;QACA;QACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA;AAAA","names":["name","components","basicInfoForm","genInfoForm","data","activeName","tableHeight","tables","cloumns","dictOptions","menus","info","dictSearchDialog","dictType","rowIndex","created","methods","submitForm","Promise","genTable","treeCode","treeName","treeParentCode","parentMenuId","getFormPromise","form","resolve","close","path","query","t","tableCellClassName","column","columnIndex","row","handleClick","console","mounted","handle","onEnd"],"sourceRoot":"src/views/tool/gen","sources":["editTable.vue"],"sourcesContent":["<template>\n  <el-card>\n    <el-tabs v-model=\"activeName\">\n      <el-tab-pane label=\"基本信息\" name=\"basic\">\n        <basic-info-form ref=\"basicInfo\" :info=\"info\"/>\n      </el-tab-pane>\n      <el-tab-pane label=\"字段信息\" name=\"cloum\">\n        <el-table border  ref=\"dragTable\" :data=\"cloumns\" row-key=\"columnId\" :max-height=\"tableHeight\"\n                  :cell-class-name=\"tableCellClassName\">\n          <el-table-column sortable label=\"序号\" type=\"index\" min-width=\"5%\" class-name=\"allowDrag\"/>\n          <el-table-column\n            label=\"字段列名\"\n            prop=\"columnName\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"字段描述\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.columnComment\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column\n            label=\"物理类型\"\n            prop=\"columnType\"\n            min-width=\"10%\"\n            :show-overflow-tooltip=\"true\"\n          />\n          <el-table-column sortable label=\"Java类型\" min-width=\"11%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.javaType\">\n                <el-option label=\"Long\" value=\"Long\"/>\n                <el-option label=\"String\" value=\"String\"/>\n                <el-option label=\"Integer\" value=\"Integer\"/>\n                <el-option label=\"Double\" value=\"Double\"/>\n                <el-option label=\"BigDecimal\" value=\"BigDecimal\"/>\n                <el-option label=\"Date\" value=\"Date\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"java属性\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.javaField\"></el-input>\n            </template>\n          </el-table-column>\n\n          <el-table-column sortable label=\"插入\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isInsert\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"编辑\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isEdit\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"列表\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isList\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isQuery\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"查询方式\" min-width=\"10%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.queryType\">\n                <el-option label=\"=\" value=\"EQ\"/>\n                <el-option label=\"!=\" value=\"NE\"/>\n                <el-option label=\">\" value=\"GT\"/>\n                <el-option label=\">=\" value=\"GTE\"/>\n                <el-option label=\"<\" value=\"LT\"/>\n                <el-option label=\"<=\" value=\"LTE\"/>\n                <el-option label=\"LIKE\" value=\"LIKE\"/>\n                <el-option label=\"BETWEEN\" value=\"BETWEEN\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"必填\" min-width=\"5%\">\n            <template slot-scope=\"scope\">\n              <el-checkbox true-label=\"1\" v-model=\"scope.row.isRequired\"></el-checkbox>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"显示类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select v-model=\"scope.row.htmlType\">\n                <el-option label=\"文本框\" value=\"input\"/>\n                <el-option label=\"文本域\" value=\"textarea\"/>\n                <el-option label=\"下拉框\" value=\"select\"/>\n                <el-option label=\"单选框\" value=\"radio\"/>\n                <el-option label=\"复选框\" value=\"checkbox\"/>\n                <el-option label=\"日期控件\" value=\"datetime\"/>\n                <el-option label=\"图片上传\" value=\"imageUpload\"/>\n                <el-option label=\"文件上传\" value=\"fileUpload\"/>\n                <el-option label=\"富文本控件\" value=\"editor\"/>\n              </el-select>\n            </template>\n          </el-table-column>\n          <el-table-column sortable label=\"字典类型\" min-width=\"12%\">\n            <template slot-scope=\"scope\">\n              <el-select clearable filterable placeholder=\"请选择\" v-model=\"scope.row.dictType\"\n                         v-on:click.native=\"handleClick(scope.row)\">\n                <el-option\n                  v-for=\"dict in scope.row.dictOptions\"\n                  :key=\"dict.dictType\"\n                  :label=\"dict.dictName\"\n                  :value=\"dict.dictType\">\n                  <span style=\"float: left\">{{ dict.dictName }}</span>\n                  <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ dict.dictType }}</span>\n                </el-option>\n              </el-select>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"生成信息\" name=\"genInfo\">\n        <gen-info-form ref=\"genInfo\" :info=\"info\" :tables=\"tables\" :menus=\"menus\"/>\n      </el-tab-pane>\n    </el-tabs>\n    <el-form label-width=\"100px\">\n      <el-form-item style=\"text-align: center;margin-left:-100px;margin-top:10px;\">\n        <el-button type=\"primary\" @click=\"submitForm()\">提交</el-button>\n        <el-button @click=\"close()\">返回</el-button>\n      </el-form-item>\n    </el-form>\n  </el-card>\n</template>\n<script>\n  import { getGenTable, updateGenTable } from '@/api/tool/gen'\n  import { optionselect as getDictOptionselect } from '@/api/system/dict/type'\n  import { listMenu as getMenuTreeselect } from '@/api/system/menu'\n  import basicInfoForm from './basicInfoForm'\n  import genInfoForm from './genInfoForm'\n  import Sortable from 'sortablejs'\n\n  export default {\n    name: 'GenEdit',\n    components: {\n      basicInfoForm,\n      genInfoForm\n    },\n    data() {\n      return {\n        // 选中选项卡的 name\n        activeName: 'cloum',\n        // 表格的高度\n        tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n        // 表信息\n        tables: [],\n        // 表列信息\n        cloumns: [],\n        // 字典信息\n        dictOptions: [],\n        // 菜单信息\n        menus: [],\n        // 表详细信息\n        info: {},\n        // 字典dialog\n        dictSearchDialog: false,\n        // select绑定值\n        dictType: '',\n        // 行索引\n        rowIndex: ''\n      }\n    },\n    created() {\n      const tableId = this.$route.params && this.$route.params.tableId\n      if (tableId) {\n        // 获取表详细信息\n        getGenTable(tableId).then(res => {\n          this.cloumns = res.data.rows\n          this.info = res.data.info\n          this.tables = res.data.tables\n        })\n        /** 查询字典下拉列表 */\n        getDictOptionselect().then(response => {\n          this.dictOptions = response.data\n        })\n        /** 查询菜单下拉列表 */\n        getMenuTreeselect().then(response => {\n          this.menus = this.handleTree(response.data, 'menuId')\n        })\n      }\n    },\n    methods: {\n      /** 提交按钮 */\n      submitForm() {\n        const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n        const genForm = this.$refs.genInfo.$refs.genInfoForm\n        Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n          const validateResult = res.every(item => !!item)\n          if (validateResult) {\n            const genTable = Object.assign({}, basicForm.model, genForm.model)\n            genTable.columns = this.cloumns\n            genTable.params = {\n              treeCode: genTable.treeCode,\n              treeName: genTable.treeName,\n              treeParentCode: genTable.treeParentCode,\n              parentMenuId: genTable.parentMenuId\n            }\n            updateGenTable(genTable).then(res => {\n              this.msgSuccess(res.msg)\n              if (res.code === 200) {\n                this.close()\n              }\n            })\n          } else {\n            this.msgError('表单校验未通过，请重新检查提交内容')\n          }\n        })\n      },\n      getFormPromise(form) {\n        return new Promise(resolve => {\n          form.validate(res => {\n            resolve(res)\n          })\n        })\n      },\n      /** 关闭按钮 */\n      close() {\n        this.$store.dispatch('tagsView/delView', this.$route)\n        this.$router.push({ path: '/tool/gen', query: { t: Date.now() } })\n      },\n      //利用单元格的 className 的回调方法，给行列索引赋值\n      tableCellClassName({ row, column, rowIndex, columnIndex }) {//注意这里是解构\n        row.index = rowIndex\n        column.index = columnIndex\n      },\n      // 下拉框点击事件\n      handleClick(row) {\n      \tconsole.log(row);\n        this.$set(this.cloumns[row.index], 'dictOptions', this.dictOptions)\n      }\n    },\n    mounted() {\n      const el = this.$refs.dragTable.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0]\n      const sortable = Sortable.create(el, {\n        handle: '.allowDrag',\n        onEnd: evt => {\n          const targetRow = this.cloumns.splice(evt.oldIndex, 1)[0]\n          this.cloumns.splice(evt.newIndex, 0, targetRow)\n          for (let index in this.cloumns) {\n            this.cloumns[index].sort = parseInt(index) + 1\n          }\n        }\n      })\n    }\n  }\n</script>\n"]}]}